'use strict';

const fs = require('fs');
const path = require('path');

function loadJSON(p) { return JSON.parse(fs.readFileSync(p, 'utf8')); }
function saveJSON(p, obj) { fs.writeFileSync(p, JSON.stringify(obj, null, 2), 'utf8'); }

// パターンごとの詳細な物語テンプレート
function generateRichNarrative(hexName, pattern, theme) {
  const narratives = {
    'JJJ': `まず、${theme.base}の第一段階として、${theme.quality}基礎を築きます。一つ一つの動作を確認しながら、体に染み込ませていく期間です。焦りは禁物で、むしろゆっくりと、しかし確実に土台を固めていきます。続いて、第二段階では、その基礎がさらに深化します。反復練習の中で、無意識でもできるレベルまで熟達し、新たな気づきや発見が生まれます。この段階での成長は、外見には現れにくいものの、内面では確実な変化が起きています。最後に、第三段階として、蓄積された力が形となって現れます。これまでの努力が実を結び、${theme.action}成果が目に見える形で現れ始めます。ここまで来れば、次のステージへの準備も整います。突破口は、三段階を通じた一貫性にあります。まずは第一歩を踏み出し、着実に積み重ねていきましょう。`,
    
    'JJH': `まず、${theme.base}において、基本を徹底的に身につけます。${theme.quality}取り組むことで、しっかりとした土台を作り上げる段階です。この時期は地味に見えますが、後の飛躍のための重要な準備期間となります。続いて、第二段階では、基本がさらに洗練されます。細部まで磨き上げられ、無駄が削ぎ落とされ、本質的な部分が明確になってきます。ここでの深化が、次の転換を可能にする鍵となります。最後に、第三段階として、視点を転換します。これまで深めてきた基礎を土台として、新しい角度からアプローチすることで、予想外のブレークスルーが生まれます。突破口は、深化の後の転換にあります。まずは基礎を極め、そこから新しい可能性を探りましょう。`,
    
    'JHJ': `まず、${theme.base}に対して、${theme.quality}準備を整えます。必要な知識を集め、道具を揃え、心構えを作る初期段階です。この準備が、後の展開を大きく左右することになります。次に、第二段階として、アプローチを変更します。当初の計画とは異なる角度から挑戦することで、新しい道筋が見えてきます。柔軟に方向転換することが、成功への近道となります。最後に、第三段階では、新しいアプローチで再び深めます。転換によって得られた新しい視点を活かしながら、${theme.action}ことに集中します。この深化が、真の成果をもたらします。突破口は、転換を恐れない勇気にあります。まずは複数の選択肢を持ち、状況に応じて切り替えましょう。`,
    
    'JHH': `まず、${theme.base}の初期段階として、${theme.quality}スタートを切ります。慎重に状況を観察し、小さな一歩から始めることで、リスクを最小限に抑えます。この慎重なアプローチが、後の調整を可能にします。続いて、第二段階では、方向を微調整します。初期の観察から得られた情報を基に、より効果的な道筋へと軌道修正していきます。この柔軟性が、成功の鍵となります。最後に、第三段階として、さらなる調整を加えます。二度の調整を経て、最適な形が見えてきます。${theme.action}ための理想的な状態が整い、成果が期待できます。突破口は、継続的な改善にあります。まずは始めてみて、進みながら最適化していきましょう。`,
    
    'HJJ': `まず、${theme.base}を新しい視点から捉え直します。従来の見方を捨て、全く異なる角度から状況を分析することで、見落としていた可能性が見えてきます。この発想の転換が、全ての始まりとなります。続いて、第二段階では、新しい視点で深く掘り下げます。転換によって得られた気づきを基に、${theme.quality}実践を重ね、理論を現実のものとしていきます。この深化が、確信へとつながります。最後に、第三段階として、さらに磨きをかけます。実践から得られた経験を活かし、細部まで完璧に仕上げていきます。${theme.action}ための理想的な形が完成します。突破口は、新しい視点の発見にあります。まずは固定観念を捨て、自由に発想してみましょう。`,
    
    'HJH': `まず、${theme.base}に対して、別の角度からアプローチします。通常とは異なる方法を試すことで、新しい可能性が開けます。この最初の転換が、後の展開を決定づけます。次に、第二段階として、その新しい視点で実践を深めます。理論だけでなく、実際に${theme.quality}行動することで、アプローチの有効性を検証し、改善点を見つけていきます。最後に、第三段階では、再び視点を変えます。実践から得られた学びを基に、さらに高次元のアプローチへと進化させます。${theme.action}ための究極の方法が見つかります。突破口は、理論と実践の統合にあります。まずは新しいアイデアを試し、経験から学んでいきましょう。`,
    
    'HHJ': `まず、${theme.base}の既成概念を打ち破ります。第一の転換として、従来の枠組みから完全に自由になることで、制約のない発想が可能になります。次に、第二段階として、さらなる転換を加えます。一度目の転換で得られた自由を基に、さらに大胆な発想の転換を行います。二重の転換により、全く新しい次元が開けます。最後に、第三段階では、その革新的な視点で${theme.quality}深めていきます。自由な発想を具体的な形にしていく過程で、${theme.action}ための画期的な方法が確立されます。突破口は、制約からの完全な解放にあります。まずは「できない」という思い込みを捨て、無限の可能性を信じましょう。`,
    
    'HHH': `まず、${theme.base}の根本から見直します。第一の変革として、これまでの前提を全て疑い、ゼロベースで考え直すことから始めます。この根本的な問い直しが、真の変革への第一歩となります。続いて、第二段階では、さらに深い変革を進めます。表面的な変更ではなく、本質的な部分から作り変えていきます。${theme.quality}取り組むことで、革命的な変化が起き始めます。最後に、第三段階として、次元そのものを超越します。これまでの枠組みを完全に超えて、全く新しいパラダイムを創造します。${theme.action}ための究極の形が、ここに完成します。突破口は、完全な再創造にあります。まずは既存の全てを手放し、理想を一から作り上げましょう。`
  };
  
  return narratives[pattern];
}

function main() {
  const file = path.resolve(__dirname, '..', 'public', 'data', 'narratives_chain.v1.json');
  const db = loadJSON(file);
  
  // 文字数が少ない（薄い）エントリーを特定して更新
  let updateCount = 0;
  const patterns = ['JJJ', 'JJH', 'JHJ', 'JHH', 'HJJ', 'HJH', 'HHJ', 'HHH'];
  
  Object.entries(db).forEach(([key, value]) => {
    // 文字数が200文字未満のものを「薄い」と判定
    if (value.chain_long && value.chain_long.length < 200) {
      const [hexInfo, pattern] = key.split(' | ');
      const hexName = hexInfo.split(' ')[0];
      
      // 卦ごとのテーマ設定（一部のみ、他は汎用テーマ）
      const themes = {
        '水雷屯': { base: '困難な始まり', action: '基盤を築く', quality: '忍耐強く' },
        '山水蒙': { base: '無知からの学習', action: '知識を得る', quality: '謙虚に' },
        '水天需': { base: '待機の時期', action: '準備を整える', quality: '焦らず' },
        '天水訟': { base: '争いの局面', action: '解決を図る', quality: '冷静に' }
      };
      
      const theme = themes[hexName] || { 
        base: '現在の状況', 
        action: '前進する', 
        quality: '着実に' 
      };
      
      // 新しい豊かな内容を生成
      const newNarrative = generateRichNarrative(hexName, pattern, theme);
      
      if (newNarrative) {
        db[key].chain_long = newNarrative;
        updateCount++;
        
        if (updateCount % 50 === 0) {
          console.log(`${updateCount}件更新...`);
        }
      }
    }
  });
  
  saveJSON(file, db);
  console.log(`完了: ${updateCount}件の薄いエントリーを豊かな内容に更新しました`);
}

main();