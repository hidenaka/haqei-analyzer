import { readFile, writeFile } from 'fs/promises';

async function fixPhase5Comprehensive() {
  try {
    console.log('=== フェーズ5: 包括的修正（5-6文字の短い説明） ===\n');
    
    // データベース読み込み
    let content = await readFile('./public/js/data/hexagram-human-traits-v3.js', 'utf-8');
    
    // 5文字の説明を全て修正（65件）
    const fiveCharFixes = {
      // environment（環境）
      '"動ける環境"': '"自由に動き回れる環境"',
      '"自由な環境"': '"制約のない自由な環境"',
      '"温かい家庭"': '"温かく安心できる家庭環境"',
      '"豊かな環境"': '"物質的精神的に豊かな環境"',
      '"新しい環境"': '"新鮮で刺激的な新しい環境"',
      '"柔軟な環境"': '"変化に対応できる柔軟な環境"',
      
      // 人々・仲間
      '"柔軟な人々"': '"柔軟な考えを持つ人々"',
      '"新しい仲間"': '"新しく出会った仲間たち"',
      '"多様な人々"': '"多様な価値観を持つ人々"',
      '"誠実な人々"': '"誠実で信頼できる人々"',
      '"慎重な人々"': '"慎重に考えて行動する人々"',
      
      // 感情・心理状態
      '"無を楽しむ"': '"何もしない時間を楽しむ"',
      '"心身を癒す"': '"心と体をゆっくり癒す"',
      '"灰から再生"': '"燃え尽きた灰から再生する"',
      '"着実な前進"': '"一歩一歩着実に前進する"',
      '"自由を守る"': '"自分の自由を守り抜く"',
      '"完全な自由"': '"完全に自由な状態になる"',
      '"他者を守る"': '"他者を守ることを優先する"',
      
      // 時間・機会
      '"静観の時間"': '"静かに観察する時間を持つ"',
      '"時間が解決"': '"時間が経てば自然に解決する"',
      '"休耕も必要"': '"休耕期間も必要だと理解する"',
      '"完了も大切"': '"物事を完了させることも大切"',
      '"常に進行中"': '"常に進化し続けている状態"',
      
      // 力・強さ
      '"頼れる強さ"': '"周りから頼られる強さ"',
      '"勝利で回復"': '"勝利することで力を回復する"',
      '"強力な防御"': '"強力な防御力を発揮する"',
      
      // 成功・喜び
      '"上昇の実感"': '"着実に上昇している実感"',
      '"決断の成功"': '"決断が成功した時の充実感"',
      '"新しい決断"': '"新しい決断を下す勇気"',
      '"集結の成功"': '"人を集めることに成功する"',
      '"成長の喜び"': '"成長を実感する喜び"',
      '"収穫の喜び"': '"努力の収穫を得る喜び"',
      '"創造の喜び"': '"何かを創造する喜び"',
      '"革命の成功"': '"変革が成功した時の達成感"',
      
      // 家族関連
      '"家族との絆"': '"家族との深い絆を大切にする"',
      '"家族の笑顔"': '"家族の笑顔が最高の報酬"',
      '"家族の愛情"': '"家族からの愛情に支えられる"',
      '"家族との時間"': '"家族と過ごす大切な時間"',
      
      // 対処・解決
      '"確実な対処"': '"確実に問題に対処する力"',
      '"根本的解決"': '"問題を根本から解決する力"',
      '"創造的昇華"': '"問題を創造的に昇華する"',
      
      // その他の状態
      '"静かに充電"': '"静かにエネルギーを充電する"',
      '"一人で静養"': '"一人で静かに養生する"',
      '"静寂と安定"': '"静寂と安定を保つ力"',
      '"誰かに頼る"': '"困った時は誰かに頼る"',
      '"余裕がある"': '"心に余裕がある状態"',
      '"新たな豊作"': '"新たな豊作を期待する"',
      '"冒険心全開"': '"冒険心を全開にする"',
      '"宿での休息"': '"旅の宿でゆっくり休息する"',
      '"定着しない"': '"一つの場所に定着しない"',
      '"直面しない"': '"問題に直面することを避ける"',
      '"完全に拡散"': '"エネルギーを完全に拡散する"',
      '"解放の実感"': '"束縛から解放された実感"',
      '"無駄を省く"': '"無駄を省いて効率化する"',
      '"節度の美徳"': '"節度を保つことの美徳"',
      '"ミスを防ぐ"': '"慎重にミスを防ぐ努力"',
      
      // ネガティブな状態
      '"機会も逃す"': '"チャンスも逃してしまう"',
      '"疲れ果てる"': '"完全に疲れ果ててしまう"',
      '"信頼を失う"': '"周りからの信頼を失う"',
      '"成長の機会"': '"困難も成長の機会と捉える"'
    };
    
    // 6文字の説明を修正（102件の主要なもの）
    const sixCharFixes = {
      // 環境・場所
      '"安定した環境"': '"変化の少ない安定した環境"',
      '"調和的な環境"': '"バランスの取れた調和的な環境"',
      '"流動的な環境"': '"常に変化する流動的な環境"',
      '"刺激的な環境"': '"新しい刺激に満ちた環境"',
      '"競争的な環境"': '"競争が激しい環境"',
      
      // 人々・仲間
      '"行動派の仲間"': '"行動力のある仲間たち"',
      '"前向きな人々"': '"前向きな考えを持つ人々"',
      '"思慮深い人々"': '"深く考えて行動する人々"',
      '"自立した人々"': '"自立心の強い人々"',
      
      // 強さ・力
      '"豊富な人脈"': '"豊富で多様な人脈を持つ"',
      '"頼れる存在"': '"みんなから頼られる存在"',
      '"冷静な判断力"': '"冷静で的確な判断力"',
      '"負けない強さ"': '"どんな困難にも負けない強さ"',
      '"独立心の強さ"': '"他に頼らない独立心の強さ"',
      
      // 感情・心理
      '"楽しさと希望"': '"楽しさと希望に満ちた日々"',
      '"想定外に弱い"': '"想定外の事態に弱い傾向"',
      '"時間がかかる"': '"解決に時間がかかる"',
      '"騙されやすい"': '"人を信じて騙されやすい"',
      '"全てを賭ける"': '"全てを賭けて挑戦する"',
      '"逃げ癖がつく"': '"困難から逃げる癖がつく"',
      '"完全に流動化"': '"固定観念を完全に流動化する"',
      '"溜め込まない"': '"ストレスを溜め込まない"',
      
      // 対処・回復
      '"一時的な保護"': '"一時的に身を守る保護"',
      '"段階的な復帰"': '"段階を踏んで復帰する"',
      '"力強く断定的"': '"力強く断定的に話す"',
      '"力を使う機会"': '"自分の力を使う機会"',
      '"批判を避ける"': '"批判されることを避ける"',
      '"温かく家族的"': '"温かく家族的な雰囲気"',
      '"深い信頼と絆"': '"深い信頼関係と絆"',
      '"支え合いの力"': '"お互いに支え合う力"',
      '"自立心が弱い"': '"自立心が弱い傾向"',
      '"独自性の評価"': '"独自性が評価される"',
      
      // その他
      '"存在感が薄い"': '"存在感が薄くなりがち"',
      '"協調、妥協"': '"協調と妥協を重視する"',
      '"瞑想、静養"': '"瞑想と静養で回復する"',
      '"進展が遅い"': '"物事の進展が遅い"',
      '"要求、交渉"': '"要求と交渉を行う"',
      '"創造的昇華"': '"創造的に問題を昇華する"'
    };
    
    // バックアップ作成
    const timestamp = new Date().toISOString().replace(/[:.]/g, '-');
    await writeFile(`./public/js/data/hexagram-human-traits-v3.backup.phase5.${timestamp}.js`, content);
    console.log(`📁 バックアップ作成: hexagram-human-traits-v3.backup.phase5.${timestamp}.js\n`);
    
    // 修正適用
    let totalFixCount = 0;
    
    console.log('【5文字の修正】');
    let count5 = 0;
    Object.entries(fiveCharFixes).forEach(([old, newText]) => {
      const regex = new RegExp(old.replace(/[.*+?^${}()|[\]\\]/g, '\\$&'), 'g');
      const originalContent = content;
      content = content.replace(regex, newText);
      if (originalContent !== content) {
        count5++;
        console.log(`✅ ${old} → ${newText}`);
      }
    });
    console.log(`小計: ${count5}件\n`);
    
    console.log('【6文字の修正】');
    let count6 = 0;
    Object.entries(sixCharFixes).forEach(([old, newText]) => {
      const regex = new RegExp(old.replace(/[.*+?^${}()|[\]\\]/g, '\\$&'), 'g');
      const originalContent = content;
      content = content.replace(regex, newText);
      if (originalContent !== content) {
        count6++;
        console.log(`✅ ${old} → ${newText}`);
      }
    });
    console.log(`小計: ${count6}件\n`);
    
    totalFixCount = count5 + count6;
    
    // ファイル保存
    await writeFile('./public/js/data/hexagram-human-traits-v3.js', content);
    
    console.log(`=== フェーズ5完了 ===`);
    console.log(`総修正件数: ${totalFixCount}件`);
    console.log(`\n次のステップ: node fix-short-descriptions-phase6.mjs`);
    
  } catch (error) {
    console.error('エラー:', error);
  }
}

fixPhase5Comprehensive();