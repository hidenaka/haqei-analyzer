/**
 * ÂÆåÂÖ®„Å™Ë°®Á§∫Ë¶ÅÁ¥†„ÉÅ„Çß„ÉÉ„ÇØ - „Åô„Åπ„Å¶„ÅÆË¶ÅÁ¥†„ÇíÊºè„Çå„Å™„ÅèÁ¢∫Ë™ç
 * Á¥∞„Åã„ÅÑÈÉ®ÂàÜ„ÇÇÂê´„ÇÅ„Å¶ÂæπÂ∫ïÁöÑ„Å´Ê§úË®º
 */

import { chromium } from 'playwright';

async function completeDisplayCheck() {
    console.log('üîç ÂÆåÂÖ®„Å™Ë°®Á§∫Ë¶ÅÁ¥†„ÉÅ„Çß„ÉÉ„ÇØÈñãÂßã');
    console.log('=====================================');
    console.log('„Åô„Åπ„Å¶„ÅÆË¶ÅÁ¥†„ÇíÊºè„Çå„Å™„ÅèÁ¢∫Ë™ç„Åó„Åæ„Åô');
    
    const browser = await chromium.launch({ 
        headless: false,
        args: ['--no-sandbox', '--disable-web-security']
    });
    
    const issues = [];
    
    try {
        const page = await browser.newPage();
        
        console.log('üìÑ „Éö„Éº„Ç∏„Ç¢„ÇØ„Çª„Çπ...');
        await page.goto('http://localhost:8788/future_simulator.html', { 
            waitUntil: 'networkidle',
            timeout: 20000
        });
        
        await page.waitForTimeout(5000);
        
        // ================ ÂàùÊúüÁîªÈù¢„ÅÆÂÖ®Ë¶ÅÁ¥†„ÉÅ„Çß„ÉÉ„ÇØ ================
        console.log('\n‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ');
        console.log('üìã ÂàùÊúüÁîªÈù¢„ÅÆÂÖ®Ë¶ÅÁ¥†„ÉÅ„Çß„ÉÉ„ÇØ');
        console.log('‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ');
        
        const initialElements = await page.evaluate(() => {
            const checkElement = (selector, description) => {
                const element = document.querySelector(selector);
                if (!element) return { selector, description, exists: false };
                
                const rect = element.getBoundingClientRect();
                const style = window.getComputedStyle(element);
                const isVisible = rect.width > 0 && rect.height > 0 && 
                                 style.display !== 'none' && 
                                 style.visibility !== 'hidden' &&
                                 parseFloat(style.opacity) > 0;
                
                return {
                    selector,
                    description,
                    exists: true,
                    visible: isVisible,
                    text: element.textContent?.trim().substring(0, 50),
                    width: rect.width,
                    height: rect.height,
                    display: style.display,
                    visibility: style.visibility,
                    opacity: style.opacity,
                    color: style.color,
                    backgroundColor: style.backgroundColor,
                    fontSize: style.fontSize,
                    hasContent: element.textContent?.trim().length > 0
                };
            };
            
            // „ÉÅ„Çß„ÉÉ„ÇØ„Åô„ÇãË¶ÅÁ¥†„ÅÆ„É™„Çπ„ÉàÔºà„Åô„Åπ„Å¶ÈáçË¶ÅÔºâ
            const elementsToCheck = [
                // „Éò„ÉÉ„ÉÄ„ÉºÈñ¢ÈÄ£
                ['h1', '„É°„Ç§„É≥„Çø„Ç§„Éà„É´'],
                ['h2', '„Çµ„Éñ„Çø„Ç§„Éà„É´'],
                ['.page-title', '„Éö„Éº„Ç∏„Çø„Ç§„Éà„É´'],
                ['.site-header', '„Çµ„Ç§„Éà„Éò„ÉÉ„ÉÄ„Éº'],
                
                // ÂÖ•ÂäõÈñ¢ÈÄ£
                ['#situation-text', '„ÉÜ„Ç≠„Çπ„ÉàÂÖ•ÂäõÊ¨Ñ'],
                ['label[for="situation-text"]', '„ÉÜ„Ç≠„Çπ„ÉàÂÖ•ÂäõÊ¨Ñ„ÅÆ„É©„Éô„É´'],
                ['.analyze-btn.primary', 'ÂàÜÊûê„Éú„Çø„É≥'],
                ['#quick-analysis-btn', '„ÇØ„Ç§„ÉÉ„ÇØÂàÜÊûê„Éú„Çø„É≥'],
                ['.input-header h3', 'ÂÖ•Âäõ„Çª„ÇØ„Ç∑„Éß„É≥„Çø„Ç§„Éà„É´'],
                ['.input-header p', 'ÂÖ•Âäõ„Çª„ÇØ„Ç∑„Éß„É≥Ë™¨Êòé'],
                
                // „Çµ„É≥„Éó„É´‰æã
                ['.example-situations h4', '„Çµ„É≥„Éó„É´‰æã„Çø„Ç§„Éà„É´'],
                ['.example-btn[data-example="career"]', '„Ç≠„É£„É™„Ç¢„Çµ„É≥„Éó„É´„Éú„Çø„É≥'],
                ['.example-btn[data-example="love"]', 'ÊÅãÊÑõ„Çµ„É≥„Éó„É´„Éú„Çø„É≥'],
                ['.example-btn[data-example="life"]', '‰∫∫Áîü„Çµ„É≥„Éó„É´„Éú„Çø„É≥'],
                
                // „Çπ„ÉÜ„Éº„Çø„ÇπË°®Á§∫
                ['.status-indicator', '„Çπ„ÉÜ„Éº„Çø„Çπ„Ç§„É≥„Ç∏„Ç±„Éº„Çø'],
                ['.status-icon', '„Çπ„ÉÜ„Éº„Çø„Çπ„Ç¢„Ç§„Ç≥„É≥'],
                ['.status-text', '„Çπ„ÉÜ„Éº„Çø„Çπ„ÉÜ„Ç≠„Çπ„Éà'],
                
                // „Ç≥„É≥„ÉÜ„Éä
                ['#main-container', '„É°„Ç§„É≥„Ç≥„É≥„ÉÜ„Éä'],
                ['#i-ching-container', 'I Ching„Ç≥„É≥„ÉÜ„Éä'],
                ['#resultsContainer', 'ÁµêÊûú„Ç≥„É≥„ÉÜ„Éä'],
                ['#situation-input-section', 'ÂÖ•Âäõ„Çª„ÇØ„Ç∑„Éß„É≥'],
                ['#simulator-status', '„Ç∑„Éü„É•„É¨„Éº„Çø„Çπ„ÉÜ„Éº„Çø„Çπ'],
                
                // „Åù„ÅÆ‰ªñ„ÅÆË¶ÅÁ¥†
                ['.three-stage-title', '3ÊÆµÈöé„Çø„Ç§„Éà„É´'],
                ['.three-stage-subtitle', '3ÊÆµÈöé„Çµ„Éñ„Çø„Ç§„Éà„É´'],
                ['.eight-scenarios-container', '8„Ç∑„Éä„É™„Ç™„Ç≥„É≥„ÉÜ„Éä'],
                ['.scenario-grid', '„Ç∑„Éä„É™„Ç™„Ç∞„É™„ÉÉ„Éâ'],
                
                // „Éï„ÉÉ„Çø„Éº„Éª„Éê„Éº„Ç∏„Éß„É≥Ë°®Á§∫„Å™„Å©
                ['.app-version', '„Ç¢„Éó„É™„Éê„Éº„Ç∏„Éß„É≥'],
                ['.copyright', 'Ëëó‰ΩúÊ®©Ë°®Á§∫'],
                ['footer', '„Éï„ÉÉ„Çø„Éº']
            ];
            
            const results = {};
            elementsToCheck.forEach(([selector, description]) => {
                results[selector] = checkElement(selector, description);
            });
            
            return results;
        });
        
        // ÂàùÊúüÁîªÈù¢„ÅÆÁµêÊûúË°®Á§∫
        Object.entries(initialElements).forEach(([selector, data]) => {
            if (!data.exists) {
                console.log(`‚ùå ${data.description}: Â≠òÂú®„Åó„Å™„ÅÑ`);
                issues.push(`${data.description} (${selector}): Ë¶ÅÁ¥†„ÅåÂ≠òÂú®„Åó„Å™„ÅÑ`);
            } else if (!data.visible) {
                console.log(`‚ö†Ô∏è ${data.description}: Â≠òÂú®„Åô„Çã„ÅåÈùûË°®Á§∫ (${data.width}x${data.height}px)`);
                issues.push(`${data.description} (${selector}): ÈùûË°®Á§∫Áä∂ÊÖã`);
            } else if (!data.hasContent && !selector.includes('input') && !selector.includes('textarea')) {
                console.log(`‚ö†Ô∏è ${data.description}: Ë°®Á§∫„Åï„Çå„Å¶„ÅÑ„Çã„Åå„ÉÜ„Ç≠„Çπ„Éà„Å™„Åó`);
                issues.push(`${data.description} (${selector}): „Ç≥„É≥„ÉÜ„É≥„ÉÑ„ÅåÁ©∫`);
            } else {
                console.log(`‚úÖ ${data.description}: Ê≠£Â∏∏Ë°®Á§∫`);
            }
        });
        
        // ================ ÂàÜÊûêÂÆüË°å ================
        console.log('\n‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ');
        console.log('üß™ ÂàÜÊûêÂÆüË°å');
        console.log('‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ');
        
        await page.fill('#situation-text', 'ÂÆåÂÖ®„Å™Ë°®Á§∫„ÉÅ„Çß„ÉÉ„ÇØ„ÅÆ„Åü„ÇÅ„ÅÆ„ÉÜ„Çπ„ÉàÂàÜÊûê„ÇíÂÆüË°å„Åó„Åæ„Åô„ÄÇ');
        await page.click('.analyze-btn.primary');
        await page.waitForTimeout(5000);
        
        // ================ ÂàÜÊûêÂæå„ÅÆÂÖ®Ë¶ÅÁ¥†„ÉÅ„Çß„ÉÉ„ÇØ ================
        console.log('\n‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ');
        console.log('üìä ÂàÜÊûêÂæå„ÅÆÂÖ®Ë¶ÅÁ¥†„ÉÅ„Çß„ÉÉ„ÇØ');
        console.log('‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ');
        
        const afterAnalysisElements = await page.evaluate(() => {
            const checkDetailedElement = (selector, description) => {
                const elements = document.querySelectorAll(selector);
                if (elements.length === 0) return { selector, description, count: 0, exists: false };
                
                const details = Array.from(elements).map((element, index) => {
                    const rect = element.getBoundingClientRect();
                    const style = window.getComputedStyle(element);
                    const isVisible = rect.width > 0 && rect.height > 0 && 
                                     style.display !== 'none' && 
                                     style.visibility !== 'hidden' &&
                                     parseFloat(style.opacity) > 0;
                    
                    // Â≠êË¶ÅÁ¥†„ÅÆË©≥Á¥∞„ÉÅ„Çß„ÉÉ„ÇØ
                    const children = {
                        images: element.querySelectorAll('img').length,
                        links: element.querySelectorAll('a').length,
                        buttons: element.querySelectorAll('button').length,
                        spans: element.querySelectorAll('span').length,
                        divs: element.querySelectorAll('div').length
                    };
                    
                    // „ÉÜ„Ç≠„Çπ„Éà„Éé„Éº„Éâ„ÅÆË©≥Á¥∞
                    const textNodes = [];
                    const walker = document.createTreeWalker(
                        element,
                        NodeFilter.SHOW_TEXT,
                        null,
                        false
                    );
                    let node;
                    while (node = walker.nextNode()) {
                        const text = node.textContent.trim();
                        if (text && text !== '') {
                            textNodes.push(text.substring(0, 30));
                        }
                    }
                    
                    return {
                        index,
                        visible: isVisible,
                        width: Math.round(rect.width),
                        height: Math.round(rect.height),
                        text: element.textContent?.trim().substring(0, 100),
                        hasUndefined: element.textContent?.includes('undefined'),
                        hasNull: element.textContent?.includes('null'),
                        hasNaN: element.textContent?.includes('NaN'),
                        isEmpty: element.textContent?.trim() === '',
                        children,
                        textNodes: textNodes.slice(0, 3),
                        classes: element.className,
                        id: element.id
                    };
                });
                
                return {
                    selector,
                    description,
                    count: elements.length,
                    exists: true,
                    details
                };
            };
            
            // ÂàÜÊûêÂæå„Å´„ÉÅ„Çß„ÉÉ„ÇØ„Åô„ÇãË¶ÅÁ¥†
            const elementsToCheck = [
                // „Ç∑„Éä„É™„Ç™„Ç´„Éº„ÉâÈñ¢ÈÄ£
                ['.scenario-card', '„Ç∑„Éä„É™„Ç™„Ç´„Éº„Éâ'],
                ['.scenario-title', '„Ç∑„Éä„É™„Ç™„Çø„Ç§„Éà„É´'],
                ['.scenario-description', '„Ç∑„Éä„É™„Ç™Ë™¨Êòé'],
                ['.scenario-metadata', '„Ç∑„Éä„É™„Ç™„É°„Çø„Éá„Éº„Çø'],
                ['.scenario-rank', '„Ç∑„Éä„É™„Ç™„É©„É≥„ÇØ'],
                ['.hexagram-transformation', 'Âç¶Â§âÂåñË°®Á§∫'],
                ['.change-method-badge', 'Â§âÂåñÊñπÂºè„Éê„ÉÉ„Ç∏'],
                
                // „Éï„Çß„Éº„Ç∫„Éñ„É≠„ÉÉ„ÇØÈñ¢ÈÄ£
                ['.phase-block', '„Éï„Çß„Éº„Ç∫„Éñ„É≠„ÉÉ„ÇØ'],
                ['.phase-header', '„Éï„Çß„Éº„Ç∫„Éò„ÉÉ„ÉÄ„Éº'],
                ['.phase-icon', '„Éï„Çß„Éº„Ç∫„Ç¢„Ç§„Ç≥„É≥'],
                ['.phase-name', '„Éï„Çß„Éº„Ç∫Âêç'],
                ['.phase-content', '„Éï„Çß„Éº„Ç∫„Ç≥„É≥„ÉÜ„É≥„ÉÑ'],
                ['.score-indicator', '„Çπ„Ç≥„Ç¢Ë°®Á§∫'],
                ['.phase-description', '„Éï„Çß„Éº„Ç∫Ë™¨Êòé'],
                
                // 3ÊÆµÈöéÂ§âÂåñÈñ¢ÈÄ£
                ['.three-phase-container', '3ÊÆµÈöé„Ç≥„É≥„ÉÜ„Éä'],
                ['.phase-1', '„Éï„Çß„Éº„Ç∫1ÔºàÂãïÁàªÊúüÔºâ'],
                ['.phase-2', '„Éï„Çß„Éº„Ç∫2ÔºàËª¢ÁàªÊúüÔºâ'],
                ['.phase-3', '„Éï„Çß„Éº„Ç∫3ÔºàÊàêÁàªÊúüÔºâ'],
                
                // „Åù„ÅÆ‰ªñ„ÅÆË°®Á§∫Ë¶ÅÁ¥†
                ['.temporal-steps', 'ÊôÇÈñìÁöÑ„Çπ„ÉÜ„ÉÉ„Éó'],
                ['.iching-wisdom', 'ÊòìÁµå„ÅÆÁü•ÊÅµ'],
                ['.scenario-iching', '„Ç∑„Éä„É™„Ç™ÊòìÁµåÊÉÖÂ†±'],
                ['.characteristic-tag', 'ÁâπÊÄß„Çø„Ç∞'],
                ['.positive', '„Éù„Ç∏„ÉÜ„Ç£„ÉñË°®Á§∫'],
                ['.negative', '„Éç„Ç¨„ÉÜ„Ç£„ÉñË°®Á§∫'],
                ['.final-score', 'ÊúÄÁµÇ„Çπ„Ç≥„Ç¢']
            ];
            
            const results = {};
            elementsToCheck.forEach(([selector, description]) => {
                results[selector] = checkDetailedElement(selector, description);
            });
            
            return results;
        });
        
        // ÂàÜÊûêÂæå„ÅÆÁµêÊûúË°®Á§∫
        Object.entries(afterAnalysisElements).forEach(([selector, data]) => {
            if (!data.exists || data.count === 0) {
                console.log(`‚ùå ${data.description}: Â≠òÂú®„Åó„Å™„ÅÑ`);
                issues.push(`ÂàÜÊûêÂæå: ${data.description} (${selector}): Ë¶ÅÁ¥†„ÅåÂ≠òÂú®„Åó„Å™„ÅÑ`);
            } else {
                console.log(`üì¶ ${data.description}: ${data.count}ÂÄã`);
                
                // Ë©≥Á¥∞„Å™ÂïèÈ°å„ÉÅ„Çß„ÉÉ„ÇØ
                data.details.forEach((detail, index) => {
                    if (!detail.visible) {
                        console.log(`  ‚ö†Ô∏è ${index + 1}Áï™ÁõÆ: ÈùûË°®Á§∫`);
                        issues.push(`ÂàÜÊûêÂæå: ${data.description} #${index + 1}: ÈùûË°®Á§∫`);
                    }
                    if (detail.hasUndefined) {
                        console.log(`  ‚ùå ${index + 1}Áï™ÁõÆ: "undefined"„ÇíÂê´„ÇÄ`);
                        issues.push(`ÂàÜÊûêÂæå: ${data.description} #${index + 1}: undefinedË°®Á§∫`);
                    }
                    if (detail.hasNull) {
                        console.log(`  ‚ùå ${index + 1}Áï™ÁõÆ: "null"„ÇíÂê´„ÇÄ`);
                        issues.push(`ÂàÜÊûêÂæå: ${data.description} #${index + 1}: nullË°®Á§∫`);
                    }
                    if (detail.hasNaN) {
                        console.log(`  ‚ùå ${index + 1}Áï™ÁõÆ: "NaN"„ÇíÂê´„ÇÄ`);
                        issues.push(`ÂàÜÊûêÂæå: ${data.description} #${index + 1}: NaNË°®Á§∫`);
                    }
                    if (detail.isEmpty && !selector.includes('icon')) {
                        console.log(`  ‚ö†Ô∏è ${index + 1}Áï™ÁõÆ: „Ç≥„É≥„ÉÜ„É≥„ÉÑ„ÅåÁ©∫`);
                        issues.push(`ÂàÜÊûêÂæå: ${data.description} #${index + 1}: Á©∫„ÅÆ„Ç≥„É≥„ÉÜ„É≥„ÉÑ`);
                    }
                });
            }
        });
        
        // ================ CSS„Çπ„Çø„Ç§„É´„ÅÆÈÅ©Áî®„ÉÅ„Çß„ÉÉ„ÇØ ================
        console.log('\n‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ');
        console.log('üé® CSS„Çπ„Çø„Ç§„É´ÈÅ©Áî®„ÉÅ„Çß„ÉÉ„ÇØ');
        console.log('‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ');
        
        const styleCheck = await page.evaluate(() => {
            const styles = document.querySelectorAll('style');
            const links = document.querySelectorAll('link[rel="stylesheet"]');
            
            return {
                inlineStyles: styles.length,
                externalStyles: links.length,
                customStyleIds: Array.from(styles).map(s => s.id).filter(id => id),
                externalStylesheets: Array.from(links).map(l => l.href)
            };
        });
        
        console.log(`„Ç§„É≥„É©„Ç§„É≥„Çπ„Çø„Ç§„É´: ${styleCheck.inlineStyles}ÂÄã`);
        console.log(`Â§ñÈÉ®„Çπ„Çø„Ç§„É´„Ç∑„Éº„Éà: ${styleCheck.externalStyles}ÂÄã`);
        if (styleCheck.customStyleIds.length > 0) {
            console.log(`„Ç´„Çπ„Çø„É†„Çπ„Çø„Ç§„É´ID: ${styleCheck.customStyleIds.join(', ')}`);
        }
        
        // ================ „Ç≥„É≥„ÇΩ„Éº„É´„Ç®„É©„Éº„ÉÅ„Çß„ÉÉ„ÇØ ================
        console.log('\n‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ');
        console.log('üö® „Ç≥„É≥„ÇΩ„Éº„É´„Ç®„É©„Éº„ÉÅ„Çß„ÉÉ„ÇØ');
        console.log('‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ');
        
        const consoleErrors = [];
        page.on('console', msg => {
            if (msg.type() === 'error') {
                consoleErrors.push(msg.text());
            }
        });
        
        // „Ç®„É©„Éº„ÇíË™òÁô∫„Åô„Çã„Åü„ÇÅ„ÅÆÂÜçË™≠„ÅøËæº„Åø
        await page.reload({ waitUntil: 'networkidle' });
        await page.waitForTimeout(3000);
        
        if (consoleErrors.length > 0) {
            console.log(`‚ùå „Ç≥„É≥„ÇΩ„Éº„É´„Ç®„É©„Éº: ${consoleErrors.length}‰ª∂`);
            consoleErrors.forEach(error => {
                console.log(`  - ${error}`);
                issues.push(`„Ç≥„É≥„ÇΩ„Éº„É´„Ç®„É©„Éº: ${error}`);
            });
        } else {
            console.log('‚úÖ „Ç≥„É≥„ÇΩ„Éº„É´„Ç®„É©„Éº„Å™„Åó');
        }
        
        // „Çπ„ÇØ„É™„Éº„É≥„Ç∑„Éß„ÉÉ„Éà
        await page.screenshot({ 
            fullPage: true,
            path: '20250814_complete_check_screenshot.png'
        });
        console.log('\nüì∏ „Çπ„ÇØ„É™„Éº„É≥„Ç∑„Éß„ÉÉ„Éà‰øùÂ≠ò: 20250814_complete_check_screenshot.png');
        
        return issues;
        
    } catch (error) {
        console.error('‚ùå „ÉÅ„Çß„ÉÉ„ÇØ„Ç®„É©„Éº:', error);
        issues.push(`„ÉÅ„Çß„ÉÉ„ÇØ„Ç®„É©„Éº: ${error.message}`);
        return issues;
    } finally {
        console.log('\n‚è±Ô∏è 20ÁßíÈñìË°®Á§∫Á¢∫Ë™ç...');
        await new Promise(resolve => setTimeout(resolve, 20000));
        await browser.close();
    }
}

// ÂÆüË°å
completeDisplayCheck().then(issues => {
    console.log('\n');
    console.log('‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ');
    console.log('üìã ÂÆåÂÖ®Ë°®Á§∫„ÉÅ„Çß„ÉÉ„ÇØÁµêÊûú„Çµ„Éû„É™„Éº');
    console.log('‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ');
    
    if (issues.length === 0) {
        console.log('‚úÖ „Åô„Åπ„Å¶„ÅÆË°®Á§∫Ë¶ÅÁ¥†„ÅåÊ≠£Â∏∏„Åß„ÅôÔºÅ');
        console.log('ÂïèÈ°å„ÅØË¶ã„Å§„Åã„Çä„Åæ„Åõ„Çì„Åß„Åó„Åü„ÄÇ');
    } else {
        console.log(`‚ö†Ô∏è ${issues.length}ÂÄã„ÅÆÂïèÈ°å„ÅåË¶ã„Å§„Åã„Çä„Åæ„Åó„ÅüÔºö`);
        console.log('');
        issues.forEach((issue, index) => {
            console.log(`${index + 1}. ${issue}`);
        });
        
        console.log('\nüîß ‰øÆÊ≠£„ÅåÂøÖË¶Å„Å™È†ÖÁõÆ:');
        console.log('‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ');
        
        // ÂïèÈ°å„Çí„Ç´„ÉÜ„Ç¥„É™ÂàÜ„Åë
        const notExist = issues.filter(i => i.includes('Â≠òÂú®„Åó„Å™„ÅÑ'));
        const notVisible = issues.filter(i => i.includes('ÈùûË°®Á§∫'));
        const hasUndefined = issues.filter(i => i.includes('undefined'));
        const hasNull = issues.filter(i => i.includes('null'));
        const hasNaN = issues.filter(i => i.includes('NaN'));
        const isEmpty = issues.filter(i => i.includes('Á©∫'));
        
        if (notExist.length > 0) {
            console.log(`\n‚ùå Â≠òÂú®„Åó„Å™„ÅÑË¶ÅÁ¥† (${notExist.length}ÂÄã):`);
            notExist.forEach(i => console.log(`  - ${i}`));
        }
        if (notVisible.length > 0) {
            console.log(`\n‚ö†Ô∏è ÈùûË°®Á§∫„ÅÆË¶ÅÁ¥† (${notVisible.length}ÂÄã):`);
            notVisible.forEach(i => console.log(`  - ${i}`));
        }
        if (hasUndefined.length > 0) {
            console.log(`\n‚ùå undefinedË°®Á§∫ (${hasUndefined.length}ÂÄã):`);
            hasUndefined.forEach(i => console.log(`  - ${i}`));
        }
        if (hasNull.length > 0) {
            console.log(`\n‚ùå nullË°®Á§∫ (${hasNull.length}ÂÄã):`);
            hasNull.forEach(i => console.log(`  - ${i}`));
        }
        if (hasNaN.length > 0) {
            console.log(`\n‚ùå NaNË°®Á§∫ (${hasNaN.length}ÂÄã):`);
            hasNaN.forEach(i => console.log(`  - ${i}`));
        }
        if (isEmpty.length > 0) {
            console.log(`\n‚ö†Ô∏è Á©∫„ÅÆ„Ç≥„É≥„ÉÜ„É≥„ÉÑ (${isEmpty.length}ÂÄã):`);
            isEmpty.forEach(i => console.log(`  - ${i}`));
        }
    }
    
}).catch(console.error);