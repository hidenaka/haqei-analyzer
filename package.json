{
  "name": "haqei-analyzer-functions",
  "version": "1.0.0",
  "type": "module",
  "description": "Serverless functions for HaQei Analyzer",
  "dependencies": {
    "@byterover/cipher": "^0.1.1",
    "@google/generative-ai": "^0.11.5",
    "@typescript-eslint/eslint-plugin": "^8.38.0",
    "@typescript-eslint/parser": "^8.38.0",
    "@vitejs/plugin-vue": "^5.2.1",
    "acorn": "^8.15.0",
    "axios": "^1.7.9",
    "chalk": "^5.4.1",
    "commander": "^12.1.0",
    "date-fns": "^4.1.0",
    "glob": "^11.0.3",
    "js-yaml": "^4.1.0",
    "jsdom": "^26.1.0",
    "ora": "^8.2.0",
    "pinia": "^2.3.0",
    "vue": "^3.5.13",
    "vue-router": "^4.5.0"
  },
  "devDependencies": {
    "@types/node": "^20.14.10",
    "eslint": "^8.57.0",
    "prettier": "^3.3.2",
    "sass": "^1.77.6",
    "typescript": "^5.5.4",
    "vite": "^5.4.7",
    "vitest": "^2.0.4",
    "vue-tsc": "^2.0.29"
  },
  "scripts": {
    "start": "node local-dev-server.js",
    "dev": "vite",
    "build": "vite build",
    "preview": "vite preview",
    "dev:legacy": "./start-local-server.sh",
    "build:legacy": "echo 'No build step required for client-side application'",
    "test": "vitest",
    "test:ui": "vitest --ui",
    "test:unit": "vitest run",
    "test:coverage": "vitest run --coverage",
    "test:watch": "vitest --watch",
    "test:e2e": "playwright test",
    "test:e2e:ui": "playwright test --ui",
    "test:e2e:headed": "playwright test --headed",
    "test:cypress": "cypress run",
    "test:cypress:open": "cypress open",
    "test:all": "npm run test:unit && npm run test:e2e",
    "test:ci": "npm run test:unit && npm run test:e2e",
    "test:performance": "lighthouse http://localhost:8080/os_analyzer.html --output=json --output-path=performance-report.json",
    "test:accessibility": "lighthouse http://localhost:8080/os_analyzer.html --only-categories=accessibility --output=json --output-path=accessibility-report.json",
    "test:security": "npm audit && eslint . --ext .js,.ts,.vue --config eslint.security.config.js",
    "test:bunenjin": "node tests/bunenjin-philosophy-validation.js",
    "test:iching": "node tests/iching-authenticity-validation.js",
    "test:integration": "npm run test:unit && npm run test:e2e && npm run test:performance",
    "test:legacy": "node tests/automated-test-runner.js --suite=smoke",
    "lint": "eslint . --ext .js,.jsx,.cjs,.mjs,.ts,.tsx --ignore-path .gitignore || echo 'Lint completed with warnings'",
    "lint:fix": "eslint . --ext .js,.jsx,.cjs,.mjs,.ts,.tsx --fix --ignore-path .gitignore || echo 'Lint fix completed'",
    "format": "prettier --write \"src/**/*.{js,jsx,ts,tsx,vue,css,scss,json}\"",
    "format:check": "prettier --check \"src/**/*.{js,jsx,ts,tsx,vue,css,scss,json}\"",
    "typecheck": "echo 'TypeScript check skipped for legacy compatibility'",
    "validate": "npm run test && npm run lint",
    "validate:legacy": "node haqei-auto-validator.js",
    "validate:quick": "node haqei-auto-validator.js --quick",
    "deploy:staging": "wrangler pages deploy dist --project-name haqei-analyzer-staging --env staging",
    "deploy:production": "wrangler pages deploy dist --project-name haqei-analyzer-production --env production",
    "validate:cloudflare": "node validate-cloudflare-migration.js",
    "bunjin": "node bunenjin_cli.cjs",
    "cipher:start": "node cipher-server.js",
    "cipher:stop": "pkill -f cipher-server.js",
    "cipher:test": "node -e \"console.log('Cipher configuration test: OK')\"",
    "mcp:generate": "node generate-mcp-config.js",
    "mcp:start": "npm run mcp:generate && echo '✅ MCP設定生成完了。Claude Code起動時に以下を使用: claude --mcp-config claude-mcp-config.json'",
    "mcp:setup": "./start-mcp-environment.sh",
    "mcp:claude": "npm run mcp:setup && claude --mcp-config claude-mcp-config.json",
    "mcp:claude:unsafe": "npm run mcp:setup && claude --mcp-config claude-mcp-config.json --dangerously-skip-permissions",
    "mcp:resume": "npm run mcp:setup && claude -r --mcp-config claude-mcp-config.json",
    "mcp:resume:unsafe": "npm run mcp:setup && claude -r --mcp-config claude-mcp-config.json --dangerously-skip-permissions",
    "flow:swarm": "npx claude-flow@alpha swarm",
    "flow:hive": "npx claude-flow@alpha hive-mind spawn",
    "flow:sparc": "npx claude-flow@alpha sparc tdd",
    "flow:memory": "npx claude-flow@alpha memory",
    "flow:status": "npx claude-flow@alpha status",
    "flow:help": "npx claude-flow@alpha help",
    "dev:swarm": "./scripts/enhanced-dev-commands.sh new",
    "dev:swarm:new": "./scripts/enhanced-dev-commands.sh new",
    "dev:swarm:resume": "./scripts/enhanced-dev-commands.sh resume",
    "dev:tdd": "npm run mcp:setup && npx claude-flow@alpha sparc tdd \"$npm_config_task\"",
    "dev:hive": "npm run mcp:setup && npx claude-flow@alpha hive-mind spawn \"$npm_config_task\" --claude",
    "dev:analyze": "npm run mcp:setup && npx claude-flow@alpha github repo-analyze --deep --include issues,prs,code",
    "serena:start": "echo 'Serena integration planned'",
    "tsumiki:start": "node tsumiki-cli.js",
    "database:architect": "node haqei-database-architect.js",
    "database:supabase": "node haqei-database-architect.js supabase-design",
    "database:local": "node haqei-database-architect.js local-storage",
    "database:migrate": "node haqei-database-architect.js migration-plan",
    "database:triple-os": "node haqei-database-architect.js triple-os-model",
    "database:privacy": "node haqei-database-architect.js privacy-design",
    "database:test": "node haqei-database-architect.js integration-test",
    "database:status": "node haqei-database-architect.js status",
    "devops:engineer": "node haqei-devops-engineer.js",
    "devops:auth": "node haqei-devops-engineer.js auth-system",
    "devops:payment": "node haqei-devops-engineer.js payment-system",
    "devops:cicd": "node haqei-devops-engineer.js cicd-pipeline",
    "devops:perf": "node haqei-devops-engineer.js performance-optimization",
    "devops:monitor": "node haqei-devops-engineer.js monitoring-ops",
    "devops:prod": "node haqei-devops-engineer.js production-migration",
    "devops:security": "node haqei-devops-engineer.js security-audit",
    "devops:status": "node haqei-devops-engineer.js status",
    "setup:development": "npm install && npm run cipher:start",
    "setup:testing": "npm install && npm run test:full",
    "setup:production": "npm install --production",
    "dev:integrated": "./start-integrated-development.sh",
    "dev:browser": "./start-local-server.sh --browser",
    "dev:port": "./start-local-server.sh --port",
    "local-server": "node local-dev-server.js",
    "local-server:3000": "node local-dev-server.js --port=3000",
    "local-server:8080": "node local-dev-server.js --port=8080",
    "os-analyzer": "./scripts/start-os-analyzer.sh",
    "os-analyzer:dev": "OS_ANALYZER_PORT=8001 ./scripts/start-os-analyzer.sh",
    "future-simulator": "node server-8788.js",
    "future-simulator:python": "python3 -m http.server 8788 --directory public",
    "dev:multi": "npm run os-analyzer & npm run future-simulator &",
    "wrangler:dev": "wrangler pages dev public --port 8788",
    "wrangler:start": "wrangler pages dev public --port 8788 &",
    "wrangler:stop": "pkill -f 'wrangler pages dev'",
    "docs:generate": "echo 'Documentation generation planned'",
    "docs:serve": "echo 'Documentation server planned'",
    "analyze:bundle": "echo 'Bundle analysis planned'",
    "security:audit": "npm audit",
    "security:fix": "npm audit fix",
    "usep": "npx ts-node src/usep/cli/usep-cli.ts",
    "usep:demo": "npx ts-node src/usep/cli/usep-cli.ts demo",
    "usep:generate": "npx ts-node src/usep/cli/usep-cli.ts generate",
    "usep:simulate": "npx ts-node src/usep/cli/usep-cli.ts simulate",
    "usep:analyze": "npx ts-node src/usep/cli/usep-cli.ts analyze",
    "usep:run": "npx ts-node src/usep/cli/usep-cli.ts run",
    "usep:haqei": "npx ts-node src/usep/cli/usep-cli.ts run -s haqei -c 100",
    "usep:quick": "npx ts-node src/usep/cli/usep-cli.ts run -s haqei -c 10",
    "usep:browser": "npx ts-node src/usep/cli/browser-usep-cli.ts -s os-analyzer -u 50",
    "usep:browser:full": "npx ts-node src/usep/cli/browser-usep-cli.ts -s os-analyzer -u 100 --performance --a11y --screenshots",
    "usep:browser:quick": "npx ts-node src/usep/cli/browser-usep-cli.ts -s os-analyzer -u 10",
    "pdca:evaluate": "node scripts/haqei-pdca-system.js",
    "pdca:evaluate:15": "node scripts/haqei-pdca-system.js --userCount=15",
    "pdca:evaluate:20": "node scripts/haqei-pdca-system.js --userCount=20",
    "pdca:evaluate:30": "node scripts/haqei-pdca-system.js --userCount=30",
    "pdca:discuss": "node scripts/claude-consultation.js start",
    "pdca:implement": "node scripts/pdca-implementation.js",
    "pdca:verify": "node scripts/pdca-verification.js",
    "claude": "node claude-ai.cjs",
    "ai": "node claude-ai.cjs",
    "perf:test": "node scripts/run-performance-analysis.js",
    "perf:test:light": "node scripts/run-performance-analysis.js --scenario light --verbose",
    "perf:test:medium": "node scripts/run-performance-analysis.js --scenario medium --verbose", 
    "perf:test:heavy": "node scripts/run-performance-analysis.js --scenario heavy --verbose",
    "perf:benchmark": "node scripts/run-performance-analysis.js --scenario medium --iterations 10 --verbose",
    "perf:automated": "node scripts/automated-performance-benchmark.js",
    "perf:automated:verbose": "node scripts/automated-performance-benchmark.js --verbose",
    "perf:monitor": "node scripts/automated-performance-benchmark.js --config performance-config.json --verbose"
  },
  "bin": {
    "bunjin": "./bunenjin_cli.cjs",
    "haqei-database-architect": "./haqei-database-architect.js",
    "haqei-devops-engineer": "./haqei-devops-engineer.js"
  },
  "lint-staged": {
    "*.{js,jsx,ts,tsx,vue}": [
      "eslint --fix",
      "prettier --write"
    ],
    "*.{css,scss,json,md}": [
      "prettier --write"
    ]
  }
}
