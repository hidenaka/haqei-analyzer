import { readFile, writeFile } from 'fs/promises';

async function fix11CharInsufficient() {
  try {
    console.log('=== 11文字の情報不足な説明を修正 ===\n');
    
    // データベース読み込み
    let content = await readFile('./public/js/data/hexagram-human-traits-v3.js', 'utf-8');
    
    // バックアップ作成
    const timestamp = new Date().toISOString().replace(/[:.]/g, '-');
    await writeFile(`./public/js/data/hexagram-human-traits-v3.backup.11char.${timestamp}.js`, content);
    console.log(`📁 バックアップ作成: hexagram-human-traits-v3.backup.11char.${timestamp}.js\n`);
    
    // 情報不足な11文字の説明を修正
    const fixes = [
      // 動作系（もっと具体的に）
      { old: '"できることから一つずつ"', new: '"できることから一つずつ確実に進める"' },
      { old: '"できることから少しずつ"', new: '"できることから少しずつ着実に進める"' },
      { old: '"じっとしていられず行動"', new: '"じっとしていられず即座に行動する"' },
      { old: '"じっと耐えて続けていく"', new: '"じっと耐えて継続的に続けていく"' },
      { old: '"また蓄積から始めていく"', new: '"また蓄積から新たに始めていく"' },
      { old: '"ゼロから作り直していく"', new: '"ゼロから完全に作り直していく"' },
      
      // 力・能力系（どんな力か明確に）
      { old: '"みんなを繋げる力を持つ"', new: '"みんなを繋げる調和の力を持つ"' },
      { old: '"みんなをまとめる統率力"', new: '"みんなをまとめる強い統率力を発揮"' },
      { old: '"コーチのような励まし力"', new: '"コーチのような効果的な励まし力"' },
      { old: '"さりげなく影響を与える"', new: '"さりげなく良い影響を与える"' },
      
      // 状態系（より詳しく）
      { old: '"いつも同じトーンで安定"', new: '"いつも同じトーンで安定して話す"' },
      { old: '"いつも同じペースで話す"', new: '"いつも同じ落ち着いたペースで話す"' },
      { old: '"いつも同じ態度で接する"', new: '"いつも同じ誠実な態度で接する"' },
      { old: '"どちらにも偏らず冷静に"', new: '"どちらにも偏らず冷静に判断する"' },
      
      // 環境・場所系（どんな環境か）
      { old: '"じっくり取り組める環境"', new: '"じっくり取り組める落ち着いた環境"' },
      { old: '"プレッシャーのない場所"', new: '"プレッシャーのない安心できる場所"' },
      { old: '"プレッシャーのない環境"', new: '"プレッシャーのない快適な環境"' },
      { old: '"リスクのない環境で休息"', new: '"リスクのない安全な環境で休息"' },
      
      // 困難・挑戦系（どう対処するか）
      { old: '"どんな困難も乗り越える"', new: '"どんな困難も力強く乗り越える"' },
      { old: '"どんな環境でも生き抜く"', new: '"どんな環境でも柔軟に生き抜く"' },
      { old: '"どん底から大逆転を狙う"', new: '"どん底から大逆転を狙って行動"' },
      { old: '"より大きな困難で忘れる"', new: '"より大きな困難に挑戦して忘れる"' },
      
      // バランス・調整系
      { old: '"みんなのバランスを取る"', new: '"みんなのバランスを巧みに取る"' },
      { old: '"バランスが崩れそうな時"', new: '"バランスが崩れそうな危険な時"' },
      { old: '"ペースを保ちながら回復"', new: '"ペースを保ちながら着実に回復"' },
      
      // 変化・転換系
      { old: '"マイナスをプラスに転換"', new: '"マイナスをプラスに見事に転換"' },
      { old: '"ポジティブに解釈し直す"', new: '"ポジティブに解釈し直して前進"' },
      { old: '"たまには変化も見せよう"', new: '"たまには変化も見せて新鮮さを"' },
      
      // 成果・目標系
      { old: '"ゴールは新たなスタート"', new: '"ゴールは新たなスタートの始まり"' },
      { old: '"ミスを絶対に見逃さない"', new: '"ミスを絶対に見逃さない注意力"' },
      { old: '"ミスを防いだ実感を得る"', new: '"ミスを防いだ達成感を得る"' },
      { old: '"チャンスも逃してしまう"', new: '"チャンスも逃してしまう傾向がある"' },
      
      // 人間関係系
      { old: '"みんなから頼られる存在"', new: '"みんなから頼られる重要な存在"' },
      { old: '"みんなに豊かさを分ける"', new: '"みんなに豊かさを惜しみなく分ける"' },
      { old: '"みんなのニーズを満たす"', new: '"みんなのニーズを的確に満たす"' },
      { old: '"みんなの健康を守る存在"', new: '"みんなの健康を守る大切な存在"' },
      { old: '"まとめてくれる人と協力"', new: '"まとめてくれる人と効果的に協力"' },
      
      // チーム系
      { old: '"チームの太陽として輝く"', new: '"チームの太陽として明るく輝く"' },
      { old: '"チーム全体での振り返り"', new: '"チーム全体での建設的な振り返り"' },
      { old: '"チーム全体の回復と共に"', new: '"チーム全体の回復と共に成長する"' },
      
      // その他の改善
      { old: '"しがらみを全て断ち切る"', new: '"しがらみを全て断ち切って自由に"' },
      { old: '"ゆっくり辛抱強く進める"', new: '"ゆっくり辛抱強く確実に進める"' },
      { old: '"アウトプットも忘れずに"', new: '"アウトプットも忘れずに実践する"' },
      { old: '"インプットの時間を取る"', new: '"インプットの時間を十分に取る"' },
      { old: '"エネルギー供給源の確保"', new: '"エネルギー供給源の確実な確保"' },
      { old: '"サプライズで感動を演出"', new: '"サプライズで素晴らしい感動を演出"' },
      { old: '"ストレスを溜め込まない"', new: '"ストレスを溜め込まないよう注意"' },
      { old: '"スピードや大胆さが不足"', new: '"スピードや大胆さが不足しがち"' },
      { old: '"バラバラになって逃げる"', new: '"バラバラになって逃げてしまう"' }
    ];
    
    // 修正を適用
    let totalFixCount = 0;
    console.log('11文字の説明を修正中...\n');
    
    for (const fix of fixes) {
      const regex = new RegExp(fix.old.replace(/[.*+?^${}()|[\]\\]/g, '\\$&'), 'g');
      const matches = content.match(regex);
      if (matches) {
        content = content.replace(regex, fix.new);
        totalFixCount += matches.length;
        console.log(`✅ ${fix.old} → ${fix.new} (${matches.length}箇所)`);
      }
    }
    
    // ファイル保存
    await writeFile('./public/js/data/hexagram-human-traits-v3.js', content);
    
    console.log(`\n=== 修正完了 ===`);
    console.log(`総修正件数: ${totalFixCount}件`);
    console.log(`修正項目数: ${fixes.length}種類`);
    
  } catch (error) {
    console.error('エラー:', error);
  }
}

fix11CharInsufficient();