/* interactive.css - アニメーションと対話要素 */
/* bunenjin哲学: 動きの美学と体験の調和 */

/* =================================== */
/* 1. 基本アニメーション定義 */
/* =================================== */

@keyframes fadeIn {
  from {
    opacity: 0;
    transform: translateY(20px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes fadeOut {
  from {
    opacity: 1;
    transform: translateY(0);
  }
  to {
    opacity: 0;
    transform: translateY(-20px);
  }
}

@keyframes slideInLeft {
  from {
    opacity: 0;
    transform: translateX(-100%);
  }
  to {
    opacity: 1;
    transform: translateX(0);
  }
}

@keyframes slideInRight {
  from {
    opacity: 0;
    transform: translateX(100%);
  }
  to {
    opacity: 1;
    transform: translateX(0);
  }
}

@keyframes slideInUp {
  from {
    opacity: 0;
    transform: translateY(100%);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes slideInDown {
  from {
    opacity: 0;
    transform: translateY(-100%);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes scaleIn {
  from {
    opacity: 0;
    transform: scale(0.8);
  }
  to {
    opacity: 1;
    transform: scale(1);
  }
}

@keyframes scaleOut {
  from {
    opacity: 1;
    transform: scale(1);
  }
  to {
    opacity: 0;
    transform: scale(0.8);
  }
}

@keyframes pulse {
  0% {
    transform: scale(1);
  }
  50% {
    transform: scale(1.05);
  }
  100% {
    transform: scale(1);
  }
}

@keyframes heartbeat {
  0% {
    transform: scale(1);
  }
  14% {
    transform: scale(1.3);
  }
  28% {
    transform: scale(1);
  }
  42% {
    transform: scale(1.3);
  }
  70% {
    transform: scale(1);
  }
}

@keyframes spin {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}

@keyframes bounce {
  0%, 20%, 53%, 80%, 100% {
    animation-timing-function: cubic-bezier(0.215, 0.610, 0.355, 1.000);
    transform: translate3d(0,0,0);
  }
  40%, 43% {
    animation-timing-function: cubic-bezier(0.755, 0.050, 0.855, 0.060);
    transform: translate3d(0, -30px, 0);
  }
  70% {
    animation-timing-function: cubic-bezier(0.755, 0.050, 0.855, 0.060);
    transform: translate3d(0, -15px, 0);
  }
  90% {
    transform: translate3d(0,-4px,0);
  }
}

@keyframes float {
  0%, 100% {
    transform: translateY(0px);
  }
  50% {
    transform: translateY(-20px);
  }
}

@keyframes wiggle {
  0%, 7% {
    transform: rotateZ(0);
  }
  15% {
    transform: rotateZ(-15deg);
  }
  20% {
    transform: rotateZ(10deg);
  }
  25% {
    transform: rotateZ(-10deg);
  }
  30% {
    transform: rotateZ(6deg);
  }
  35% {
    transform: rotateZ(-4deg);
  }
  40%, 100% {
    transform: rotateZ(0);
  }
}

/* =================================== */
/* 2. プログレスバーアニメーション */
/* =================================== */

@keyframes progressGlow {
  0%, 100% {
    box-shadow: 0 0 5px var(--accent-500);
  }
  50% {
    box-shadow: 0 0 20px var(--accent-500), 0 0 30px var(--accent-400);
  }
}

@keyframes progressPulse {
  0% {
    transform: scaleX(1);
  }
  50% {
    transform: scaleX(1.02);
  }
  100% {
    transform: scaleX(1);
  }
}

@keyframes progressShine {
  0% { left: -100%; }
  50% { left: 100%; }
  100% { left: 100%; }
}

/* =================================== */
/* 3. グラデーションアニメーション */
/* =================================== */

@keyframes gradientShift {
  0%, 100% {
    background-position: 0% 50%;
  }
  50% {
    background-position: 100% 50%;
  }
}

@keyframes shimmer {
  0% {
    transform: translateX(-100%);
  }
  100% {
    transform: translateX(100%);
  }
}

/* =================================== */
/* 4. タイピングアニメーション */
/* =================================== */

@keyframes blink {
  0%, 50% {
    opacity: 1;
  }
  51%, 100% {
    opacity: 0;
  }
}

.typing-cursor::after {
  content: '|';
  animation: blink 1s infinite;
}

/* =================================== */
/* 5. アニメーションクラス */
/* =================================== */

.animate-fade-in {
  animation: fadeIn 0.5s ease-out forwards;
}

.animate-fade-out {
  animation: fadeOut 0.5s ease-out forwards;
}

.animate-slide-in-left {
  animation: slideInLeft 0.6s ease-out forwards;
}

.animate-slide-in-right {
  animation: slideInRight 0.6s ease-out forwards;
}

.animate-slide-in-up {
  animation: slideInUp 0.6s ease-out forwards;
}

.animate-slide-in-down {
  animation: slideInDown 0.6s ease-out forwards;
}

.animate-scale-in {
  animation: scaleIn 0.4s ease-out forwards;
}

.animate-scale-out {
  animation: scaleOut 0.4s ease-out forwards;
}

.animate-pulse {
  animation: pulse 2s infinite;
}

.animate-heartbeat {
  animation: heartbeat 1.5s ease-in-out infinite;
}

.animate-spin {
  animation: spin 1s linear infinite;
}

.animate-bounce {
  animation: bounce 2s infinite;
}

.animate-float {
  animation: float 3s ease-in-out infinite;
}

.animate-wiggle {
  animation: wiggle 2s ease-in-out;
}

.animate-progress-glow {
  animation: progressGlow 2s ease-in-out infinite;
}

.animate-progress-pulse {
  animation: progressPulse 1s ease-in-out infinite;
}

.animate-gradient-shift {
  background-size: 200% 200%;
  animation: gradientShift 3s ease infinite;
}

.animate-shimmer {
  position: relative;
  overflow: hidden;
}

.animate-shimmer::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: linear-gradient(
    90deg,
    transparent,
    rgba(255, 255, 255, 0.1),
    transparent
  );
  animation: shimmer 2s infinite;
}

/* =================================== */
/* 6. デレイアニメーション */
/* =================================== */

.animate-delay-100 {
  animation-delay: 0.1s;
}

.animate-delay-200 {
  animation-delay: 0.2s;
}

.animate-delay-300 {
  animation-delay: 0.3s;
}

.animate-delay-400 {
  animation-delay: 0.4s;
}

.animate-delay-500 {
  animation-delay: 0.5s;
}

/* =================================== */
/* 7. ホバーアニメーション */
/* =================================== */

.hover-scale {
  transition: transform var(--transition-normal), box-shadow var(--transition-normal);
}

.hover-scale:hover {
  transform: scale(1.05);
  box-shadow: var(--shadow-lg);
}

.hover-lift {
  transition: transform var(--transition-normal), box-shadow var(--transition-normal);
}

.hover-lift:hover {
  transform: translateY(-5px);
  box-shadow: 0 15px 35px rgba(0, 0, 0, 0.2);
}

.hover-glow {
  transition: box-shadow var(--transition-normal);
}

.hover-glow:hover {
  box-shadow: 0 0 20px var(--accent-500);
}

.hover-rotate {
  transition: transform var(--transition-normal);
}

.hover-rotate:hover {
  transform: rotate(5deg);
}

.hover-slide-right {
  transition: transform var(--transition-normal);
}

.hover-slide-right:hover {
  transform: translateX(8px);
}

.hover-slide-left {
  transition: transform var(--transition-normal);
}

.hover-slide-left:hover {
  transform: translateX(-8px);
}

/* =================================== */
/* 8. インタラクティブ効果 */
/* =================================== */

.interactive-os-card:hover {
  transform: translateY(-2px);
  box-shadow: 0 12px 32px rgba(99, 102, 241, 0.15);
}

.detailed-view-btn:hover {
  background: linear-gradient(135deg, #4f46e5, #7c3aed);
  transform: translateY(-1px);
  box-shadow: 0 4px 12px rgba(99, 102, 241, 0.3);
}

.detailed-view-btn:active {
  transform: translateY(0);
  box-shadow: 0 2px 8px rgba(99, 102, 241, 0.2);
}

/* タッチ時のフィードバック */
.touch-feedback {
  -webkit-tap-highlight-color: transparent;
  transition: transform var(--transition-fast);
}

.touch-feedback:active {
  transform: scale(0.98);
}

/* =================================== */
/* 9. 力学可視化アニメーション */
/* =================================== */

.dynamics-metric {
  transition: all var(--transition-normal);
}

.dynamics-metric:hover {
  transform: scale(1.02);
}

.metric-fill {
  transition: width 1s ease-out;
  position: relative;
}

.metric-fill::after {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: linear-gradient(90deg, transparent, rgba(255,255,255,0.2), transparent);
  animation: shimmer 2s infinite;
}

.dimension-fill::after {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: linear-gradient(90deg, transparent, rgba(255,255,255,0.3), transparent);
  animation: shimmer 2s infinite;
}

/* =================================== */
/* 10. モーダルアニメーション */
/* =================================== */

.help-modal.show {
  animation: fadeIn 0.3s ease;
}

.dimension-modal-content {
  transform: scale(0.9) translateY(20px);
  transition: transform var(--transition-normal);
}

.dimension-modal.show .dimension-modal-content {
  transform: scale(1) translateY(0);
}

.detailed-modal-content {
  transform: scale(0.9) translateY(20px);
  transition: transform var(--transition-normal);
}

.detailed-content-modal.show .detailed-modal-content {
  transform: scale(1) translateY(0);
}

/* =================================== */
/* 11. スペシャルエフェクト */
/* =================================== */

.glass-effect {
  background: rgba(255, 255, 255, 0.1);
  backdrop-filter: blur(10px);
  -webkit-backdrop-filter: blur(10px);
  border: 1px solid rgba(255, 255, 255, 0.2);
}

.neon-text {
  color: var(--accent-400);
  text-shadow: 
    0 0 5px var(--accent-500),
    0 0 10px var(--accent-500),
    0 0 20px var(--accent-500);
}

.gradient-text {
  background: linear-gradient(135deg, var(--accent-500), var(--accent-400));
  background-clip: text;
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
  background-clip: text;
}

/* 八卦グラデーション効果 */
.core-wisdom-section {
  background: linear-gradient(135deg, var(--trigram-qian-color), #FFA500);
  background-size: 400% 400%;
  animation: gradientShift 8s ease-in-out infinite;
  border-radius: var(--radius-lg);
  padding: var(--space-lg);
  margin-bottom: var(--space-lg);
  color: #1a1a1a;
  box-shadow: 0 8px 32px rgba(255, 215, 0, 0.2);
}

/* =================================== */
/* 12. スムーズトランジション */
/* =================================== */

.transition-all {
  transition: all var(--transition-normal);
}

.transition-colors {
  transition: color var(--transition-normal), background-color var(--transition-normal), border-color var(--transition-normal);
}

.transition-transform {
  transition: transform var(--transition-normal);
}

.transition-opacity {
  transition: opacity var(--transition-normal);
}

.transition-shadow {
  transition: box-shadow var(--transition-normal);
}

.transition-fast {
  transition: all var(--transition-fast);
}

.transition-slow {
  transition: all var(--transition-slow);
}

/* =================================== */
/* 13. 設問遷移アニメーション */
/* =================================== */

.virtual-question-item {
  animation: slideIn 0.3s ease-out;
}

@keyframes slideIn {
  from {
    opacity: 0;
    transform: translateX(20px);
  }
  to {
    opacity: 1;
    transform: translateX(0);
  }
}

.question-exit {
  animation: slideOut 0.3s ease-out forwards;
}

@keyframes slideOut {
  from {
    opacity: 1;
    transform: translateX(0);
  }
  to {
    opacity: 0;
    transform: translateX(-20px);
  }
}

/* =================================== */
/* 14. レスポンシブアニメーション調整 */
/* =================================== */

@media (max-width: 768px) {
  .animate-slide-in-left,
  .animate-slide-in-right {
    animation: slideInUp 0.6s ease-out forwards;
  }
  
  .hover-scale:hover {
    transform: scale(1.02);
  }
  
  .hover-lift:hover {
    transform: translateY(-2px);
  }
  
  .hover-slide-right:hover,
  .hover-slide-left:hover {
    transform: translateX(0);
  }
}

/* =================================== */
/* 15. アニメーション無効設定 */
/* =================================== */

@media (prefers-reduced-motion: reduce) {
  *,
  *::before,
  *::after {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
  }
  
  .virtual-question-item {
    animation: none;
  }
  
  .progress-bar::after,
  .metric-fill::after,
  .dimension-fill::after {
    animation: none;
  }
  
  .animate-shimmer::before {
    animation: none;
  }
  
  .core-wisdom-section {
    animation: none;
  }
  
  @keyframes slideDown {
    from { opacity: 0; }
    to { opacity: 1; }
  }
  
  @keyframes shimmer {
    0%, 100% { transform: translateX(0); }
  }
  
  @keyframes gradientShift {
    0%, 100% { background-position: 0% 50%; }
  }
}

/* =================================== */
/* 16. パフォーマンス最適化 */
/* =================================== */

/* GPU加速の有効化 */
.will-change-transform {
  will-change: transform;
}

.will-change-opacity {
  will-change: opacity;
}

.will-change-auto {
  will-change: auto;
}

/* 3D変換によるGPU加速 */
.gpu-accelerated {
  transform: translate3d(0, 0, 0);
}

/* ハードウェア加速を利用したアニメーション */
.hw-accelerated {
  backface-visibility: hidden;
  perspective: 1000px;
}

/* =================================== */
/* 17. 批判的思考セクションアニメーション */
/* =================================== */

.critical-tab-content {
  animation: fadeIn 0.4s ease-out;
}

.shadow-os-analysis:hover {
  border-color: rgba(220, 38, 127, 0.5);
  box-shadow: 0 8px 24px rgba(220, 38, 127, 0.1);
}

.challenge-question:hover {
  border-color: rgba(239, 68, 68, 0.5);
  transform: translateY(-2px);
  box-shadow: 0 8px 24px rgba(239, 68, 68, 0.1);
}

.bias-item:hover {
  border-color: rgba(139, 92, 246, 0.5);
  transform: translateY(-1px);
}

/* =================================== */
/* 18. アクセシビリティ配慮 */
/* =================================== */

/* フォーカス時のアニメーション */
button:focus,
.btn:focus,
.nav-button:focus {
  animation: pulse 0.3s ease-out;
}

/* フォーカス可視性の向上 */
.focus-visible {
  outline: 3px solid var(--accent-500);
  outline-offset: 2px;
  animation: pulse 0.5s ease-out;
}

/* ハイコントラストモードでのアニメーション調整 */
@media (prefers-contrast: high) {
  .animate-shimmer::before,
  .neon-text,
  .gradient-text {
    animation: none;
    background: none;
    text-shadow: none;
  }
}

/* ダークモードでのアニメーション調整 */
@media (prefers-color-scheme: dark) {
  .animate-shimmer::before {
    background: linear-gradient(
      90deg,
      transparent,
      rgba(255, 255, 255, 0.05),
      transparent
    );
  }
}