/**
 * HAQEIÈñãÁô∫„É¢„Éº„Éâ„Éû„Éç„Éº„Ç∏„É£„Éº
 * ÈñãÁô∫ÂäπÁéáÂåñ„ÅÆ„Åü„ÇÅ„ÅÆ„É¢„ÉÉ„ÇØ„Éá„Éº„ÇøÁÆ°ÁêÜ„Ç∑„Çπ„ÉÜ„É†
 */

class DevModeManager {
    constructor() {
        this.isDevelopment = this.checkDevelopmentMode();
        this.mockProfiles = {
            // „Éê„É©„É≥„ÇπÂûã„Éó„É≠„Éï„Ç°„Ç§„É´
            balanced: {
                name: "„Éê„É©„É≥„ÇπÂûã",
                engineOS: {
                    score: 75,
                    hexagram: 1,  // ‰πæÁÇ∫Â§©
                    traits: ['ÂâµÈÄ†ÊÄß', '„É™„Éº„ÉÄ„Éº„Ç∑„ÉÉ„Éó', 'Áã¨ÂâµÊÄß'],
                    description: '„Éê„É©„É≥„Çπ„ÅÆÂèñ„Çå„ÅüÂâµÈÄ†ÁöÑ„Å™ÊÄùËÄÉ'
                },
                interfaceOS: {
                    score: 72,
                    hexagram: 11, // Âú∞Â§©Ê≥∞
                    traits: ['ÂçîË™øÊÄß', '„Ç≥„Éü„É•„Éã„Ç±„Éº„Ç∑„Éß„É≥', 'ÊüîËªüÊÄß'],
                    description: 'Ë™øÂíåÁöÑ„Å™ÂØæ‰∫∫Èñ¢‰øÇ'
                },
                safeModeOS: {
                    score: 70,
                    hexagram: 52, // ËâÆÁÇ∫Â±±
                    traits: ['ÊÖéÈáç', 'ÂÆâÂÆöÂøóÂêë', 'ÂÆàÂÇôÁöÑ'],
                    description: 'ÈÅ©Â∫¶„Å™ÊÖéÈáç„Åï'
                }
            },
            
            // Èù©Êñ∞Âûã„Éó„É≠„Éï„Ç°„Ç§„É´
            innovative: {
                name: "Èù©Êñ∞Âûã",
                engineOS: {
                    score: 92,
                    hexagram: 49, // Ê≤¢ÁÅ´Èù©
                    traits: ['Èù©Êñ∞', 'Â§âÈù©', 'ÊåëÊà¶'],
                    description: 'Âº∑„ÅÑÈù©Êñ∞ÂøóÂêë'
                },
                interfaceOS: {
                    score: 65,
                    hexagram: 31, // Ê≤¢Â±±Âí∏
                    traits: ['ÊÑüÂèóÊÄß', 'Áõ¥ÊÑü', 'ÂÖ±ÊÑü'],
                    description: 'Áõ¥ÊÑüÁöÑ„Å™ÂØæ‰∫∫Èñ¢‰øÇ'
                },
                safeModeOS: {
                    score: 45,
                    hexagram: 38, // ÁÅ´Ê≤¢ÁùΩ
                    traits: ['„É™„Çπ„ÇØ„ÉÜ„Ç§„Ç´„Éº', 'Â§ßËÉÜ', 'ÂÜíÈô∫ÁöÑ'],
                    description: '„É™„Çπ„ÇØ„ÇíÊÅê„Çå„Å™„ÅÑÂßøÂã¢'
                }
            },
            
            // ÂÆâÂÆöÂûã„Éó„É≠„Éï„Ç°„Ç§„É´
            stable: {
                name: "ÂÆâÂÆöÂûã",
                engineOS: {
                    score: 60,
                    hexagram: 2,  // Âù§ÁÇ∫Âú∞
                    traits: ['ÂèóÂÆπÊÄß', 'ÂåÖÂÆπÂäõ', 'Á∂ôÁ∂öÊÄß'],
                    description: 'ÁùÄÂÆü„Å™ÂÆüË°åÂäõ'
                },
                interfaceOS: {
                    score: 85,
                    hexagram: 37, // È¢®ÁÅ´ÂÆ∂‰∫∫
                    traits: ['Ë™øÂíå', 'ÂçîÂäõ', '‰ø°È†ºÊßãÁØâ'],
                    description: 'È´ò„ÅÑÂçîË™øÊÄß'
                },
                safeModeOS: {
                    score: 88,
                    hexagram: 12, // Â§©Âú∞Âê¶
                    traits: ['ÊÖéÈáç', '‰øùÂÆàÁöÑ', 'ÂÆâÂÖ®ÈáçË¶ñ'],
                    description: 'Âº∑„ÅÑÂÆâÂÖ®ÂøóÂêë'
                }
            },
            
            // „Çπ„Éà„É¨„ÇπÁä∂ÊÖã„Éó„É≠„Éï„Ç°„Ç§„É´
            stressed: {
                name: "„Çπ„Éà„É¨„ÇπÁä∂ÊÖã",
                engineOS: {
                    score: 45,
                    hexagram: 47, // Ê≤¢Ê∞¥Âõ∞
                    traits: ['Âõ∞Èõ£', 'ÂÅúÊªû', 'ËëõËó§'],
                    description: 'ÁõÆÊ®ôÈÅîÊàê„ÅÆÂõ∞Èõ£'
                },
                interfaceOS: {
                    score: 38,
                    hexagram: 39, // Ê∞¥Â±±Ëπá
                    traits: ['Â≠§Á´ã', '‰∏ç‰ø°', 'Èò≤Âæ°ÁöÑ'],
                    description: 'ÂØæ‰∫∫Èñ¢‰øÇ„ÅÆÂõ∞Èõ£'
                },
                safeModeOS: {
                    score: 95,
                    hexagram: 29, // ÂùéÁÇ∫Ê∞¥
                    traits: ['ÈÅéÂ∫¶„ÅÆË≠¶Êàí', '‰∏çÂÆâ', 'ÂõûÈÅø'],
                    description: 'ÈÅéÂâ∞„Å™Èò≤Âæ°ÂèçÂøú'
                }
            }
        };
    }
    
    /**
     * ÈñãÁô∫„É¢„Éº„Éâ„Åã„Å©„ÅÜ„Åã„ÉÅ„Çß„ÉÉ„ÇØ
     */
    checkDevelopmentMode() {
        // URL„Éë„É©„É°„Éº„Çø„ÄÅ„É≠„Éº„Ç´„É´„Éõ„Çπ„Éà„ÄÅ„Åæ„Åü„ÅØÁí∞Â¢ÉÂ§âÊï∞„ÅßÂà§ÂÆö
        const urlParams = new URLSearchParams(window.location.search);
        const isDevParam = urlParams.get('dev') === 'true';
        const isLocalhost = window.location.hostname === 'localhost' || 
                          window.location.hostname === '127.0.0.1';
        const isDevStorage = localStorage.getItem('haqei_dev_mode') === 'true';
        
        return isDevParam || isLocalhost || isDevStorage;
    }
    
    /**
     * ÈñãÁô∫„É¢„Éº„Éâ„ÇíÊúâÂäπÂåñ
     */
    enableDevMode() {
        localStorage.setItem('haqei_dev_mode', 'true');
        this.isDevelopment = true;
        console.log('üîß ÈñãÁô∫„É¢„Éº„Éâ„ÇíÊúâÂäπÂåñ„Åó„Åæ„Åó„Åü');
        this.showDevPanel();
    }
    
    /**
     * ÈñãÁô∫„É¢„Éº„Éâ„ÇíÁÑ°ÂäπÂåñ
     */
    disableDevMode() {
        localStorage.removeItem('haqei_dev_mode');
        localStorage.removeItem('osAnalysisResult');
        this.isDevelopment = false;
        console.log('‚úÖ ÈñãÁô∫„É¢„Éº„Éâ„ÇíÁÑ°ÂäπÂåñ„Åó„Åæ„Åó„Åü');
        this.hideDevPanel();
    }
    
    /**
     * „É¢„ÉÉ„ÇØ„Éá„Éº„Çø„ÇíË®≠ÂÆö
     */
    setMockData(profileType = 'balanced') {
        if (!this.isDevelopment) {
            console.warn('ÈñãÁô∫„É¢„Éº„Éâ„ÅåÁÑ°Âäπ„Åß„Åô');
            return false;
        }
        
        const profile = this.mockProfiles[profileType];
        if (!profile) {
            console.error('ÊåáÂÆö„Åï„Çå„Åü„Éó„É≠„Éï„Ç°„Ç§„É´„ÅåÂ≠òÂú®„Åó„Åæ„Åõ„Çì:', profileType);
            return false;
        }
        
        // 36Âïè„ÅÆÂõûÁ≠î„Éá„Éº„Çø„ÇÇÁîüÊàê
        const answers = this.generateAnswers(profileType);
        
        // LocalStorage„Å´‰øùÂ≠ò
        localStorage.setItem('osAnalysisResult', JSON.stringify(profile));
        localStorage.setItem('osAnalysisAnswers', JSON.stringify(answers));
        localStorage.setItem('currentMockProfile', profileType);
        
        console.log(`‚úÖ „É¢„ÉÉ„ÇØ„Éá„Éº„ÇøË®≠ÂÆöÂÆå‰∫Ü: ${profile.name}`);
        return true;
    }
    
    /**
     * „Éó„É≠„Éï„Ç°„Ç§„É´„Å´Âøú„Åò„Åü36Âïè„ÅÆÂõûÁ≠î„ÇíÁîüÊàê
     */
    generateAnswers(profileType) {
        const rng = window.seedableRandom || { next: () => 0.5 }; // Ê±∫ÂÆöË´ñRNG‰ΩøÁî®
        const answerPatterns = {
            balanced: () => 3 + Math.floor(rng.next() * 3), // 3-5
            innovative: () => rng.next() > 0.7 ? 5 : 4,     // ‰∏ª„Å´4-5
            stable: () => rng.next() > 0.3 ? 2 : 3,         // ‰∏ª„Å´2-3
            stressed: () => rng.next() > 0.5 ? 1 : 2        // ‰∏ª„Å´1-2
        };
        
        const pattern = answerPatterns[profileType] || answerPatterns.balanced;
        const answers = {};
        
        for (let i = 1; i <= 36; i++) {
            answers[`q${i}`] = pattern();
        }
        
        return answers;
    }
    
    /**
     * ÈñãÁô∫„Éë„Éç„É´„ÇíË°®Á§∫
     */
    showDevPanel() {
        if (!this.isDevelopment) return;
        
        // Êó¢Â≠ò„ÅÆ„Éë„Éç„É´„Åå„ÅÇ„Çå„Å∞ÂâäÈô§
        const existing = document.getElementById('dev-panel');
        if (existing) existing.remove();
        
        const panel = document.createElement('div');
        panel.id = 'dev-panel';
        panel.innerHTML = `
            <style>
                #dev-panel {
                    position: fixed;
                    bottom: 20px;
                    right: 20px;
                    background: rgba(15, 23, 42, 0.95);
                    border: 2px solid #3b82f6;
                    border-radius: 12px;
                    padding: 20px;
                    z-index: 10000;
                    color: white;
                    font-family: monospace;
                    box-shadow: 0 10px 25px rgba(0, 0, 0, 0.5);
                    max-width: 300px;
                }
                
                #dev-panel h3 {
                    margin: 0 0 15px 0;
                    color: #3b82f6;
                    font-size: 14px;
                }
                
                #dev-panel .dev-controls {
                    display: flex;
                    flex-direction: column;
                    gap: 10px;
                }
                
                #dev-panel button {
                    background: #3b82f6;
                    color: white;
                    border: none;
                    padding: 8px 12px;
                    border-radius: 6px;
                    cursor: pointer;
                    font-size: 12px;
                    transition: all 0.3s;
                }
                
                #dev-panel button:hover {
                    background: #2563eb;
                    transform: translateY(-1px);
                }
                
                #dev-panel select {
                    background: #1e293b;
                    color: white;
                    border: 1px solid #3b82f6;
                    padding: 8px;
                    border-radius: 6px;
                    font-size: 12px;
                }
                
                #dev-panel .status {
                    margin-top: 10px;
                    padding: 8px;
                    background: rgba(59, 130, 246, 0.1);
                    border-radius: 6px;
                    font-size: 11px;
                }
                
                #dev-panel .close-btn {
                    position: absolute;
                    top: 10px;
                    right: 10px;
                    background: transparent;
                    color: #64748b;
                    padding: 4px 8px;
                    font-size: 16px;
                }
                
                #dev-panel .close-btn:hover {
                    color: #e2e8f0;
                    background: transparent;
                }
            </style>
            
            <button class="close-btn" onclick="devMode.hideDevPanel()">√ó</button>
            <h3>üîß ÈñãÁô∫„É¢„Éº„Éâ</h3>
            
            <div class="dev-controls">
                <select id="profile-selector">
                    <option value="balanced">„Éê„É©„É≥„ÇπÂûã</option>
                    <option value="innovative">Èù©Êñ∞Âûã</option>
                    <option value="stable">ÂÆâÂÆöÂûã</option>
                    <option value="stressed">„Çπ„Éà„É¨„ÇπÁä∂ÊÖã</option>
                </select>
                
                <button onclick="devMode.applyProfile()">
                    „Éó„É≠„Éï„Ç°„Ç§„É´ÈÅ©Áî®
                </button>
                
                <button onclick="devMode.clearData()">
                    „Éá„Éº„Çø„ÇØ„É™„Ç¢
                </button>
                
                <button onclick="devMode.reloadPage()">
                    „Éö„Éº„Ç∏„É™„É≠„Éº„Éâ
                </button>
                
                <button onclick="devMode.goToAnalyzer()">
                    OS„Ç¢„Éä„É©„Ç§„Ç∂„Éº„Å∏
                </button>
                
                <button onclick="devMode.disableDevMode()">
                    ÈñãÁô∫„É¢„Éº„ÉâÁµÇ‰∫Ü
                </button>
            </div>
            
            <div class="status" id="dev-status">
                ÁèæÂú®„ÅÆ„Éó„É≠„Éï„Ç°„Ç§„É´: ${localStorage.getItem('currentMockProfile') || '„Å™„Åó'}
            </div>
        `;
        
        document.body.appendChild(panel);
    }
    
    /**
     * ÈñãÁô∫„Éë„Éç„É´„ÇíÈùûË°®Á§∫
     */
    hideDevPanel() {
        const panel = document.getElementById('dev-panel');
        if (panel) panel.remove();
    }
    
    /**
     * „Éó„É≠„Éï„Ç°„Ç§„É´„ÇíÈÅ©Áî®
     */
    applyProfile() {
        const selector = document.getElementById('profile-selector');
        const profileType = selector.value;
        this.setMockData(profileType);
        this.updateStatus(`„Éó„É≠„Éï„Ç°„Ç§„É´ÈÅ©Áî®: ${this.mockProfiles[profileType].name}`);
    }
    
    /**
     * „Éá„Éº„Çø„Çí„ÇØ„É™„Ç¢
     */
    clearData() {
        localStorage.removeItem('osAnalysisResult');
        localStorage.removeItem('osAnalysisAnswers');
        localStorage.removeItem('currentMockProfile');
        this.updateStatus('„Éá„Éº„Çø„Çí„ÇØ„É™„Ç¢„Åó„Åæ„Åó„Åü');
    }
    
    /**
     * „Éö„Éº„Ç∏„Çí„É™„É≠„Éº„Éâ
     */
    reloadPage() {
        window.location.reload();
    }
    
    /**
     * OS„Ç¢„Éä„É©„Ç§„Ç∂„Éº„Å∏ÈÅ∑Áßª
     */
    goToAnalyzer() {
        window.location.href = '/os_analyzer.html';
    }
    
    /**
     * „Çπ„ÉÜ„Éº„Çø„ÇπÊõ¥Êñ∞
     */
    updateStatus(message) {
        const status = document.getElementById('dev-status');
        if (status) {
            status.textContent = message;
            status.style.background = 'rgba(16, 185, 129, 0.2)';
            setTimeout(() => {
                status.style.background = 'rgba(59, 130, 246, 0.1)';
            }, 2000);
        }
    }
}

// „Ç∞„É≠„Éº„Éê„É´„Å´ÂÖ¨Èñã
window.devMode = new DevModeManager();

// ÈñãÁô∫„É¢„Éº„Éâ„ÅÆÂ†¥Âêà„ÄÅËá™ÂãïÁöÑ„Å´„Éë„Éç„É´Ë°®Á§∫
if (window.devMode.isDevelopment) {
    document.addEventListener('DOMContentLoaded', () => {
        window.devMode.showDevPanel();
        console.log('üîß ÈñãÁô∫„É¢„Éº„ÉâÊúâÂäπ - Âè≥‰∏ã„ÅÆ„Éë„Éç„É´„Åã„ÇâÊìç‰ΩúÂèØËÉΩ');
    });
}

// „Ç≥„É≥„ÇΩ„Éº„É´„Ç≥„Éû„É≥„Éâ„ÇÇÊèê‰æõ
console.log('üí° ÈñãÁô∫„É¢„Éº„Éâ„Ç≥„Éû„É≥„Éâ:');
console.log('  devMode.enableDevMode() - ÈñãÁô∫„É¢„Éº„ÉâÊúâÂäπÂåñ');
console.log('  devMode.setMockData("balanced") - „É¢„ÉÉ„ÇØ„Éá„Éº„ÇøË®≠ÂÆö');
console.log('  devMode.clearData() - „Éá„Éº„Çø„ÇØ„É™„Ç¢');