class ErrorHandler {    constructor(uiContainerId) {        this.uiContainer = document.getElementById(uiContainerId);        if (!this.uiContainer) {            console.warn(`ErrorHandler: UI container with ID '${uiContainerId}' not found.`);        }    }    /**     * エラーを処理し、必要に応じてUIに表示する     * @param {Error} error - 発生したエラーオブジェクト     * @param {string} context - エラーが発生したコンテキスト（例: "データ読み込み", "UIレンダリング"）     * @param {Object} details - エラーに関する追加の詳細情報     */    handleError(error, context = "不明なエラー", details = {}) {        console.error(`❌ [ErrorHandler] ${context}でエラーが発生しました:`, error, details);        let userMessage = "予期せぬエラーが発生しました。しばらくしてからもう一度お試しください。";        let showRetryOption = false;        if (error.message.includes("ネットワーク")) {            userMessage = "ネットワーク接続に問題があるようです。インターネット接続を確認してください。";            showRetryOption = true;        } else if (error.message.includes("データが見つかりません") || error.message.includes("データ不整合")) {            userMessage = "必要なデータの一部が読み込めませんでした。ページを再読み込みすると解決する場合があります。";            showRetryOption = true;        } else if (error.message.includes("初期化されていません")) {            userMessage = "システムが完全に初期化されていません。ページを再読み込みしてください。";            showRetryOption = true;        }        this.displayError(userMessage, showRetryOption, error, context, details);    }    /**     * UIにエラーメッセージを表示する     * @param {string} message - ユーザーに表示するメッセージ     * @param {boolean} showRetry - 再試行ボタンを表示するか     * @param {Error} originalError - 元のエラーオブジェクト     * @param {string} context - エラーコンテキスト     * @param {Object} details - エラー詳細     */    displayError(message, showRetry, originalError, context, details) {        if (!this.uiContainer) {            alert(`エラー: ${message}\n詳細: ${originalError.message}`);            return;        }        this.uiContainer.innerHTML = `            <div class="error-overlay">                <div class="error-card">                    <h2>⚠️ エラーが発生しました</h2>                    <p>${message}</p>                    ${showRetry ? '<button id="retry-button" class="btn btn-primary">再試行</button>' : ''}                    <details>                        <summary>詳細情報 (開発者向け)</summary>                        <pre><code>コンテキスト: ${context}メッセージ: ${originalError.message}スタック: ${originalError.stack || 'N/A'}詳細: ${JSON.stringify(details, null, 2)}                        </code></pre>                    </details>                </div>            </div>        `;        if (showRetry) {            document.getElementById('retry-button').addEventListener('click', () => {                window.location.reload(); // ページを再読み込みして再試行            });        }    }    /**     * UIからエラーメッセージをクリアする     */    clearError() {        if (this.uiContainer) {            this.uiContainer.innerHTML = '';        }    }}