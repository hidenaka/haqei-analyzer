/**
 * Question Display Ultimate Fix - CSS
 * 「element is not visible」問題の完全解決CSS
 * 
 * 目的：
 * - CSS競合の根本的解決
 * - 29個のCSSファイル間の優先度競合回避
 * - Shadow DOM スタイル隔離の補完
 * - レスポンシブ対応とアクセシビリティ
 * - bunenjin哲学に基づく美しいデザイン
 */

/* =================================================================
   1. グローバルリセットと基本設定
   ================================================================= */

/* haqei-question要素の基本保証 */
haqei-question,
haqei-question-v2 {
  display: block !important;
  visibility: visible !important;
  opacity: 1 !important;
  position: relative !important;
  width: 100% !important;
  min-height: 200px !important;
  height: auto !important;
  margin: 20px auto !important;
  max-width: 800px !important;
  z-index: 10 !important;
  pointer-events: auto !important;
  transform: none !important;
  clip: auto !important;
  clip-path: none !important;
  box-sizing: border-box !important;
  contain: layout style paint !important;
  will-change: transform !important;
}

/* アクティブ状態の強化 */
haqei-question.active-question,
haqei-question-v2.active-question {
  display: block !important;
  opacity: 1 !important;
  visibility: visible !important;
  z-index: 100 !important;
}

/* virtual-viewportとの連携 */
.virtual-viewport haqei-question,
.virtual-viewport haqei-question-v2 {
  display: block !important;
  opacity: 1 !important;
  visibility: visible !important;
}

/* =================================================================
   2. CSS競合の根本的解決
   ================================================================= */

/* 他のCSSファイルによる非表示化を防止 */
.virtual-question-flow haqei-question,
.virtual-question-flow haqei-question-v2,
.question-flow-container haqei-question,
.question-flow-container haqei-question-v2 {
  display: block !important;
  visibility: visible !important;
  opacity: 1 !important;
}

/* 隠れたstyle属性による非表示化を防止 */
haqei-question[style*="display: none"],
haqei-question[style*="display:none"],
haqei-question-v2[style*="display: none"],
haqei-question-v2[style*="display:none"] {
  display: block !important;
}

haqei-question[style*="visibility: hidden"],
haqei-question[style*="visibility:hidden"],
haqei-question-v2[style*="visibility: hidden"],
haqei-question-v2[style*="visibility:hidden"] {
  visibility: visible !important;
}

haqei-question[style*="opacity: 0"],
haqei-question[style*="opacity:0"],
haqei-question-v2[style*="opacity: 0"],
haqei-question-v2[style*="opacity:0"] {
  opacity: 1 !important;
}

/* =================================================================
   3. 親要素による制約の解除
   ================================================================= */

/* 親要素による制約を回避 */
.virtual-viewport,
.question-container,
.question-flow-wrapper,
#virtual-viewport {
  overflow: visible !important;
  min-height: auto !important;
  height: auto !important;
  max-height: none !important;
}

/* スクロール制約の解除 */
body.question-flow-active,
html.question-flow-active {
  overflow-y: auto !important;
  height: auto !important;
}

/* =================================================================
   4. ラジオボタンとラベルの確実な表示
   ================================================================= */

/* ラジオボタンの基本表示 */
haqei-question input[type="radio"],
haqei-question-v2 input[type="radio"] {
  display: inline-block !important;
  visibility: visible !important;
  opacity: 1 !important;
  pointer-events: auto !important;
  position: relative !important;
  width: 20px !important;
  height: 20px !important;
  margin: 5px !important;
  z-index: 10 !important;
}

/* オプションラベルの確実な表示 */
haqei-question .option-label,
haqei-question-v2 .option-label,
haqei-question label,
haqei-question-v2 label {
  display: flex !important;
  visibility: visible !important;
  opacity: 1 !important;
  pointer-events: auto !important;
  align-items: center !important;
  min-height: 50px !important;
  width: 100% !important;
  box-sizing: border-box !important;
  position: relative !important;
  z-index: 10 !important;
  cursor: pointer !important;
}

/* =================================================================
   5. Shadow DOM補完スタイル
   ================================================================= */

/* Shadow DOMが利用できない場合のフォールバックスタイル */
.fallback-question {
  background: rgba(30, 41, 59, 0.95) !important;
  border-radius: 12px !important;
  padding: 24px !important;
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.3) !important;
  border: 1px solid rgba(99, 102, 241, 0.3) !important;
  color: #f1f5f9 !important;
  margin: 20px auto !important;
  max-width: 800px !important;
}

.fallback-question .question-header {
  display: flex !important;
  align-items: center !important;
  margin-bottom: 20px !important;
}

.fallback-question .question-icon {
  font-size: 24px !important;
  margin-right: 12px !important;
}

.fallback-question .question-title {
  font-size: 18px !important;
  font-weight: 600 !important;
  color: #f1f5f9 !important;
  margin: 0 !important;
  line-height: 1.4 !important;
}

.fallback-question .question-options {
  display: flex !important;
  flex-direction: column !important;
  gap: 12px !important;
}

.fallback-question .option-label {
  display: flex !important;
  align-items: center !important;
  padding: 16px 20px !important;
  border: 2px solid rgba(99, 102, 241, 0.2) !important;
  border-radius: 12px !important;
  cursor: pointer !important;
  transition: all 0.3s ease !important;
  background: rgba(51, 65, 85, 0.8) !important;
  color: #e2e8f0 !important;
  margin-bottom: 8px !important;
}

.fallback-question .option-label:hover {
  border-color: rgba(99, 102, 241, 0.5) !important;
  background-color: rgba(99, 102, 241, 0.15) !important;
  transform: translateX(4px) !important;
}

/* =================================================================
   6. エラー状態とデバッグ表示
   ================================================================= */

/* エラー状態の表示 */
.error-question {
  background: rgba(220, 38, 38, 0.1) !important;
  border: 2px solid rgba(248, 113, 113, 0.5) !important;
  padding: 30px !important;
  text-align: center !important;
  border-radius: 12px !important;
  margin: 20px auto !important;
  max-width: 800px !important;
}

.error-question .error-icon {
  font-size: 48px !important;
  margin-bottom: 16px !important;
}

.error-question .error-title {
  color: #fca5a5 !important;
  font-size: 18px !important;
  margin-bottom: 12px !important;
}

.error-question .error-message {
  color: #fecaca !important;
  font-size: 14px !important;
}

/* デバッグ用の可視化 */
.debug-mode haqei-question,
.debug-mode haqei-question-v2 {
  border: 3px dashed #00ff00 !important;
  background: rgba(0, 255, 0, 0.1) !important;
}

.debug-mode haqei-question::before,
.debug-mode haqei-question-v2::before {
  content: "DEBUG: " attr(data-question-id) " - VISIBLE";
  position: absolute;
  top: -30px;
  left: 0;
  background: #00ff00;
  color: #000;
  padding: 4px 8px;
  font-size: 12px;
  font-weight: bold;
  z-index: 1000;
}

/* =================================================================
   7. レスポンシブ対応
   ================================================================= */

/* タブレット対応 */
@media (max-width: 1024px) {
  haqei-question,
  haqei-question-v2 {
    margin: 15px auto !important;
    max-width: 90% !important;
  }
}

/* モバイル対応 */
@media (max-width: 768px) {
  haqei-question,
  haqei-question-v2 {
    margin: 10px auto !important;
    max-width: 95% !important;
    min-height: 150px !important;
  }
  
  haqei-question .option-label,
  haqei-question-v2 .option-label {
    min-height: 44px !important; /* タッチターゲットの最小サイズ */
    padding: 12px 16px !important;
  }
  
  haqei-question input[type="radio"],
  haqei-question-v2 input[type="radio"] {
    width: 18px !important;
    height: 18px !important;
  }
}

/* 小画面モバイル対応 */
@media (max-width: 480px) {
  haqei-question,
  haqei-question-v2 {
    margin: 8px auto !important;
    max-width: 98% !important;
  }
}

/* =================================================================
   8. アクセシビリティ対応
   ================================================================= */

/* ハイコントラストモード */
@media (prefers-contrast: high) {
  haqei-question,
  haqei-question-v2 {
    border: 3px solid #ffffff !important;
  }
  
  haqei-question .option-label,
  haqei-question-v2 .option-label {
    border-width: 3px !important;
  }
}

/* 動きを抑制する設定 */
@media (prefers-reduced-motion: reduce) {
  haqei-question,
  haqei-question-v2,
  haqei-question *,
  haqei-question-v2 * {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
  }
}

/* フォーカス表示の強化 */
haqei-question:focus-within,
haqei-question-v2:focus-within {
  outline: 3px solid #3b82f6 !important;
  outline-offset: 2px !important;
}

haqei-question .option-label:focus,
haqei-question-v2 .option-label:focus {
  outline: 2px solid #3b82f6 !important;
  outline-offset: 2px !important;
}

/* =================================================================
   9. パフォーマンス最適化
   ================================================================= */

/* GPUアクセラレーション */
haqei-question,
haqei-question-v2 {
  transform: translateZ(0) !important;
  backface-visibility: hidden !important;
  perspective: 1000px !important;
}

/* contain プロパティによる最適化 */
haqei-question,
haqei-question-v2 {
  contain: layout style paint !important;
}

/* will-change による最適化 */
haqei-question.active-question,
haqei-question-v2.active-question {
  will-change: transform, opacity !important;
}

/* =================================================================
   10. 緊急修復クラス
   ================================================================= */

/* 緊急時に適用する強制表示クラス */
.force-visible,
.emergency-visible,
.force-display {
  display: block !important;
  visibility: visible !important;
  opacity: 1 !important;
  position: relative !important;
  width: 100% !important;
  height: auto !important;
  min-height: 200px !important;
  z-index: 999 !important;
  pointer-events: auto !important;
  transform: none !important;
  clip: auto !important;
  clip-path: none !important;
}

/* 全ての子要素も強制表示 */
.force-visible *,
.emergency-visible *,
.force-display * {
  display: block !important;
  visibility: visible !important;
  opacity: 1 !important;
  pointer-events: auto !important;
}

/* ラジオボタンとラベルは適切な表示形式に */
.force-visible input[type="radio"],
.emergency-visible input[type="radio"],
.force-display input[type="radio"] {
  display: inline-block !important;
}

.force-visible label,
.emergency-visible label,
.force-display label,
.force-visible .option-label,
.emergency-visible .option-label,
.force-display .option-label {
  display: flex !important;
}

/* =================================================================
   11. 統合テスト用スタイル
   ================================================================= */

/* テスト時の視覚化 */
.test-mode haqei-question,
.test-mode haqei-question-v2 {
  border: 2px solid #00ff00 !important;
  position: relative !important;
}

.test-mode haqei-question::after,
.test-mode haqei-question-v2::after {
  content: "✅ VISIBLE: " attr(data-question-id);
  position: absolute;
  bottom: -25px;
  left: 0;
  background: #00ff00;
  color: #000;
  padding: 2px 6px;
  font-size: 11px;
  font-weight: bold;
  z-index: 1000;
  border-radius: 3px;
}

/* 非表示要素の検出 */
.test-mode haqei-question[style*="display: none"]::after,
.test-mode haqei-question-v2[style*="display: none"]::after {
  content: "❌ HIDDEN: " attr(data-question-id) " (display: none)";
  background: #ff0000;
  color: #fff;
}

.test-mode haqei-question[style*="visibility: hidden"]::after,
.test-mode haqei-question-v2[style*="visibility: hidden"]::after {
  content: "❌ HIDDEN: " attr(data-question-id) " (visibility: hidden)";
  background: #ff0000;
  color: #fff;
}

/* =================================================================
   12. 印刷対応
   ================================================================= */

@media print {
  haqei-question,
  haqei-question-v2 {
    display: block !important;
    page-break-inside: avoid !important;
    margin: 10px 0 !important;
    background: #fff !important;
    color: #000 !important;
    border: 1px solid #000 !important;
    box-shadow: none !important;
  }
  
  haqei-question .option-label,
  haqei-question-v2 .option-label {
    background: transparent !important;
    border: 1px solid #000 !important;
    color: #000 !important;
  }
}