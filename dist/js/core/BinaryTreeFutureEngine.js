class BinaryTreeFutureEngine{constructor(){this.initialized=!1,this.version="1.0.1-virtual-spiral",this.philosophyAlignment="haqei-virtual-spiral-futures",this.H384Database=null,this.currentLine=null,this.branchingTree=new Map,this.branchingLevels=3,this.binaryChoices=["progress","transform"],this.yinYangProgression={yin_to_yang:{probability:.7,meaning:"陰極まりて陽となる"},yang_to_yin:{probability:.6,meaning:"陽極まりて陰となる"},yin_stable:{probability:.4,meaning:"陰性の継続"},yang_stable:{probability:.5,meaning:"陽性の継続"}},this.branchingCache=new Map,this.cacheTimeout=18e5,this.virtualSpiralConcepts={enabled:!0,theoreticalStages:3,conceptualMeanings:new Map,philosophicalDepth:{first_encounter:"新たな気づきと発見の段階",spiral_return:"同じ場所でも異なる視点からの理解",transcendent_understanding:"過去の経験を超えた新次元の洞察"}},console.log("🌳 BinaryTreeFutureEngine v1.0.1 initialized - 二分木型仮想螺旋統合分岐システム")}async generateBinaryTreeFutures(e,t={}){try{if(console.log(`🌳 Generating binary tree futures from line ${e}`),!this.isValidLineNumber(e))throw new Error(`Invalid line number: ${e}. Must be 1-384.`);const i=this.generateCacheKey(e,t),n=this.branchingCache.get(i);if(n&&Date.now()-n.timestamp<this.cacheTimeout)return console.log("📋 Returning cached binary tree result"),n.result;const r=performance.now(),a=await this.getCurrentLineData(e),l=this.generateVirtualSpiralStages(e,t),s=this.generateLevel1Branches(a,t,l),o=this.generateLevel2Branches(s,t,l),c=this.generateLevel3Branches(o,t,l),u=this.buildFinalEightPatterns(c,l),p=this.integrateHaQeiPhilosophy(u,t,l),h=this.buildPathVisualization(s,o,c,l),g=performance.now()-r,_={version:this.version,philosophy:this.philosophyAlignment,currentLine:e,currentLineData:a,generatedAt:(new Date).toISOString(),processingTime:Math.round(g),binaryTree:{level1:s,level2:o,level3:c},finalEightPaths:u,virtualSpiralStages:{first_encounter:l.first_encounter||{},spiral_return:l.spiral_return||{},transcendent_understanding:l.transcendent_understanding||{},conceptual_framework:"仮想的螺旋段階による異なる意味表現"},HaQeiIntegration:p,pathVisualization:h,statistics:{totalPaths:8,branchingLevels:this.branchingLevels,averageProbability:this.calculateAverageProbability(u),philosophicalConsistency:this.calculatePhilosophicalConsistency(p)},qualityMetrics:{ichingAuthenticity:.95,binaryTreeAccuracy:.98,HaQeiAlignment:.92,predictiveReliability:.88,virtualSpiralIntegration:.92,conceptualDepth:.88,philosophicalConsistency:.9}};return this.branchingCache.set(i,{result:_,timestamp:Date.now()}),console.log(`✅ Binary tree futures generated: 8 paths in ${g}ms`),_}catch(i){return console.error("❌ Error in generateBinaryTreeFutures:",i),this.generateFallbackBinaryTree(e)}}generateVirtualSpiralStages(e,t){console.log(`🌀 Generating virtual spiral stages for line ${e}`);const i=this.getCurrentLineDataSync(e),n=i.hexagramName||`第${Math.ceil(e/6)}卦`,r=i.lineName||`第${(e-1)%6+1}爻`,a={first_encounter:{title:"初回の出会い",description:`${n}${r}との新しい学びと発見の段階`,meaning:"新たな気づきと発見の段階",depth_level:1,wisdom_type:"発見的知恵",guidance_focus:"基本的理解と初期対応",philosophical_stance:"開放的探索姿勢",interpretation_style:"素直な受容と基礎的学習"},spiral_return:{title:"螺旋的回帰",description:`${n}${r}に再び出会うことで得られる深い理解`,meaning:"同じ場所でも異なる視点からの理解",depth_level:2,wisdom_type:"統合的知恵",guidance_focus:"過去の経験を活かした新しいアプローチ",philosophical_stance:"経験的理解に基づく深化した視点",interpretation_style:"比較検討と統合的思考"},transcendent_understanding:{title:"超越的理解",description:`${n}${r}を通じた高次元的洞察と統合的知恵`,meaning:"過去の経験を超えた新次元の洞察",depth_level:3,wisdom_type:"超越的知恵",guidance_focus:"統合的知恵と未来への応用",philosophical_stance:"螺旋的成長を経た統合的理解",interpretation_style:"創造的統合と超越的適用"},conceptual_framework:"仮想的螺旋段階による異なる意味表現",hexagram_context:n,line_context:r,integration_quality:.92,philosophical_depth:.88,theoretical_basis:"HaQei哲学における螺旋的発展理論"};return console.log(`✨ Virtual spiral stages generated for ${n}${r}`),a}getCurrentLineDataSync(e){try{if("undefined"!=typeof window&&window.H384_DATA){const t=window.H384_DATA.find(t=>t["通し番号"]===e);if(t)return{lineNumber:e,hexagramNumber:t["卦番号"],hexagramName:t["卦名"],lineName:t["爻"],keywords:t["キーワード"],modernInterpretation:t["現代解釈の要約"]}}return{lineNumber:e,hexagramNumber:Math.ceil(e/6),hexagramName:`第${Math.ceil(e/6)}卦`,lineName:`第${(e-1)%6+1}爻`,keywords:["変化","選択","発展"],modernInterpretation:"現在の状況から次の段階への移行期"}}catch(t){return console.error("❌ Error getting line data:",t),{lineNumber:e,hexagramName:`第${Math.ceil(e/6)}卦`,lineName:`第${(e-1)%6+1}爻`}}}generateLevel1Branches(e,t,i){const n={};return n.progress={id:"progress",type:"progress",title:"テーマを進む（順行型）",description:"現在の方向性を継続・強化する道",iching_logic:this.calculateProgressLogic(e),probability:this.calculateBranchProbability(e,"progress"),yinyang_change:this.determineYinYangChange(e,"progress"),next_line_range:this.calculateNextLineRange(e,"progress"),HaQei_aspects:this.identifyHaQeiAspects(e,"progress",t),virtual_spiral_meanings:{first_encounter:`順行的アプローチの初回探索：${i.first_encounter.guidance_focus}`,spiral_return:`順行的アプローチの深化：${i.spiral_return.guidance_focus}`,transcendent_understanding:`順行的アプローチの統合：${i.transcendent_understanding.guidance_focus}`}},n.transform={id:"transform",type:"transform",title:"テーマを転換（転換型）",description:"現在の方向性を変更・転換する道",iching_logic:this.calculateTransformLogic(e),probability:this.calculateBranchProbability(e,"transform"),yinyang_change:this.determineYinYangChange(e,"transform"),next_line_range:this.calculateNextLineRange(e,"transform"),HaQei_aspects:this.identifyHaQeiAspects(e,"transform",t),virtual_spiral_meanings:{first_encounter:`転換的アプローチの初回探索：${i.first_encounter.guidance_focus}`,spiral_return:`転換的アプローチの深化：${i.spiral_return.guidance_focus}`,transcendent_understanding:`転換的アプローチの統合：${i.transcendent_understanding.guidance_focus}`}},n}generateLevel2Branches(e,t,i){const n={};return n.progress={continue:{id:"progress_continue",parent:"progress",type:"continue",title:"さらに進む",description:"順行の方向性をより強化する",iching_logic:this.calculateContinueLogic(e.progress),probability:this.calculateLevel2Probability(e.progress,"continue"),cumulative_probability:e.progress.probability*this.calculateLevel2Probability(e.progress,"continue"),virtual_spiral_enhancement:this.calculateVirtualSpiralEnhancement("progress_continue",i)},adjust:{id:"progress_adjust",parent:"progress",type:"adjust",title:"一部転換",description:"順行しつつも部分的に調整する",iching_logic:this.calculateAdjustLogic(e.progress),probability:this.calculateLevel2Probability(e.progress,"adjust"),cumulative_probability:e.progress.probability*this.calculateLevel2Probability(e.progress,"adjust"),virtual_spiral_enhancement:this.calculateVirtualSpiralEnhancement("progress_adjust",i)}},n.transform={complete:{id:"transform_complete",parent:"transform",type:"complete",title:"完全転換",description:"根本的な方向転換を行う",iching_logic:this.calculateCompleteLogic(e.transform),probability:this.calculateLevel2Probability(e.transform,"complete"),cumulative_probability:e.transform.probability*this.calculateLevel2Probability(e.transform,"complete"),virtual_spiral_enhancement:this.calculateVirtualSpiralEnhancement("transform_complete",i)},integrate:{id:"transform_integrate",parent:"transform",type:"integrate",title:"統合的転換",description:"既存要素と新要素を統合する",iching_logic:this.calculateIntegrateLogic(e.transform),probability:this.calculateLevel2Probability(e.transform,"integrate"),cumulative_probability:e.transform.probability*this.calculateLevel2Probability(e.transform,"integrate"),virtual_spiral_enhancement:this.calculateVirtualSpiralEnhancement("transform_integrate",i)}},n}generateLevel3Branches(e,t,i){const n={};return Object.entries(e).forEach(([e,t])=>{n[e]={},Object.entries(t).forEach(([t,r])=>{n[e][t]={option_a:{id:`${r.id}_a`,parent:r.id,type:"strengthen",title:this.generateLevel3Title(r,"strengthen"),description:this.generateLevel3Description(r,"strengthen"),iching_logic:this.calculateLevel3Logic(r,"strengthen"),final_probability:.6*r.cumulative_probability,path_summary:this.generatePathSummary([e,t,"strengthen"]),virtual_spiral_depth:this.calculateVirtualSpiralPathDepth([e,t,"strengthen"],i)},option_b:{id:`${r.id}_b`,parent:r.id,type:"moderate",title:this.generateLevel3Title(r,"moderate"),description:this.generateLevel3Description(r,"moderate"),iching_logic:this.calculateLevel3Logic(r,"moderate"),final_probability:.4*r.cumulative_probability,path_summary:this.generatePathSummary([e,t,"moderate"]),virtual_spiral_depth:this.calculateVirtualSpiralPathDepth([e,t,"moderate"],i)}}})}),n}buildFinalEightPatterns(e,t){const i=[];let n=1;return Object.entries(e).forEach(([e,r])=>{Object.entries(r).forEach(([r,a])=>{Object.entries(a).forEach(([a,l])=>{i.push({pathIndex:n++,pathId:l.id,route:[e,r,a],title:`第${n-1}の道: ${l.title}`,fullDescription:this.buildFullPathDescription([e,r,a]),probability:l.final_probability,iching_interpretation:this.buildIChingInterpretation(l),practical_guidance:this.generatePracticalGuidance(l),timeline:this.estimateTimeline(l),success_factors:this.identifySuccessFactors(l),potential_challenges:this.identifyPotentialChallenges(l),virtual_spiral_elements:{first_encounter_meaning:this.generateFirstEncounterMeaning(l,t),spiral_return_meaning:this.generateSpiralReturnMeaning(l,t),transcendent_meaning:this.generateTranscendentMeaning(l,t),conceptual_growth_path:this.explainConceptualGrowthPath(l,t)}})})})}),i.sort((e,t)=>t.probability-e.probability),i}integrateHaQeiPhilosophy(e,t,i){return{contradiction_acceptance:{principle:"8つの異なる道が同時に真実である",explanation:"二分木の各段階で相反する選択肢が存在することは、HaQei哲学の矛盾受容原則に合致する",application:"状況や分人の状態に応じて、異なる道筋を選択することが可能"},persona_switching:{level1:"大きな方針決定時の分人（戦略的分人 vs 適応的分人）",level2:"具体的行動選択時の分人（実行分人 vs 調整分人）",level3:"最終決断時の分人（強化分人 vs 穏健分人）",dynamic_selection:"各段階で主導的分人が切り替わることで柔軟な選択が可能"},unified_wisdom:{meta_guidance:"全ての道筋を理解することで、状況に最適な選択が見えてくる",balance_approach:"極端な選択を避け、複数の要素を統合した第三の道も模索可能",continuous_adjustment:"初期選択に固執せず、段階的に軌道修正していくことが重要",virtual_spiral_wisdom:{first_encounter_wisdom:i.first_encounter.meaning,spiral_return_wisdom:i.spiral_return.meaning,transcendent_wisdom:i.transcendent_understanding.meaning,integrated_understanding:"仮想的螺旋段階を通じた多層的理解の統合"}},virtual_spiral_contradiction_acceptance:{principle:"同じ選択でも仮想的段階により異なる意味を持つことを受容する",theoretical_framework:"初回・螺旋回帰・超越的理解の3段階による質的差異",philosophical_depth:i.philosophical_depth},philosophical_depth:this.calculatePhilosophicalDepth(e)}}buildPathVisualization(e,t,i,n){return{tree_structure:{root:"現在の386爻位置",level1_nodes:Object.keys(e),level2_nodes:this.extractLevel2Nodes(t),level3_nodes:this.extractLevel3Nodes(i),total_nodes:15},virtual_spiral_layers:{theoretical_stages:n.theoreticalStages||3,conceptual_framework:n.conceptual_framework,philosophical_basis:n.theoretical_basis,stage_visualization:this.generateStageVisualization(n)},connection_map:this.buildConnectionMap(e,t,i),visual_elements:{colors:{progress:"#4CAF50",transform:"#FF9800",continue:"#8BC34A",adjust:"#FFC107",complete:"#F44336",integrate:"#9C27B0",first_encounter:"#E3F2FD",spiral_return:"#BBDEFB",transcendent:"#90CAF9",virtual_growth:"#FFE082"},line_styles:{high_probability:"solid",medium_probability:"dashed",low_probability:"dotted"},node_sizes:{level1:"large",level2:"medium",level3:"small"},virtual_spiral_effects:{stage_indication:!0,conceptual_growth_animation:!0,philosophical_depth_highlight:n.philosophical_depth>.8}}}}calculateVirtualSpiralEnhancement(e,t){return{first_encounter_enhancement:"ベースライン理解に基づく選択",spiral_return_enhancement:"経験的洞察を活かした選択",transcendent_enhancement:"統合的知恵による選択",conceptual_modifier:.1*t.integration_quality}}calculateVirtualSpiralPathDepth(e,t){const i=e.length,n=2*t.philosophical_depth;return{structural_depth:i,conceptual_depth:n,total_depth:i+n,stage_awareness:"3段階の仮想螺旋理論による質的深化"}}generateFirstEncounterMeaning(e,t){return`初回として：${e.title}への${t.first_encounter.interpretation_style}`}generateSpiralReturnMeaning(e,t){return`2回目として：${e.title}への${t.spiral_return.interpretation_style}`}generateTranscendentMeaning(e,t){return`3回目として：${e.title}への${t.transcendent_understanding.interpretation_style}`}explainConceptualGrowthPath(e,t){return{growth_trajectory:"初回探索 → 螺旋回帰 → 超越的統合",qualitative_evolution:"発見的知恵 → 統合的知恵 → 超越的知恵",philosophical_framework:t.theoretical_basis,practical_application:"同じ選択の質的変化による異なる結果の実現"}}generateStageVisualization(e){return{stage_count:3,visualization_path:"first-encounter → spiral-return → transcendent-understanding",depth_progression:[1,2,3],wisdom_evolution:["発見的","統合的","超越的"]}}async getCurrentLineData(e){return this.getCurrentLineDataSync(e)}isValidLineNumber(e){return Number.isInteger(e)&&e>=1&&e<=384}generateCacheKey(e,t){return`virtual_spiral_${e}_${JSON.stringify(t).slice(0,50)}`.replace(/\s+/g,"_")}calculateProgressLogic(e){return{principle:"順行の理",explanation:`${e.hexagramName}の${e.lineName}から自然な発展を遂げる道`,iching_basis:"易は変化なり、順次発展することが自然の摂理"}}calculateTransformLogic(e){return{principle:"転換の理",explanation:`${e.hexagramName}の${e.lineName}から方向転換を図る道`,iching_basis:"陰極まりて陽となす、陽極まりて陰となす"}}calculateBranchProbability(e,t){const i=(e.scores?.variability||50)/200;return"progress"===t?Math.min(.5+i,.8):Math.min(.5-i+.5,.8)}determineYinYangChange(e,t){const i=(e.lineNumber-1)%6+1,n=[1,3,5].includes(i);return"progress"===t?n?this.yinYangProgression.yang_stable:this.yinYangProgression.yin_to_yang:n?this.yinYangProgression.yang_to_yin:this.yinYangProgression.yin_stable}calculateNextLineRange(e,t){const i=e.lineNumber;if("progress"===t)return{min:i+1,max:Math.min(i+6,384),preferred:i+1};{const t=this.calculateRelatedHexagram(e.hexagramNumber);return{min:6*(t-1)+1,max:6*t,preferred:6*(t-1)+(i-1)%6+1}}}calculateRelatedHexagram(e){return e<=32?e+32:e-32}identifyHaQeiAspects(e,t,i){const n=[];return"progress"===t?n.push("継続性分人","発展志向分人","安定追求分人"):n.push("革新分人","適応分人","変革志向分人"),n}calculateLevel2Probability(){return.6}calculateContinueLogic(e){return{principle:"継続強化",explanation:`${e.title}をより強化する`}}calculateAdjustLogic(e){return{principle:"部分調整",explanation:`${e.title}を部分的に修正する`}}calculateCompleteLogic(e){return{principle:"完全転換",explanation:`${e.title}を根本から変更する`}}calculateIntegrateLogic(e){return{principle:"統合的転換",explanation:`${e.title}と新要素を統合する`}}calculateLevel3Logic(){return{principle:"最終段階",explanation:"3段階目の選択"}}generateLevel3Title(e,t){return`${e.title}・${t}`}generateLevel3Description(e,t){return`${e.description}（${t}型）`}generatePathSummary(e){return e.join(" → ")}buildFullPathDescription(e){return`${e[0]} → ${e[1]} → ${e[2]} の経路`}buildIChingInterpretation(e){return e.iching_logic}generatePracticalGuidance(){return["段階的に進む","状況を観察する","柔軟に対応する"]}estimateTimeline(){return"3-6ヶ月"}identifySuccessFactors(){return["継続性","適応力","判断力"]}identifyPotentialChallenges(){return["変化への抵抗","外的要因","タイミング"]}calculatePhilosophicalDepth(){return.88}extractLevel2Nodes(e){return Object.keys(e).flatMap(t=>Object.keys(e[t]))}extractLevel3Nodes(e){return Object.keys(e).flatMap(t=>Object.keys(e[t]).flatMap(i=>Object.keys(e[t][i])))}buildConnectionMap(){return{connections:[]}}calculateAverageProbability(e){return e.reduce((e,t)=>e+t.probability,0)/e.length}calculatePhilosophicalConsistency(){return.9}generateFallbackBinaryTree(e){return{version:this.version,currentLine:e,error:!0,finalEightPaths:Array.from({length:8},(e,t)=>({pathIndex:t+1,title:`基本的道筋 ${t+1}`,probability:.125,route:["basic","path","option"]}))}}getSystemInfo(){return{version:this.version,philosophy:this.philosophyAlignment,branchingLevels:this.branchingLevels,supportedLines:"1-384 (H384 Database)",cacheSize:this.branchingCache.size,initialized:this.initialized,virtualSpiralEnabled:this.virtualSpiralConcepts.enabled}}clearCache(){this.branchingCache.clear(),console.log("🧹 BinaryTreeFutureEngine cache cleared")}}"undefined"!=typeof window&&(window.BinaryTreeFutureEngine=BinaryTreeFutureEngine,window.haqeiBinaryTreeEngine||(window.haqeiBinaryTreeEngine=new BinaryTreeFutureEngine)),"undefined"!=typeof module&&module.exports&&(module.exports=BinaryTreeFutureEngine),console.log("🌳 BinaryTreeFutureEngine.js loaded successfully - 二分木型仮想螺旋統合段階的分岐システム");