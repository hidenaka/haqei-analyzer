class AuthenticChoiceSystem{constructor(n,i){this.container=n,this.engine=i,this.currentChoices=null,this.selectedPath=null,this.initializeChoiceSystem(),console.log("🎭 正統易経選択システム初期化完了")}initializeChoiceSystem(){this.container.innerHTML=this.createChoiceStructure(),this.attachEventListeners()}createChoiceStructure(){return'\n      <div class="authentic-choice-container">\n        \x3c!-- ヘッダー --\x3e\n        <div class="choice-header">\n          <h2 class="choice-title">\n            <span class="icon">🎭</span>\n            易経の分岐点\n          </h2>\n          <div class="choice-subtitle">\n            今の状況のテーマに、あなたはどう応えますか？\n          </div>\n        </div>\n\n        \x3c!-- 現在の状況テーマ表示 --\x3e\n        <div class="current-line-display" id="currentLineDisplay">\n          \x3c!-- 動的に生成 --\x3e\n        </div>\n\n        \x3c!-- 選択肢表示 --\x3e\n        <div class="choice-options" id="choiceOptions">\n          \x3c!-- 動的に生成 --\x3e\n        </div>\n\n        \x3c!-- 変化予測表示 --\x3e\n        <div class="transformation-preview" id="transformationPreview" style="display: none;">\n          \x3c!-- 動的に生成 --\x3e\n        </div>\n\n        \x3c!-- HaQei分人間分析 --\x3e\n        <div class="HaQei-choice-analysis" id="HaQeiChoiceAnalysis" style="display: none;">\n          \x3c!-- 動的に生成 --\x3e\n        </div>\n\n        \x3c!-- 選択確定ボタン --\x3e\n        <div class="choice-confirmation" id="choiceConfirmation" style="display: none;">\n          <button class="confirm-button" id="confirmChoiceBtn">\n            この道を選択する\n          </button>\n        </div>\n      </div>\n    '}generateChoices(n){console.log("🎯 選択肢生成開始:",n);try{this.currentChoices=this.engine.generateAuthenticChoices(n.卦番号,this.parseLinePosition(n.爻)),this.displayCurrentLine(this.currentChoices.situation),this.displayChoiceOptions(this.currentChoices),console.log("✅ 選択肢生成完了:",this.currentChoices)}catch(i){console.error("❌ 選択肢生成エラー:",i),this.displayErrorState()}}displayCurrentLine(n){document.getElementById("currentLineDisplay").innerHTML=`\n      <div class="line-situation fade-in">\n        <div class="situation-header">\n          <h3>現在の状況</h3>\n          <div class="hexagram-info">\n            <span class="hexagram-number">第${n.hexagram}卦</span>\n            <span class="hexagram-name">${n.hexagramName}</span>\n            <span class="line-position">${n.lineText}</span>\n          </div>\n        </div>\n        \n        <div class="situation-content">\n          <div class="line-meaning">\n            <h4>今の状況のテーマ</h4>\n            <div class="meaning-text">\n              ${n.meaning}\n            </div>\n          </div>\n          \n          <div class="situation-keywords">\n            <h4>関連キーワード</h4>\n            <div class="keyword-tags">\n              ${n.keywords.map(n=>`<span class="keyword-tag">${n}</span>`).join("")}\n            </div>\n          </div>\n        </div>\n        \n        <div class="choice-question">\n          <h3>🤔 このテーマに、あなたはどう応えますか？</h3>\n        </div>\n      </div>\n    `}displayChoiceOptions(n){document.getElementById("choiceOptions").innerHTML=`\n      <div class="choice-cards">\n        \x3c!-- 選択A: 今の状況のテーマで進む道 --\x3e\n        <div class="choice-card path-a" data-path="pathA">\n          <div class="card-header">\n            <h3>🛤️ ${n.pathA.title}</h3>\n            <div class="path-type">今の状況のテーマで進む</div>\n          </div>\n          \n          <div class="card-content">\n            <div class="path-description">\n              <p>${n.pathA.description}</p>\n            </div>\n            \n            <div class="path-action">\n              <h4>具体的な行動</h4>\n              <p>${n.pathA.action}</p>\n            </div>\n            \n            <div class="outcome-preview">\n              <h4>予想される展開</h4>\n              <div class="outcome-stats">\n                <div class="stat-item positive">\n                  <span class="stat-label">リスク</span>\n                  <span class="stat-value">${n.pathA.outcome.risk}</span>\n                </div>\n                <div class="stat-item positive">\n                  <span class="stat-label">可能性</span>\n                  <span class="stat-value">${n.pathA.outcome.potential}</span>\n                </div>\n              </div>\n              \n              <div class="transformation-hint">\n                <span class="from-hex">${n.situation.hexagramName}</span>\n                <span class="arrow">→</span>\n                <span class="to-hex">${n.pathA.outcome.transformation?.toHexagram?.name||"変化予測中"}</span>\n              </div>\n            </div>\n          </div>\n          \n          <div class="card-footer">\n            <button class="select-path-btn" data-path="pathA">\n              この道を詳しく見る\n            </button>\n          </div>\n        </div>\n\n        \x3c!-- 選択B: 別の角度から考える道 --\x3e\n        <div class="choice-card path-b" data-path="pathB">\n          <div class="card-header">\n            <h3>⚡ ${n.pathB.title}</h3>\n            <div class="path-type">違うテーマを選択する</div>\n          </div>\n          \n          <div class="card-content">\n            <div class="path-description">\n              <p>${n.pathB.description}</p>\n            </div>\n            \n            <div class="path-action">\n              <h4>具体的な行動</h4>\n              <p>${n.pathB.action}</p>\n            </div>\n            \n            <div class="outcome-preview">\n              <h4>予想される展開</h4>\n              <div class="outcome-stats">\n                <div class="stat-item warning">\n                  <span class="stat-label">リスク</span>\n                  <span class="stat-value">${n.pathB.outcome.risk}</span>\n                </div>\n                <div class="stat-item warning">\n                  <span class="stat-label">可能性</span>\n                  <span class="stat-value">${n.pathB.outcome.potential}</span>\n                </div>\n              </div>\n              \n              <div class="transformation-hint">\n                <span class="from-hex">${n.situation.hexagramName}</span>\n                <span class="arrow">→</span>\n                <span class="to-hex">${n.pathB.outcome.transformation?.toHexagram?.name||"変化予測中"}</span>\n              </div>\n            </div>\n          </div>\n          \n          <div class="card-footer">\n            <button class="select-path-btn" data-path="pathB">\n              この道を詳しく見る\n            </button>\n          </div>\n        </div>\n      </div>\n    `}displayPathDetails(n){console.log("🔍 道の詳細表示:",n),this.selectedPath=n;const i=this.currentChoices[n];this.highlightSelectedCard(n),this.displayTransformationPreview(i),this.displayHaQeiChoiceAnalysis(i),this.showConfirmationButton()}highlightSelectedCard(n){this.container.querySelectorAll(".choice-card").forEach(n=>{n.classList.remove("selected")});const i=this.container.querySelector(`[data-path="${n}"]`);i&&i.classList.add("selected")}displayTransformationPreview(n){const i=document.getElementById("transformationPreview"),s=n.outcome.transformation;s?(i.innerHTML=`\n      <div class="transformation-content">\n        <h3>🔮 変化の予測</h3>\n        \n        <div class="transformation-visual">\n          <div class="transformation-stages">\n            <div class="stage current">\n              <div class="hexagram-display">\n                <div class="hex-name">${s.fromHexagram.name}</div>\n                <div class="hex-binary">${this.formatBinary(s.fromHexagram.binary)}</div>\n                <div class="stage-label">現在の状況</div>\n              </div>\n            </div>\n            \n            <div class="transformation-arrow">\n              <div class="changing-info">\n                <div class="changing-lines">\n                  ${s.changingLines.map(n=>`<span class="changing-line">第${n}爻変化</span>`).join("")}\n                </div>\n                <div class="arrow-symbol">⟶</div>\n              </div>\n            </div>\n            \n            <div class="stage future">\n              <div class="hexagram-display">\n                <div class="hex-name">${s.toHexagram.name}</div>\n                <div class="hex-binary">${this.formatBinary(s.toHexagram.binary)}</div>\n                <div class="stage-label">変化後の状況</div>\n              </div>\n            </div>\n          </div>\n        </div>\n        \n        <div class="transformation-details">\n          <div class="transformation-nature">\n            <h4>変化の性質</h4>\n            <p>${s.transformationNature?.description||"変化の性質を分析中..."}</p>\n          </div>\n          \n          <div class="transformation-timeline">\n            <h4>変化の時間軸</h4>\n            <div class="timeline-phases">\n              ${s.timeline?.phases?.map(n=>`\n                <div class="timeline-phase">\n                  <span class="phase-name">${n.name}</span>\n                  <span class="phase-duration">${n.duration}</span>\n                </div>\n              `).join("")||'<div class="timeline-phase">時間軸を分析中...</div>'}\n            </div>\n          </div>\n        </div>\n        \n        <div class="transformation-guidance">\n          <h4>変化への指針</h4>\n          <div class="guidance-content">\n            <p>${s.guidance||n.outcome.guidance||"この道を進む場合の具体的な指針を準備中..."}</p>\n          </div>\n        </div>\n      </div>\n    `,i.style.display="block"):i.style.display="none"}displayHaQeiChoiceAnalysis(n){const i=document.getElementById("HaQeiChoiceAnalysis"),s=n.HaQeiGuidance;s?(i.innerHTML=`\n      <div class="HaQei-choice-content">\n        <h3>👥 HaQei分人間選択分析</h3>\n        <div class="HaQei-subtitle">\n          この選択に対する、あなたの各分人の反応\n        </div>\n        \n        <div class="persona-choice-reactions">\n          ${Object.entries(s).filter(([n])=>"integration"!==n).map(([n,i])=>`\n            <div class="persona-reaction">\n              <div class="persona-header">\n                <h4>${this.getPersonaTitle(n)}</h4>\n                <div class="persona-icon">${this.getPersonaIcon(n)}</div>\n              </div>\n              <div class="persona-response">\n                <div class="response-section">\n                  <strong>この分人の視点：</strong>\n                  <p>${i.perspective||"この選択に対する見解を分析中..."}</p>\n                </div>\n                <div class="response-section">\n                  <strong>推奨される行動：</strong>\n                  <p>${i.action||"具体的な行動指針を準備中..."}</p>\n                </div>\n                <div class="response-section">\n                  <strong>注意すべき点：</strong>\n                  <p>${i.caution||"注意点を確認中..."}</p>\n                </div>\n              </div>\n            </div>\n          `).join("")}\n        </div>\n        \n        <div class="integration-guidance">\n          <h4>🌟 分人間統合ガイダンス</h4>\n          <div class="integration-content">\n            <p>${s.integration?.guidance||"この選択において、あなたの異なる分人がどのように協力し合うかを分析中..."}</p>\n          </div>\n        </div>\n      </div>\n    `,i.style.display="block"):i.style.display="none"}getPersonaTitle(n){return{analyticalSelf:"分析的な分人",emotionalSelf:"感情的な分人",socialSelf:"社会的な分人",spiritualSelf:"精神的な分人"}[n]||n}getPersonaIcon(n){return{analyticalSelf:"🧠",emotionalSelf:"❤️",socialSelf:"👥",spiritualSelf:"🌟"}[n]||"🎭"}showConfirmationButton(){document.getElementById("choiceConfirmation").style.display="block"}confirmChoice(){if(!this.selectedPath||!this.currentChoices)return console.warn("⚠️ 選択が完了していません"),null;const n={selectedPath:this.selectedPath,choiceData:this.currentChoices[this.selectedPath],timestamp:(new Date).toISOString(),situation:this.currentChoices.situation};return console.log("✅ 選択確定:",n),this.dispatchChoiceConfirmed(n),n}dispatchChoiceConfirmed(n){const i=new CustomEvent("choiceConfirmed",{detail:n,bubbles:!0});this.container.dispatchEvent(i)}formatBinary(n){return n&&Array.isArray(n)?n.map(n=>1===n?"━━━":"━ ━").reverse().join("<br>"):""}parseLinePosition(n){return{"初九":1,"初六":1,"九二":2,"六二":2,"九三":3,"六三":3,"九四":4,"六四":4,"九五":5,"六五":5,"上九":6,"上六":6}[n]||1}displayErrorState(){document.getElementById("choiceOptions").innerHTML='\n      <div class="error-state">\n        <div class="error-icon">⚠️</div>\n        <h3>選択肢の生成に失敗しました</h3>\n        <p>システムエラーが発生しました。しばらく待ってから再試行してください。</p>\n        <button class="retry-button" onclick="location.reload()">\n          再試行\n        </button>\n      </div>\n    '}attachEventListeners(){this.container.addEventListener("click",n=>{if(n.target.classList.contains("select-path-btn")){const i=n.target.dataset.path;this.displayPathDetails(i)}"confirmChoiceBtn"===n.target.id&&this.confirmChoice()})}getCurrentChoices(){return this.currentChoices}getSelectedPath(){return this.selectedPath}reset(){this.currentChoices=null,this.selectedPath=null,this.initializeChoiceSystem()}}"undefined"!=typeof window&&(window.AuthenticChoiceSystem=AuthenticChoiceSystem),"undefined"!=typeof module&&module.exports&&(module.exports=AuthenticChoiceSystem),console.log("🎭 AuthenticChoiceSystem.js 読み込み完了");