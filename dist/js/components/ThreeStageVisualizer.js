console.log("🎨 ThreeStageVisualizer Loading..."),function(){"use strict";class ThreeStageVisualizer{constructor(){this.name="ThreeStageVisualizer",this.version="2.0.0",this.container=null,this.canvas=null,this.selectedPath=[],this.hoveredNode=null,this.animationFrame=null}initialize(e){return console.log("🔄 ThreeStageVisualizer initializing with container:",e),this.container=document.getElementById(e),this.container?(this.initializeStyles(),this.ensureVisualizerContent(),this.setupCanvas(),this.setupEventListeners(),console.log("✅ ThreeStageVisualizer initialized"),!0):(console.error(`❌ Container not found: ${e}`),!1)}initializeStyles(){console.log("🎨 [URGENT] ThreeStageVisualizer: Initializing CSS styles"),this.container&&(this.container.style.cssText="\n          background: linear-gradient(135deg, rgba(17, 24, 39, 0.95), rgba(31, 41, 55, 0.95));\n          border-radius: 15px;\n          border: 2px solid rgba(99, 102, 241, 0.3);\n          box-shadow: 0 8px 32px rgba(0, 0, 0, 0.3), inset 0 1px 0 rgba(255, 255, 255, 0.1);\n          padding: 25px;\n          margin: 20px 0;\n          min-height: 500px;\n          position: relative;\n          backdrop-filter: blur(10px);\n        ",console.log("✅ [URGENT] ThreeStageVisualizer container styled")),this.injectDynamicCSS()}injectDynamicCSS(){const e="three-stage-visualizer-dynamic-styles",t=document.getElementById(e);t&&t.remove();const n=document.createElement("style");n.id=e,n.textContent="\n        #three-stage-visualizer {\n          background: linear-gradient(135deg, rgba(17, 24, 39, 0.95), rgba(31, 41, 55, 0.95)) !important;\n          border-radius: 15px !important;\n          border: 2px solid rgba(99, 102, 241, 0.3) !important;\n          box-shadow: 0 8px 32px rgba(0, 0, 0, 0.3), inset 0 1px 0 rgba(255, 255, 255, 0.1) !important;\n          padding: 25px !important;\n          margin: 20px 0 !important;\n          min-height: 500px !important;\n          position: relative !important;\n          backdrop-filter: blur(10px) !important;\n        }\n        \n        #three-stage-visualizer .visualizer-content {\n          background: rgba(17, 24, 39, 0.7) !important;\n          border-radius: 10px !important;\n          border: 1px solid rgba(99, 102, 241, 0.2) !important;\n          padding: 20px !important;\n          margin: 15px 0 !important;\n          min-height: 400px !important;\n          color: #E5E7EB !important;\n        }\n        \n        #three-stage-visualizer canvas.three-stage-canvas {\n          border-radius: 12px !important;\n          background: linear-gradient(135deg, rgba(17, 24, 39, 0.95), rgba(31, 41, 55, 0.95)) !important;\n          border: 1px solid rgba(99, 102, 241, 0.3) !important;\n          box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1) !important;\n        }\n        \n        #three-stage-visualizer h3 {\n          color: #A5B4FC !important;\n          font-size: 1.25rem !important;\n          font-weight: 700 !important;\n          margin-bottom: 15px !important;\n          text-align: center !important;\n        }\n        \n        #three-stage-visualizer .stage-info {\n          background: rgba(55, 65, 81, 0.6) !important;\n          border-radius: 8px !important;\n          padding: 12px !important;\n          margin: 8px 0 !important;\n          color: #E5E7EB !important;\n        }\n      ",document.head.appendChild(n),console.log("✅ [URGENT] Dynamic CSS injected for ThreeStageVisualizer")}ensureVisualizerContent(){let e=this.container.querySelector(".visualizer-content");e?e.style.cssText="\n          background: rgba(17, 24, 39, 0.7);\n          border-radius: 10px;\n          border: 1px solid rgba(99, 102, 241, 0.2);\n          padding: 20px;\n          margin: 15px 0;\n          min-height: 400px;\n          color: #E5E7EB;\n        ":(console.log("⚠️ visualizer-content not found, creating..."),e=document.createElement("div"),e.className="visualizer-content",e.style.cssText="\n          background: rgba(17, 24, 39, 0.7);\n          border-radius: 10px;\n          border: 1px solid rgba(99, 102, 241, 0.2);\n          padding: 20px;\n          margin: 15px 0;\n          min-height: 400px;\n          color: #E5E7EB;\n        ",this.container.appendChild(e)),this.visualizerContent=e,console.log("✅ [URGENT] visualizer-content styled and ensured:",this.visualizerContent)}setupCanvas(){console.log("🎨 [CANVAS DEBUG] setupCanvas called"),console.log("🎨 [CANVAS DEBUG] visualizerContent:",!!this.visualizerContent),console.log("🎨 [CANVAS DEBUG] container:",!!this.container);const e=this.visualizerContent||this.container;if(console.log("🎨 [CANVAS DEBUG] targetContainer:",!!e),!e)return void console.error("❌ [CANVAS DEBUG] No target container available");const t=e.querySelector("canvas");t&&(console.log("🎨 [CANVAS DEBUG] Removing existing canvas"),t.remove()),console.log("🎨 [CANVAS DEBUG] Creating new canvas"),this.canvas=document.createElement("canvas"),this.canvas.className="three-stage-canvas",this.canvas.id="three-stage-canvas-"+Date.now(),this.canvas.style.cssText="\n        width: 100%;\n        height: 400px;\n        border-radius: 12px;\n        background: linear-gradient(135deg, rgba(17, 24, 39, 0.95), rgba(31, 41, 55, 0.95));\n        border: 1px solid rgba(99, 102, 241, 0.3);\n        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n        display: block;\n      ",e.appendChild(this.canvas),console.log("✅ [URGENT] Canvas created and appended:",{canvasId:this.canvas.id,canvasClass:this.canvas.className,parentElement:e.className||e.id,canvasElement:this.canvas}),console.log("🎨 [CANVAS DEBUG] Getting canvas context..."),this.ctx=this.canvas.getContext("2d"),console.log("🎨 [CANVAS DEBUG] Context obtained:",!!this.ctx),this.ctx?(this.resizeCanvas(),console.log("✅ Canvas setup complete in:",e.className)):console.error("❌ [CANVAS DEBUG] Failed to get 2d context")}resizeCanvas(){const e=this.container.getBoundingClientRect(),t=Math.max(e.width,290);this.canvas.width=t,this.canvas.height=400,console.log("📐 [DEBUG] Canvas resized to:",t,"x",400)}setupEventListeners(){window.addEventListener("resize",()=>this.resizeCanvas()),this.canvas.addEventListener("mousemove",e=>this.handleMouseMove(e)),this.canvas.addEventListener("click",e=>this.handleClick(e)),this.canvas.addEventListener("mouseleave",()=>this.handleMouseLeave())}drawThreeStageProcess(e,t){if(console.log("🎨 [CRITICAL DEBUG] drawThreeStageProcess called"),console.log("🎨 [CRITICAL DEBUG] Process data:",e),console.log("🎨 [CRITICAL DEBUG] Scenarios data:",t),!this.ctx&&(console.error("❌ [CRITICAL] Canvas context not available"),console.log("🔍 [DEBUG] Canvas state:",this.canvas),console.log("🔍 [DEBUG] Container state:",this.container),this.setupCanvas(),!this.ctx))return void this.showErrorMessage("Canvas初期化エラー");e||(console.error("❌ [CRITICAL] Process data is null/undefined"),e=this.createFallbackProcess()),e.stages&&0!==e.stages.length||(console.error("❌ [CRITICAL] Process stages empty/invalid:",e),e=this.createFallbackProcess()),console.log("✅ [CRITICAL DEBUG] Drawing with process:",e),console.log("🎨 [DEBUG] Canvas dimensions:",this.canvas.width,"x",this.canvas.height),this.ctx.clearRect(0,0,this.canvas.width,this.canvas.height);const n=this.ctx.createLinearGradient(0,0,this.canvas.width,this.canvas.height);n.addColorStop(0,"rgba(17, 24, 39, 0.95)"),n.addColorStop(1,"rgba(31, 41, 55, 0.95)"),this.ctx.fillStyle=n,this.ctx.fillRect(0,0,this.canvas.width,this.canvas.height),this.ctx.fillStyle="#FF0000",this.ctx.fillRect(10,10,20,20),console.log("🔴 [DEBUG] Red test square drawn at (10,10)");try{console.log("🔍 [DEBUG] Calculating node positions...");const n=this.calculateNodePositions(e);if(console.log("✅ [DEBUG] Nodes calculated:",n.length,n),0===n.length)return console.error("❌ [CRITICAL] No nodes calculated!"),void this.drawEmergencyContent();console.log("🔍 [DEBUG] Drawing connections..."),this.drawConnections(n),console.log("🔍 [DEBUG] Drawing nodes..."),this.drawNodes(n,e),console.log("🔍 [DEBUG] Drawing stage labels..."),this.drawStageLabels(e),this.selectedPath.length>0&&(console.log("🔍 [DEBUG] Highlighting selected path..."),this.highlightSelectedPath(n)),t&&t.length>0&&(console.log("🔍 [DEBUG] Drawing scenario connections..."),this.drawScenarioConnections(n,t)),console.log("🔍 [DEBUG] Drawing info text..."),this.drawInfoText(e),this.updateVisualizerContent(e,n),console.log("🎉 [SUCCESS] ThreeStageProcess drawn successfully")}catch(i){console.error("❌ [CRITICAL ERROR] Drawing ThreeStageProcess:",i),console.error("❌ [STACK TRACE]:",i.stack),this.showErrorMessage("描画エラーが発生しました: "+i.message),this.drawEmergencyContent()}}drawInfoText(e){const t=this.ctx;t.fillStyle="#E5E7EB",t.font="bold 16px Inter, sans-serif",t.textAlign="center";const n=e.progressTheme||"三段階選択プロセス";t.fillText(n,this.canvas.width/2,20),t.font="12px Inter, sans-serif",t.fillStyle="#9CA3AF",t.fillText("各段階での選択により、異なる未来への道が開かれます",this.canvas.width/2,this.canvas.height-15)}showErrorMessage(e){this.ctx&&(this.ctx.clearRect(0,0,this.canvas.width,this.canvas.height),this.ctx.fillStyle="rgba(239, 68, 68, 0.1)",this.ctx.fillRect(0,0,this.canvas.width,this.canvas.height),this.ctx.fillStyle="#EF4444",this.ctx.font="bold 16px Inter, sans-serif",this.ctx.textAlign="center",this.ctx.fillText(`⚠️ ${e}`,this.canvas.width/2,this.canvas.height/2))}calculateNodePositions(e){const t=[],n=this.canvas.width,i=this.canvas.height;if(!e||!e.stages||e.stages.length<3)return console.error("❌ Insufficient process data for node calculation"),t;t.push({id:"start",x:60,y:i/2,type:"start",label:"現在"});const s=i/3,a=e.stages[0];a&&a.choices&&a.choices.length>=2&&(t.push({id:"stage1-conservative",x:.25*n,y:s,type:"choice",stage:1,choice:"conservative",data:a.choices[0]}),t.push({id:"stage1-progressive",x:.25*n,y:2*i/3,type:"choice",stage:1,choice:"progressive",data:a.choices[1]}));const o=.5*n,r=e.stages[1];r&&r.choices&&r.choices.length>=2&&["conservative","progressive"].forEach((e,n)=>{["collaborative","independent"].forEach((s,a)=>{const c=r.choices[a]||r.choices[a%r.choices.length];t.push({id:`stage2-${e}-${s}`,x:o,y:(2*n+a+1)*i/5,type:"choice",stage:2,choice:s,parent:`stage1-${e}`,data:c})})});const c=.75*n,l=e.stages[2];if(l&&l.choices&&l.choices.length>=2){let e=0;["conservative","progressive"].forEach(n=>{["collaborative","independent"].forEach(s=>{["cautious","decisive"].forEach((a,o)=>{const r=l.choices[o]||l.choices[o%l.choices.length];t.push({id:`stage3-${n}-${s}-${a}`,x:c,y:(e+1)*i/9,type:"outcome",stage:3,choice:a,parent:`stage2-${n}-${s}`,data:r,scenarioIndex:e}),e++})})})}return t}drawConnections(e){this.ctx.strokeStyle="rgba(99, 102, 241, 0.3)",this.ctx.lineWidth=2,e.forEach(t=>{if(t.parent){const n=e.find(e=>e.id===t.parent);n&&this.drawCurvedLine(n.x,n.y,t.x,t.y)}else if("choice"===t.type&&1===t.stage){const n=e.find(e=>"start"===e.id);n&&this.drawCurvedLine(n.x,n.y,t.x,t.y)}})}drawCurvedLine(e,t,n,i){const s=this.ctx;s.beginPath(),s.moveTo(e,t);const a=e+.5*(n-e),o=t,r=e+.5*(n-e),c=i;s.bezierCurveTo(a,o,r,c,n,i),s.stroke()}drawNodes(e,t){e.forEach(e=>{this.drawNode(e)})}drawNode(e){const t=this.ctx,n="start"===e.type?15:12;let i="rgba(55, 65, 81, 0.8)",s="rgba(99, 102, 241, 0.5)";if("start"===e.type)i="rgba(99, 102, 241, 0.8)",s="#6366F1";else if(e.data){const t=e.data.compatibility||50;t>70?(i="rgba(16, 185, 129, 0.8)",s="#10B981"):t>50?(i="rgba(59, 130, 246, 0.8)",s="#3B82F6"):(i="rgba(245, 158, 11, 0.8)",s="#F59E0B")}this.hoveredNode===e.id&&(t.shadowBlur=20,t.shadowColor=s),t.beginPath(),t.arc(e.x,e.y,n,0,2*Math.PI),t.fillStyle=i,t.fill(),t.strokeStyle=s,t.lineWidth=2,t.stroke(),t.shadowBlur=0,e.data&&e.data.name?(t.fillStyle="#E5E7EB",t.font="10px Inter, sans-serif",t.textAlign="center",t.fillText(e.data.name,e.x,e.y+n+15)):"start"===e.type&&(t.fillStyle="#E5E7EB",t.font="bold 12px Inter, sans-serif",t.textAlign="center",t.fillText("現在",e.x,e.y+n+15))}drawStageLabels(e){const t=this.ctx;t.fillStyle="#A5B4FC",t.font="bold 14px Inter, sans-serif",t.textAlign="center";[{x:.25*this.canvas.width,y:30,text:"第一段階"},{x:.5*this.canvas.width,y:30,text:"第二段階"},{x:.75*this.canvas.width,y:30,text:"第三段階"}].forEach(e=>{t.fillText(e.text,e.x,e.y)})}highlightSelectedPath(e){if(0===this.selectedPath.length)return;const t=this.ctx;t.strokeStyle="#10B981",t.lineWidth=4,t.setLineDash([5,5]);for(let n=0;n<this.selectedPath.length-1;n++){const t=e.find(e=>e.choice===this.selectedPath[n]&&e.stage===n+1),i=e.find(e=>e.choice===this.selectedPath[n+1]&&e.stage===n+2);t&&i&&this.drawCurvedLine(t.x,t.y,i.x,i.y)}t.setLineDash([])}drawScenarioConnections(e,t){t.forEach((t,n)=>{if(t.visualPath){const i=e.find(e=>e.scenarioIndex===n);if(i){const e=this.ctx;e.fillStyle="#FDE047",e.font="bold 12px Inter, sans-serif",e.textAlign="center",e.fillText(`#${t.id}`,i.x,i.y-20)}}})}handleMouseMove(e){const t=this.canvas.getBoundingClientRect();e.clientX,t.left,e.clientY,t.top}handleClick(e){const t=this.canvas.getBoundingClientRect();e.clientX,t.left,e.clientY,t.top}handleMouseLeave(){this.hoveredNode=null}selectPath(e){this.selectedPath=e}startAnimation(){const animate=()=>{this.animationFrame=requestAnimationFrame(animate)};animate()}stopAnimation(){this.animationFrame&&(cancelAnimationFrame(this.animationFrame),this.animationFrame=null)}createFallbackProcess(){return console.log("🆘 [EMERGENCY] Creating fallback process data"),{progressTheme:"緊急フォールバック3段階プロセス",changeTheme:"システム復旧プロセス",stages:[{stageNumber:1,title:"第一段階：初期判断",description:"現状の理解と基本方針の決定",choices:[{id:"conservative",name:"保守的選択",keywords:["安定","継続"],description:"現状維持を基本とした選択",compatibility:65,outcome:{successProbability:70}},{id:"progressive",name:"進取的選択",keywords:["革新","前進"],description:"新しい挑戦に向けた選択",compatibility:75,outcome:{successProbability:80}}]},{stageNumber:2,title:"第二段階：実行方法",description:"選択した方針の実行アプローチ",choices:[{id:"collaborative",name:"協調的選択",keywords:["協力","調和"],description:"他者との協調を重視した実行",compatibility:70,outcome:{successProbability:75}},{id:"independent",name:"独立的選択",keywords:["自立","主導"],description:"独自の判断による実行",compatibility:80,outcome:{successProbability:85}}]},{stageNumber:3,title:"第三段階：タイミング",description:"実行のタイミングと速度の決定",choices:[{id:"cautious",name:"慎重な選択",keywords:["計画","準備"],description:"十分な準備を重視したタイミング",compatibility:60,outcome:{successProbability:72}},{id:"decisive",name:"決断的選択",keywords:["迅速","決断"],description:"機を逃さない迅速な決断",compatibility:85,outcome:{successProbability:88}}]}]}}drawEmergencyContent(){console.log("🆘 [EMERGENCY] Drawing emergency content"),this.ctx&&(this.ctx.fillStyle="#FEF3C7",this.ctx.fillRect(0,0,this.canvas.width,this.canvas.height),this.ctx.fillStyle="#D97706",this.ctx.font="bold 24px Inter, sans-serif",this.ctx.textAlign="center",this.ctx.fillText("⚠️ システム復旧中",this.canvas.width/2,this.canvas.height/2-20),this.ctx.font="16px Inter, sans-serif",this.ctx.fillText("フォールバックデータで表示しています",this.canvas.width/2,this.canvas.height/2+20))}updateVisualizerContent(e,t){console.log("📝 [DEBUG] Updating visualizer-content");const n=this.container.querySelector(".visualizer-content");if(!n)return void console.warn("⚠️ visualizer-content not found");const i=e.stages.map(e=>`\n        <div style="margin: 10px 0; padding: 10px; background: #f0f9ff; border-radius: 6px;">\n          <strong>${e.title}</strong><br>\n          <small>${e.description}</small><br>\n          選択肢: ${e.choices.length}個\n        </div>\n      `).join("");n.innerHTML=`\n        <div style="background: white; padding: 15px; border-radius: 8px; margin-bottom: 15px;">\n          <h5 style="margin: 0 0 10px 0; color: #1f2937;">🎨 三段階可視化システム</h5>\n          <div style="display: grid; grid-template-columns: repeat(3, 1fr); gap: 10px; font-size: 12px;">\n            <div><strong>プロセス:</strong> ${e.progressTheme||"N/A"}</div>\n            <div><strong>ノード数:</strong> ${t.length}</div>\n            <div><strong>描画状態:</strong> ✅ 完了</div>\n          </div>\n        </div>\n        <div style="font-size: 14px;">\n          ${i}\n        </div>\n      `,console.log("✅ [DEBUG] visualizer-content updated successfully")}}"undefined"!=typeof window&&(window.ThreeStageVisualizer=ThreeStageVisualizer),console.log("✅ ThreeStageVisualizer loaded")}("undefined"!=typeof window&&window);