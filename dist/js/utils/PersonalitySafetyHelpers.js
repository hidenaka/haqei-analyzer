class PersonalitySafetyHelpers{static DEFAULT_VALUES={engine:{priorities:["創造性","理想実現","価値観一致"],voice:"情熱的で理想主義的な語り口",strengths:["創造力","情熱","信念の強さ"],weaknesses:["現実的配慮不足","妥協への抵抗","完璧主義"],fears:["妥協","平凡さ","価値観の否定"],desires:["本質的な価値の創造","理想的な世界","真の自己実現"]},interface:{priorities:["調和維持","関係性","相互理解"],voice:"温かく配慮深い話し方",strengths:["共感力","協調性","思いやり"],weaknesses:["自己主張の弱さ","境界線の曖昧さ","過度な配慮"],fears:["孤立","対立","他者を傷つけること"],desires:["皆が幸せな環境","深い絆","相互理解"]},safemode:{priorities:["安全性","リスク管理","安定性"],voice:"慎重で分析的な表現",strengths:["慎重さ","分析力","危機管理能力"],weaknesses:["過度な心配","変化への抵抗","機会の逸失"],fears:["未知の危険","予期せぬ変化","制御不能な状況"],desires:["予測可能な環境","確実な安全","準備された対策"]}};static safeGetPersonalityPriorities(e){if(!e)return console.warn("⚠️ safeGetPersonalityPriorities: os is null/undefined"),this.DEFAULT_VALUES.engine.priorities;const r=this.getOSType(e),s=this.DEFAULT_VALUES[r]?.priorities||this.DEFAULT_VALUES.engine.priorities;try{return e.personality&&Array.isArray(e.personality.priorities)&&e.personality.priorities.length>0?e.personality.priorities:e.personalityOS&&e.personalityOS.personality&&Array.isArray(e.personalityOS.personality.priorities)?e.personalityOS.personality.priorities:e.characteristics&&Array.isArray(e.characteristics.priorities)?e.characteristics.priorities:Array.isArray(e.priorities)?e.priorities:(console.warn(`⚠️ No valid priorities found for OS type: ${r}, using fallback`),s)}catch(t){return console.error("❌ Error in safeGetPersonalityPriorities:",t),s}}static safeGetPersonalityVoice(e){if(!e)return console.warn("⚠️ safeGetPersonalityVoice: os is null/undefined"),this.DEFAULT_VALUES.engine.voice;const r=this.getOSType(e),s=this.DEFAULT_VALUES[r]?.voice||this.DEFAULT_VALUES.engine.voice;try{return e.personality&&"string"==typeof e.personality.voice&&e.personality.voice.trim()?e.personality.voice:e.personalityOS&&e.personalityOS.personality&&"string"==typeof e.personalityOS.personality.voice?e.personalityOS.personality.voice:e.characteristics&&"string"==typeof e.characteristics.voice?e.characteristics.voice:"string"==typeof e.voice?e.voice:(console.warn(`⚠️ No valid voice found for OS type: ${r}, using fallback`),s)}catch(t){return console.error("❌ Error in safeGetPersonalityVoice:",t),s}}static safeGetPersonalityStrengths(e){if(!e)return console.warn("⚠️ safeGetPersonalityStrengths: os is null/undefined"),this.DEFAULT_VALUES.engine.strengths;const r=this.getOSType(e),s=this.DEFAULT_VALUES[r]?.strengths||this.DEFAULT_VALUES.engine.strengths;try{return e.personality&&Array.isArray(e.personality.strengths)&&e.personality.strengths.length>0?e.personality.strengths:e.personalityOS&&e.personalityOS.personality&&Array.isArray(e.personalityOS.personality.strengths)?e.personalityOS.personality.strengths:e.characteristics&&Array.isArray(e.characteristics.strengths)?e.characteristics.strengths:Array.isArray(e.strengths)?e.strengths:(console.warn(`⚠️ No valid strengths found for OS type: ${r}, using fallback`),s)}catch(t){return console.error("❌ Error in safeGetPersonalityStrengths:",t),s}}static safeGetPersonalityWeaknesses(e){if(!e)return console.warn("⚠️ safeGetPersonalityWeaknesses: os is null/undefined"),this.DEFAULT_VALUES.engine.weaknesses;const r=this.getOSType(e),s=this.DEFAULT_VALUES[r]?.weaknesses||this.DEFAULT_VALUES.engine.weaknesses;try{return e.personality&&Array.isArray(e.personality.weaknesses)&&e.personality.weaknesses.length>0?e.personality.weaknesses:e.personalityOS&&e.personalityOS.personality&&Array.isArray(e.personalityOS.personality.weaknesses)?e.personalityOS.personality.weaknesses:e.characteristics&&Array.isArray(e.characteristics.weaknesses)?e.characteristics.weaknesses:Array.isArray(e.weaknesses)?e.weaknesses:(console.warn(`⚠️ No valid weaknesses found for OS type: ${r}, using fallback`),s)}catch(t){return console.error("❌ Error in safeGetPersonalityWeaknesses:",t),s}}static safeGetPersonalityFears(e){if(!e)return this.DEFAULT_VALUES.engine.fears;const r=this.getOSType(e),s=this.DEFAULT_VALUES[r]?.fears||this.DEFAULT_VALUES.engine.fears;try{return e.personality&&Array.isArray(e.personality.fears)?e.personality.fears:e.personalityOS&&e.personalityOS.personality&&Array.isArray(e.personalityOS.personality.fears)?e.personalityOS.personality.fears:s}catch(t){return console.error("❌ Error in safeGetPersonalityFears:",t),s}}static safeGetPersonalityDesires(e){if(!e)return this.DEFAULT_VALUES.engine.desires;const r=this.getOSType(e),s=this.DEFAULT_VALUES[r]?.desires||this.DEFAULT_VALUES.engine.desires;try{return e.personality&&Array.isArray(e.personality.desires)?e.personality.desires:e.personalityOS&&e.personalityOS.personality&&Array.isArray(e.personalityOS.personality.desires)?e.personalityOS.personality.desires:s}catch(t){return console.error("❌ Error in safeGetPersonalityDesires:",t),s}}static getOSType(e){if(!e)return"engine";if(e.osType)return this.normalizeOSType(e.osType);if(e.osName){const r=e.osName.toLowerCase();if(r.includes("engine"))return"engine";if(r.includes("interface"))return"interface";if(r.includes("safe"))return"safemode"}if(e.constructor&&e.constructor.name){const r=e.constructor.name.toLowerCase();if(r.includes("engine"))return"engine";if(r.includes("interface"))return"interface";if(r.includes("safe"))return"safemode"}return"engine"}static normalizeOSType(e){if(!e||"string"!=typeof e)return"engine";const r=e.toLowerCase().trim();return r.includes("engine")?"engine":r.includes("interface")?"interface":r.includes("safe")?"safemode":r}static validateOSStructure(e){if(!e||"object"!=typeof e)return!1;const r=e.osType||e.osName||e.personality||e.personalityOS||e.characteristics;return Boolean(r)}static createCompletePersonality(e="engine"){const r=this.normalizeOSType(e),s=this.DEFAULT_VALUES[r]||this.DEFAULT_VALUES.engine;return{voice:s.voice,priorities:[...s.priorities],fears:[...s.fears],desires:[...s.desires],strengths:[...s.strengths],weaknesses:[...s.weaknesses]}}static mergePersonalitySafely(e,r){if(!e||"object"!=typeof e)return console.warn("⚠️ mergePersonalitySafely: invalid OS object"),e;if(!r||"object"!=typeof r)return console.warn("⚠️ mergePersonalitySafely: invalid personality data"),e;try{return e.personality||(e.personality={}),Object.keys(r).forEach(s=>{const t=r[s];Array.isArray(t)?e.personality[s]=[...t]:"string"==typeof t&&t.trim()&&(e.personality[s]=t)}),e}catch(s){return console.error("❌ Error in mergePersonalitySafely:",s),e}}}"undefined"!=typeof window&&(window.PersonalitySafetyHelpers=PersonalitySafetyHelpers),"undefined"!=typeof module&&module.exports&&(module.exports=PersonalitySafetyHelpers),console.log("✅ PersonalitySafetyHelpers.js loaded successfully");