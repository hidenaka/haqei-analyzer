class CSRFProtectionSystem{constructor(){this.tokenStore=new Map,this.sessionTokens=new Map,this.config=this.getSecurityConfig(),this.init()}getSecurityConfig(){return{tokenLength:32,tokenExpiry:18e5,maxTokensPerSession:10,enforceRefererCheck:!0,allowedOrigins:["https://haqei.com","https://www.haqei.com","https://analyzer.haqei.com"],requireSecureContext:!0,cookieSettings:{httpOnly:!0,secure:!0,sameSite:"Strict",path:"/",maxAge:3600}}}init(){try{this.setupMetaTags(),this.setupFormProtection(),this.setupAjaxProtection(),this.setupTokenRotation(),console.log("🛡️ CSRF保護システム初期化完了")}catch(e){console.error("❌ CSRF保護システム初期化エラー:",e)}}setupMetaTags(){let e=document.querySelector('meta[name="csrf-token"]');e||(e=document.createElement("meta"),e.name="csrf-token",document.head.appendChild(e));const t=this.generateToken();e.content=t;const o=this.getSessionId();this.storeToken(o,t)}setupFormProtection(){if(window.DEV_MODE||window.HAQEI_CONFIG&&"development"===window.HAQEI_CONFIG.environment)return void console.log("🔧 開発環境: CSRF保護をスキップ");document.querySelectorAll("form").forEach(e=>this.protectForm(e));new MutationObserver(e=>{e.forEach(e=>{e.addedNodes&&e.addedNodes.length>0&&e.addedNodes.forEach(e=>{if(e&&e.nodeType===Node.ELEMENT_NODE)if("FORM"===e.tagName)this.protectForm(e);else if(e.querySelectorAll){e.querySelectorAll("form").forEach(e=>this.protectForm(e))}})})}).observe(document.body,{childList:!0,subtree:!0})}protectForm(e){if(!e||e.hasAttribute("data-csrf-protected"))return;const t=document.createElement("input");t.type="hidden",t.name="_csrf",t.value=this.getCurrentToken(),e.appendChild(t),e.setAttribute("data-csrf-protected","true"),e.addEventListener("submit",t=>{this.validateFormSubmission(e)||(t.preventDefault(),this.showSecurityWarning("CSRF token validation failed"))})}setupAjaxProtection(){const e=window.fetch;window.fetch=async(t,o={})=>{const n=this.addCSRFHeaders(o);return e(t,n)};const t=XMLHttpRequest.prototype.open,o=XMLHttpRequest.prototype.send;XMLHttpRequest.prototype.open=function(e,o,...n){return this._method=e,this._url=o,t.apply(this,[e,o,...n])},XMLHttpRequest.prototype.send=function(e){if(this._method&&"GET"!==this._method.toUpperCase()){const e=window.csrfProtection.getCurrentToken();this.setRequestHeader("X-CSRF-Token",e),this.setRequestHeader("X-Requested-With","XMLHttpRequest")}return o.apply(this,[e])}}addCSRFHeaders(e){const t=e.method?.toUpperCase()||"GET";if(!["GET","HEAD","OPTIONS"].includes(t)){const t=new Headers(e.headers||{});return t.set("X-CSRF-Token",this.getCurrentToken()),t.set("X-Requested-With","XMLHttpRequest"),this.config.enforceRefererCheck&&t.set("Referer",window.location.href),{...e,headers:t,credentials:"same-origin"}}return e}generateToken(){if(window.crypto&&window.crypto.getRandomValues){const e=new Uint8Array(this.config.tokenLength);return window.crypto.getRandomValues(e),Array.from(e,e=>e.toString(16).padStart(2,"0")).join("")}return console.warn("⚠️ Crypto API利用不可 - フォールバック乱数生成"),Math.random().toString(36).substring(2)+Date.now().toString(36)}storeToken(e,t){const o={token:t,createdAt:Date.now(),expiresAt:Date.now()+this.config.tokenExpiry,used:!1};this.sessionTokens.has(e)||this.sessionTokens.set(e,[]);const n=this.sessionTokens.get(e);n.length>=this.config.maxTokensPerSession&&n.shift(),n.push(o),this.tokenStore.set(t,o)}validateToken(e,t=null){if(!e||"string"!=typeof e)return console.warn("⚠️ 無効なCSRFトークン"),!1;const o=this.tokenStore.get(e);return o?Date.now()>o.expiresAt?(console.warn("⚠️ 期限切れCSRFトークン"),this.tokenStore.delete(e),!1):o.used?(console.warn("⚠️ 再利用されたCSRFトークン"),!1):t&&!this.validateTokenForSession(e,t)?(console.warn("⚠️ セッション不一致CSRFトークン"),!1):this.config.enforceRefererCheck&&!this.validateReferer()?(console.warn("⚠️ リファラー検証失敗"),!1):!!this.validateOrigin()||(console.warn("⚠️ オリジン検証失敗"),!1):(console.warn("⚠️ 未知のCSRFトークン"),!1)}validateTokenForSession(e,t){const o=this.sessionTokens.get(t);return!!o&&o.some(t=>t.token===e)}validateReferer(){const e=document.referrer,t=window.location.origin;if(!e)return console.warn("⚠️ リファラーヘッダーが空です"),!0;try{return new URL(e).origin===t}catch(o){return console.warn("⚠️ リファラーURL解析エラー:",o),!1}}validateOrigin(){const e=window.location.origin;return this.config.allowedOrigins.includes(e)}validateFormSubmission(e){const t=e.querySelector('input[name="_csrf"]');return t?this.validateToken(t.value,this.getSessionId()):(console.warn("⚠️ CSRFトークンフィールドが見つかりません"),!1)}getCurrentToken(){const e=document.querySelector('meta[name="csrf-token"]');return e?e.content:null}getSessionId(){return sessionStorage.getItem("sessionId")||localStorage.getItem("sessionId")||"default-session"}setupTokenRotation(){setInterval(()=>{this.rotateToken()},this.config.tokenExpiry/2),document.addEventListener("visibilitychange",()=>{document.hidden||this.rotateToken()})}rotateToken(){try{const e=this.generateToken(),t=this.getSessionId(),o=document.querySelector('meta[name="csrf-token"]');o&&(o.content=e),this.storeToken(t,e);document.querySelectorAll('input[name="_csrf"]').forEach(t=>{t.value=e}),console.log("🔄 CSRFトークン更新完了")}catch(e){console.error("❌ トークン更新エラー:",e)}}cleanupExpiredTokens(){const e=Date.now();for(const[t,o]of this.tokenStore.entries())e>o.expiresAt&&this.tokenStore.delete(t);for(const[t,o]of this.sessionTokens.entries()){const n=o.filter(t=>e<=t.expiresAt);0===n.length?this.sessionTokens.delete(t):this.sessionTokens.set(t,n)}}showSecurityWarning(e){console.error("🚨 CSRF保護警告:",e),window.notifications&&window.notifications.showError("セキュリティエラー: リクエストが拒否されました")}getProtectionStats(){return{activeTokens:this.tokenStore.size,activeSessions:this.sessionTokens.size,config:{tokenLength:this.config.tokenLength,tokenExpiry:this.config.tokenExpiry,refererCheckEnabled:this.config.enforceRefererCheck,allowedOrigins:this.config.allowedOrigins.length,secureContext:this.config.requireSecureContext},protectedForms:document.querySelectorAll("form[data-csrf-protected]").length,currentToken:this.getCurrentToken()?"Active":"None"}}debug(){console.group("🛡️ CSRF Protection Debug Info"),console.log("Protection Stats:",this.getProtectionStats()),console.log("Token Store:",Array.from(this.tokenStore.entries())),console.log("Session Tokens:",Array.from(this.sessionTokens.entries())),console.groupEnd()}}window.isSecureContext||"https:"===location.protocol||"localhost"===location.hostname?"undefined"!=typeof window&&(window.CSRFProtectionSystem=CSRFProtectionSystem,window.csrfProtection=new CSRFProtectionSystem,setInterval(()=>{window.csrfProtection.cleanupExpiredTokens()},3e5)):console.warn("⚠️ CSRF保護システムはセキュアコンテキストでのみ動作します"),"undefined"!=typeof module&&module.exports&&(module.exports=CSRFProtectionSystem),console.log("🛡️ CSRFProtectionSystem.js 読み込み完了 - 企業レベルCSRF防御");