class TripleOSFingerprint{constructor(t){this.canvas=document.getElementById(t),this.ctx=this.canvas?.getContext("2d"),this.colors={engine:{primary:"#E74C3C",light:"#EC7063",dark:"#C0392B"},interface:{primary:"#3498DB",light:"#5DADE2",dark:"#2874A6"},safe:{primary:"#27AE60",light:"#52BE80",dark:"#1E8449"},synergy:{high:"#2ECC71",medium:"#F1C40F",low:"#95A5A6"},tension:{high:"#E74C3C",medium:"#E67E22",low:"#BDC3C7"},confidence:{high:"#16A085",medium:"#F39C12",low:"#E74C3C"}},this.vertices={engine:{x:250,y:80,label:"Engine OS"},interface:{x:100,y:320,label:"Interface OS"},safe:{x:400,y:320,label:"Safe Mode OS"}},this.animationConfig={initial:{duration:800,easing:this.easeOutCubic,sequence:["vertices","edges","centroid"]},switchLens:{duration:400,easing:this.easeOut,morphing:!0}},this.currentAnimation=null,this.setupCanvas()}setupCanvas(){if(!this.canvas)return;const t=window.devicePixelRatio||1,e=this.canvas.getBoundingClientRect();this.canvas.width=e.width*t,this.canvas.height=e.height*t,this.ctx.scale(t,t),this.adjustVertices(e.width,e.height)}adjustVertices(t,e){const i=t/2,s=e/2,n=.35*Math.min(t,e);this.vertices={engine:{x:i,y:s-n,label:"Engine OS"},interface:{x:i-n*Math.cos(Math.PI/6),y:s+n*Math.sin(Math.PI/6),label:"Interface OS"},safe:{x:i+n*Math.cos(Math.PI/6),y:s+n*Math.sin(Math.PI/6),label:"Safe Mode OS"}}}draw(t){if(!this.ctx)return;this.ctx.clearRect(0,0,this.canvas.width,this.canvas.height),this.drawBackground(),this.drawEdges(t.metrics),this.drawVertices(t.scores);const e=this.calculateCentroid(t.scores);this.drawCentroid(e,t.metrics.confidence),this.drawLabels(t.scores)}drawBackground(){const t=this.ctx.createRadialGradient(this.canvas.width/2,this.canvas.height/2,0,this.canvas.width/2,this.canvas.height/2,this.canvas.width/2);t.addColorStop(0,"rgba(99, 102, 241, 0.02)"),t.addColorStop(1,"rgba(99, 102, 241, 0)"),this.ctx.fillStyle=t,this.ctx.fillRect(0,0,this.canvas.width,this.canvas.height)}drawEdges(t){[{from:"engine",to:"interface",synergy:t.synergy_edges.EI},{from:"interface",to:"safe",synergy:t.synergy_edges.IS},{from:"safe",to:"engine",synergy:t.synergy_edges.ES}].forEach(e=>{const i=this.vertices[e.from],s=this.vertices[e.to],n=2+8*e.synergy;let h;h=e.synergy>=.6?this.colors.synergy.high:e.synergy>=.3?this.colors.synergy.medium:this.colors.synergy.low;(t.tension||0)>.5?this.ctx.setLineDash([10,5]):this.ctx.setLineDash([]),this.ctx.strokeStyle=h,this.ctx.lineWidth=n,this.ctx.globalAlpha=.3+.5*e.synergy,this.ctx.beginPath(),this.ctx.moveTo(i.x,i.y),this.ctx.lineTo(s.x,s.y),this.ctx.stroke(),this.ctx.globalAlpha=1,this.ctx.setLineDash([])})}drawVertices(t){Object.entries(this.vertices).forEach(([e,i])=>{const s=t[e],n=8+12*s;this.ctx.strokeStyle=this.colors[e].primary,this.ctx.lineWidth=3,this.ctx.beginPath(),this.ctx.arc(i.x,i.y,n,0,2*Math.PI),this.ctx.stroke(),this.ctx.fillStyle=this.hexToRgba(this.colors[e].primary,.3*s+.2),this.ctx.fill()})}calculateCentroid(t){const e=t.engine||.33,i=t.interface||.33,s=t.safe||.34,n=e+i+s;return{x:(this.vertices.engine.x*e+this.vertices.interface.x*i+this.vertices.safe.x*s)/n,y:(this.vertices.engine.y*e+this.vertices.interface.y*i+this.vertices.safe.y*s)/n}}drawCentroid(t,e){e<.5?(this.ctx.setLineDash([5,5]),this.ctx.strokeStyle=this.colors.confidence.low,this.ctx.fillStyle=this.hexToRgba(this.colors.confidence.low,.1),this.addPulseAnimation(t)):e<.75?(this.ctx.setLineDash([]),this.ctx.strokeStyle=this.colors.confidence.medium,this.ctx.fillStyle=this.hexToRgba(this.colors.confidence.medium,.1)):(this.ctx.setLineDash([]),this.ctx.strokeStyle=this.colors.confidence.high,this.ctx.fillStyle=this.hexToRgba(this.colors.confidence.high,.1)),this.ctx.lineWidth=2+6*e,this.ctx.beginPath(),this.ctx.arc(t.x,t.y,10,0,2*Math.PI),this.ctx.fill(),this.ctx.stroke(),this.ctx.setLineDash([])}drawLabels(t){this.ctx.font="bold 12px sans-serif",this.ctx.textAlign="center",Object.entries(this.vertices).forEach(([e,i])=>{const s=t[e],n=8+12*s;this.ctx.fillStyle=this.colors[e].primary,this.ctx.fillText(i.label.toUpperCase(),i.x,i.y-n-8),this.ctx.font="10px sans-serif",this.ctx.fillStyle="#94a3b8",this.ctx.fillText(`${Math.round(100*s)}%`,i.x,i.y+n+16)})}addPulseAnimation(t){if(this.currentAnimation)return;let e=.95,i=!0;const animate=()=>{i?(e+=.003,e>=1.05&&(i=!1)):(e-=.003,e<=.95&&(i=!0)),this.ctx.save(),this.ctx.globalAlpha=.3,this.ctx.strokeStyle=this.colors.confidence.low,this.ctx.lineWidth=2,this.ctx.beginPath(),this.ctx.arc(t.x,t.y,15*e,0,2*Math.PI),this.ctx.stroke(),this.ctx.restore(),this.currentAnimation=requestAnimationFrame(animate)};animate()}animateTransition(t,e){const i=performance.now(),s=this.animationConfig.switchLens.duration,animate=n=>{const h=n-i,a=Math.min(h/s,1),c=this.animationConfig.switchLens.easing(a),r={engine:this.lerp(t.engine,e.engine,c),interface:this.lerp(t.interface,e.interface,c),safe:this.lerp(t.safe,e.safe,c)};this.draw({scores:r,metrics:e.metrics}),a<1&&requestAnimationFrame(animate)};requestAnimationFrame(animate)}hexToRgba(t,e){return`rgba(${parseInt(t.slice(1,3),16)}, ${parseInt(t.slice(3,5),16)}, ${parseInt(t.slice(5,7),16)}, ${e})`}lerp(t,e,i){return t+(e-t)*i}easeOutCubic(t){return 1-Math.pow(1-t,3)}easeOut(t){return 1-Math.pow(1-t,2)}resize(){this.setupCanvas()}destroy(){this.currentAnimation&&cancelAnimationFrame(this.currentAnimation),this.ctx?.clearRect(0,0,this.canvas.width,this.canvas.height)}}"undefined"!=typeof module&&module.exports&&(module.exports=TripleOSFingerprint);