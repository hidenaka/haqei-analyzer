class KeywordExpansionEngine{constructor(){this.initialized=!1,this.semanticDatabase=null,this.expansionRules=null,this.contextAnalyzer=null,this.acceptContradiction={precise_ambiguous:!0,complete_incomplete:!0,logical_associative:!0,structured_organic:!0},this.engineOS=null,this.interfaceOS=null,this.safeMode=null,this.init()}async init(){console.log("📚 [KeywordExpansionEngine] 初期化開始 - HaQei 語彙拡張");try{this.initializeTripleOS(),await this.initializeSemanticDatabase(),await this.setupExpansionRules(),await this.initializeContextAnalyzer(),this.initialized=!0,console.log("✅ [KeywordExpansionEngine] 語彙拡張システム準備完了")}catch(e){console.error("❌ [KeywordExpansionEngine] 初期化エラー:",e),this.activateSafeMode()}}initializeTripleOS(){console.log("🔧 [KeywordExpansionEngine] Triple OS Architecture 初期化"),this.engineOS={name:"Keyword Engine OS",version:"1.0.0",philosophy:"haqei-expansion",async expandKeywords(e,t={}){try{if(!e||0===e.length)return this.createEmptyExpansion();const n=new Map;for(const s of e){const e=await this.expandSingleKeyword(s,t);n.set(s,e)}const a=this.consolidateExpansions(n),i=this.filterByContext(a,t);return{original:e,expanded:i,totalExpansions:i.length,expansionRatio:i.length/e.length,context:t,philosophy:"haqei-expanded"}}catch(n){return console.warn("⚠️ キーワード拡張エラー:",n),this.createBasicExpansion(e)}},async expandSingleKeyword(e,t){const n=[];return n.push(...this.findSemanticRelations(e)),n.push(...this.findSynonyms(e)),n.push(...this.findAssociations(e,t)),n.push(...this.findHierarchicalRelations(e)),n.push(...this.findContextSpecificTerms(e,t)),n.push(...this.findIChingRelations(e)),{keyword:e,expansions:this.deduplicateAndScore(n),method:"multi_strategy",philosophy:"haqei-semantic"}},findSemanticRelations(e){const t=[],n=this.getSemanticMap();if(n.has(e)){const a=n.get(e);t.push(...a.map(e=>({term:e.word,relation:"semantic",strength:e.strength||.7,category:e.category||"general"})))}return t.push(...this.findPatternBasedRelations(e)),t},findSynonyms(e){const t=[],n=this.getSynonymMap();if(n.has(e)){const a=n.get(e);t.push(...a.map(e=>({term:e,relation:"synonym",strength:.9,category:"equivalent"})))}return t},findAssociations(e,t){const n=[];return t.domain&&n.push(...this.findDomainAssociations(e,t.domain)),n.push(...this.findEmotionalAssociations(e)),n.push(...this.findTemporalAssociations(e)),n.push(...this.findSpatialAssociations(e)),n},findDomainAssociations(e,t){const n=this.getDomainMaps(),a=[];if(n.has(t)){const i=n.get(t);if(i.has(e)){const n=i.get(e);a.push(...n.map(e=>({term:e,relation:"domain_association",strength:.6,category:t})))}}return a},findEmotionalAssociations(e){const t=[],n=this.getEmotionMap();for(const[a,i]of n)i.includes(e)&&t.push(...this.getEmotionalExpansions(a).map(e=>({term:e,relation:"emotional",strength:.5,category:a})));return t},findTemporalAssociations(e){const t=[];return["過去","現在","未来","時間","瞬間","永遠"].some(t=>e.includes(t))&&t.push({term:"変化",relation:"temporal",strength:.6,category:"time"},{term:"流れ",relation:"temporal",strength:.5,category:"time"},{term:"循環",relation:"temporal",strength:.4,category:"time"}),t},findSpatialAssociations(e){const t=[];return["場所","空間","距離","位置","方向"].some(t=>e.includes(t))&&t.push({term:"境界",relation:"spatial",strength:.6,category:"space"},{term:"広がり",relation:"spatial",strength:.5,category:"space"},{term:"中心",relation:"spatial",strength:.4,category:"space"}),t},findHierarchicalRelations(e){const t=[],n=this.getHierarchyMap();if(n.has(e)){const a=n.get(e);a.superordinates&&t.push(...a.superordinates.map(e=>({term:e,relation:"hypernym",strength:.7,category:"hierarchy"}))),a.subordinates&&t.push(...a.subordinates.map(e=>({term:e,relation:"hyponym",strength:.6,category:"hierarchy"})))}return t},findContextSpecificTerms(e,t){const n=[];return t.situation&&n.push(...this.findSituationalTerms(e,t.situation)),t.emotion&&n.push(...this.findEmotionalContext(e,t.emotion)),t.timeframe&&n.push(...this.findTemporalContext(e,t.timeframe)),n},findSituationalTerms:(e,t)=>(({decision:["選択","判断","決断","方針","方向"],relationship:["人間関係","絆","信頼","理解","協力"],career:["仕事","職業","成長","成功","目標"],health:["健康","体調","バランス","回復","維持"],learning:["学習","知識","理解","発見","成長"]}[t]||[]).map(e=>({term:e,relation:"situational",strength:.5,category:t}))),findIChingRelations(e){const t=[],n=this.getIChingMap();for(const[a,i]of n)(i.includes(e)||e.includes(a))&&t.push(...this.getIChingExpansions(a).map(e=>({term:e,relation:"iching",strength:.6,category:"philosophy"})));return t},findPatternBasedRelations(e){const t=[];if(e.endsWith("する")){const n=e.slice(0,-2);t.push({term:n+"できる",relation:"pattern",strength:.4,category:"ability"},{term:n+"したい",relation:"pattern",strength:.4,category:"desire"},{term:n+"される",relation:"pattern",strength:.3,category:"passive"})}if(e.startsWith("不")){const n=e.slice(1);t.push({term:n,relation:"negation",strength:.8,category:"opposite"})}return t},deduplicateAndScore(e){const t=new Map;return e.forEach(e=>{const n=e.term;if(t.has(n)){const a=t.get(n);e.strength>a.strength&&t.set(n,e)}else t.set(n,e)}),Array.from(t.values()).sort((e,t)=>t.strength-e.strength).slice(0,20)},consolidateExpansions(e){const t=[];return e.forEach((e,n)=>{e.expansions.forEach(e=>{t.push({original:n,expanded:e.term,relation:e.relation,strength:e.strength,category:e.category})})}),t},filterByContext:(e,t)=>t.filter?e.filter(e=>!(t.minStrength&&e.strength<t.minStrength)&&(!(t.categories&&!t.categories.includes(e.category))&&!(t.relations&&!t.relations.includes(e.relation)))):e,createEmptyExpansion:()=>({original:[],expanded:[],totalExpansions:0,expansionRatio:0,context:{},philosophy:"haqei-empty"}),createBasicExpansion(e){const t=e.flatMap(e=>[{original:e,expanded:e+"関連",relation:"basic",strength:.3,category:"general"},{original:e,expanded:e+"的",relation:"basic",strength:.3,category:"general"}]);return{original:e,expanded:t,totalExpansions:t.length,expansionRatio:2,context:{},philosophy:"haqei-basic"}}},this.interfaceOS={name:"Keyword Interface OS",formatExpansionResult(e){return{display:{summary:{original:e.original.length,expanded:e.totalExpansions,ratio:this.formatRatio(e.expansionRatio)},categories:this.groupByCategory(e.expanded),relations:this.groupByRelation(e.expanded),topExpansions:this.getTopExpansions(e.expanded,10)},philosophy:e.philosophy}},formatRatio:e=>Math.round(10*e)/10+"x",groupByCategory(e){const t={};return e.forEach(e=>{const n=e.category||"uncategorized";t[n]||(t[n]=[]),t[n].push(e)}),Object.entries(t).map(([e,t])=>({category:this.formatCategoryName(e),count:t.length,items:t.slice(0,5)}))},groupByRelation(e){const t={};return e.forEach(e=>{const n=e.relation||"unrelated";t[n]||(t[n]=[]),t[n].push(e)}),Object.entries(t).map(([e,t])=>({relation:this.formatRelationName(e),count:t.length,averageStrength:this.calculateAverageStrength(t)}))},getTopExpansions(e,t=10){return e.sort((e,t)=>t.strength-e.strength).slice(0,t).map(e=>({term:e.expanded,original:e.original,strength:this.formatPercentage(e.strength),relation:this.formatRelationName(e.relation),category:this.formatCategoryName(e.category)}))},formatCategoryName:e=>({general:"📋 一般",equivalent:"🔄 同等",hierarchy:"📊 階層",time:"⏰ 時間",space:"🗺️ 空間",emotion:"🎭 感情",philosophy:"☯️ 哲学",decision:"🎯 決断",relationship:"👥 人間関係",career:"💼 仕事",health:"🏥 健康",learning:"📚 学習",ability:"💪 能力",desire:"💝 願望"}[e]||`📌 ${e}`),formatRelationName:e=>({semantic:"🧠 意味的",synonym:"🔄 同義",association:"🔗 連想",hypernym:"⬆️ 上位概念",hyponym:"⬇️ 下位概念",emotional:"🎭 感情的",temporal:"⏰ 時間的",spatial:"🗺️ 空間的",situational:"🎬 状況的",iching:"☯️ 易経",pattern:"🔍 パターン",negation:"❌ 否定",basic:"🛡️ 基本"}[e]||`🔗 ${e}`),calculateAverageStrength(e){if(0===e.length)return 0;const t=e.reduce((e,t)=>e+t.strength,0);return Math.round(t/e.length*100)/100},formatPercentage:e=>Math.round(100*e)+"%"},this.safeMode={name:"Keyword Safe Mode OS",active:!1,activate(){return console.log("🛡️ [KeywordExpansionEngine] Safe Mode 起動"),this.active=!0,{basicExpansion:!0,advancedFeatures:!1,philosophy:"haqei-safe"}},generateSafeExpansion(e){const t=e.flatMap(e=>[{original:e,expanded:e,relation:"identity",strength:1,category:"safe"}]);return{original:e,expanded:t,totalExpansions:t.length,expansionRatio:1,context:{},philosophy:"haqei-safe"}}},console.log("✅ [KeywordExpansionEngine] Triple OS Architecture 準備完了")}async initializeSemanticDatabase(){console.log("🧠 [KeywordExpansionEngine] セマンティックデータベース初期化"),this.semanticDatabase={semanticMap:this.createSemanticMap(),synonymMap:this.createSynonymMap(),hierarchyMap:this.createHierarchyMap(),domainMaps:this.createDomainMaps(),emotionMap:this.createEmotionMap(),ichingMap:this.createIChingMap()}}createSemanticMap(){const e=new Map;return e.set("未来",[{word:"希望",strength:.8,category:"emotion"},{word:"計画",strength:.7,category:"action"},{word:"予測",strength:.6,category:"cognition"},{word:"変化",strength:.7,category:"process"}]),e.set("決断",[{word:"選択",strength:.9,category:"action"},{word:"判断",strength:.8,category:"cognition"},{word:"意思決定",strength:.9,category:"process"},{word:"責任",strength:.6,category:"ethics"}]),e.set("変化",[{word:"成長",strength:.7,category:"process"},{word:"進歩",strength:.6,category:"improvement"},{word:"転換",strength:.8,category:"transformation"},{word:"発展",strength:.7,category:"development"}]),e.set("問題",[{word:"課題",strength:.9,category:"challenge"},{word:"困難",strength:.8,category:"obstacle"},{word:"解決",strength:.7,category:"solution"},{word:"対応",strength:.6,category:"response"}]),e}createSynonymMap(){const e=new Map;return e.set("問題",["課題","トラブル","困難","障害"]),e.set("解決",["対処","解消","克服","改善"]),e.set("未来",["将来","今後","これから"]),e.set("過去",["以前","昔","かつて"]),e.set("現在",["今","現時点","目下"]),e}createHierarchyMap(){const e=new Map;return e.set("感情",{superordinates:["心理","精神","内面"],subordinates:["喜び","悲しみ","怒り","恐怖","愛"]}),e.set("行動",{superordinates:["活動","動作","実践"],subordinates:["歩く","話す","考える","決める","作る"]}),e}createDomainMaps(){const e=new Map,t=new Map;t.set("成功",["達成","成果","業績","結果","効果"]),t.set("目標",["ゴール","狙い","目的","理想","ビジョン"]),e.set("business",t);const n=new Map;return n.set("信頼",["安心","確信","頼り","依存","絆"]),n.set("愛",["愛情","慈愛","恋愛","愛着","好意"]),e.set("relationship",n),e}createEmotionMap(){const e=new Map;return e.set("joy",["嬉しい","楽しい","幸せ","満足","喜び"]),e.set("sadness",["悲しい","寂しい","辛い","苦しい","憂鬱"]),e.set("anger",["怒り","憤り","イライラ","腹立つ","激怒"]),e.set("fear",["不安","恐怖","心配","怖い","緊張"]),e.set("love",["愛","好き","大切","愛情","慈しみ"]),e}createIChingMap(){const e=new Map;return e.set("乾",["天","創造","強健","積極","リーダー"]),e.set("坤",["地","受容","柔順","母性","包容"]),e.set("震",["雷","動き","始まり","発動","覚醒"]),e.set("巽",["風","浸透","影響","柔軟","適応"]),e.set("坎",["水","危険","困難","流動","深淵"]),e.set("離",["火","明智","光明","分離","美"]),e.set("艮",["山","静止","瞑想","境界","安定"]),e.set("兌",["沢","喜悦","満足","交流","調和"]),e}getSemanticMap(){return this.semanticDatabase?.semanticMap||new Map}getSynonymMap(){return this.semanticDatabase?.synonymMap||new Map}getHierarchyMap(){return this.semanticDatabase?.hierarchyMap||new Map}getDomainMaps(){return this.semanticDatabase?.domainMaps||new Map}getEmotionMap(){return this.semanticDatabase?.emotionMap||new Map}getIChingMap(){return this.semanticDatabase?.ichingMap||new Map}getEmotionalExpansions(e){return{joy:["幸福","満足","達成","成功"],sadness:["失望","孤独","損失","別れ"],anger:["不満","対立","競争","挑戦"],fear:["危険","未知","変化","失敗"],love:["絆","調和","統合","平和"]}[e]||[]}getIChingExpansions(e){return{"乾":["創造性","指導力","決断力","積極性"],"坤":["受容性","協調性","柔軟性","忍耐力"],"震":["行動力","変革力","発動力","覚醒"],"巽":["影響力","浸透力","適応力","調整"],"坎":["困難","試練","深さ","流動"],"離":["明晰性","理解","分別","美"],"艮":["静寂","集中","境界","停止"],"兌":["喜び","交流","満足","調和"]}[e]||[]}async setupExpansionRules(){console.log("📋 [KeywordExpansionEngine] 拡張ルール設定"),this.expansionRules={maxExpansionsPerKeyword:20,minStrength:.3,strengthWeights:{semantic:1,synonym:.9,association:.6,hierarchy:.7,contextual:.5,iching:.6,pattern:.4},categoryPriorities:{philosophy:.8,emotion:.7,action:.6,cognition:.6,time:.5,space:.5}}}async initializeContextAnalyzer(){console.log("🔍 [KeywordExpansionEngine] コンテキスト分析器初期化"),this.contextAnalyzer={analyzeSituation:e=>({domain:e.domain||"general",emotion:e.emotion||"neutral",timeframe:e.timeframe||"present",complexity:e.complexity||.5}),inferContext:e=>{const t={domain:"general",emotion:"neutral",timeframe:"present"};return e.some(e=>["仕事","会社","ビジネス"].includes(e))?t.domain="business":e.some(e=>["愛","恋愛","友人","家族"].includes(e))&&(t.domain="relationship"),e.some(e=>["嬉しい","楽しい","幸せ"].includes(e))?t.emotion="positive":e.some(e=>["悲しい","辛い","苦しい"].includes(e))&&(t.emotion="negative"),e.some(e=>["未来","将来","これから"].includes(e))?t.timeframe="future":e.some(e=>["過去","昔","以前"].includes(e))&&(t.timeframe="past"),t}}}activateSafeMode(){console.log("🛡️ [KeywordExpansionEngine] Safe Mode 起動"),this.safeMode.activate(),this.initialized=!0}async expandKeywords(e,t={}){this.initialized||await this.init();try{if(this.safeMode.active)return this.safeMode.generateSafeExpansion(e);t.domain||t.emotion||t.timeframe||(t={...t,...this.contextAnalyzer.inferContext(e)});const n=await this.engineOS.expandKeywords(e,t);return this.interfaceOS.formatExpansionResult(n)}catch(n){return console.error("❌ [KeywordExpansionEngine] 拡張エラー:",n),this.safeMode.generateSafeExpansion(e)}}getStatus(){return{initialized:this.initialized,safeModeActive:this.safeMode?.active||!1,databaseReady:!!this.semanticDatabase,rulesReady:!!this.expansionRules,analyzerReady:!!this.contextAnalyzer,philosophy:"haqei",architecture:"triple-os"}}getExpansionCapabilities(){const e=["basic_expansion"];return this.semanticDatabase&&e.push("semantic_relations","synonym_mapping","hierarchical_expansion"),this.contextAnalyzer&&e.push("context_inference","domain_specific_expansion"),this.safeMode?.active||e.push("iching_expansion","emotional_associations","pattern_matching"),e}}"undefined"!=typeof window&&(window.KeywordExpansionEngine=new KeywordExpansionEngine,window.expandKeywords=async function(e,t){return await window.KeywordExpansionEngine.expandKeywords(e,t)}),console.log("✅ [KeywordExpansionEngine] HaQei Philosophy Implementation Loaded");