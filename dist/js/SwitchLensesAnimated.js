class AnimatedSwitchLenses{constructor(e,n=null){this.container=e,this.baseScores=n||{engine:.33,interface:.33,safe:.34},this.animationConfig={duration:300,easing:"cubic-bezier(0.4, 0, 0.2, 1)",fps:60},this.matrix=[[-.1,0,.1],[.12,-.08,-.04],[-.05,-.12,.17]],this.sensitivity=1.2,this.currentValues={uncertainty:.5,timePressure:.5,socialRisk:.5},this.animationFrames=new Map,this.isAnimating=!1,this.init()}init(){this.render(),this.attachEventListeners(),this.startAutoAnimation()}render(){this.container.innerHTML=`\n            <div class="switch-lenses-container">\n                <h3 class="zone-title">Switch Lenses - 条件反転シミュレーション</h3>\n                \n                <div class="sliders-grid">\n                    ${this.renderSlider("uncertainty","不確実性",this.currentValues.uncertainty)}\n                    ${this.renderSlider("timePressure","時間圧力",this.currentValues.timePressure)}\n                    ${this.renderSlider("socialRisk","社会的リスク",this.currentValues.socialRisk)}\n                </div>\n                \n                <div class="visualization-container">\n                    <canvas id="switch-visualization" width="400" height="300"></canvas>\n                    <div class="mode-indicator">\n                        <span class="mode-label">予測モード:</span>\n                        <span class="mode-value" id="predicted-mode">Balanced</span>\n                    </div>\n                </div>\n                \n                <div class="predictions-panel">\n                    <h4>状況予測</h4>\n                    <div id="predictions-content" class="predictions-content">\n                        \x3c!-- 動的に生成される予測内容 --\x3e\n                    </div>\n                </div>\n                \n                <div class="preset-scenarios">\n                    <h4>シナリオプリセット</h4>\n                    <div class="preset-buttons">\n                        ${this.renderPresetButtons()}\n                    </div>\n                </div>\n            </div>\n        `,this.canvas=document.getElementById("switch-visualization"),this.ctx=this.canvas.getContext("2d"),this.updateVisualization()}renderSlider(e,n,t){const a=Math.round(100*t);return`\n            <div class="slider-group" data-slider="${e}">\n                <div class="slider-header">\n                    <label for="${e}-slider">${n}</label>\n                    <span class="slider-value">${a}%</span>\n                </div>\n                <div class="slider-container">\n                    <input \n                        type="range" \n                        id="${e}-slider" \n                        min="0" \n                        max="100" \n                        value="${a}"\n                        class="animated-slider"\n                    >\n                    <div class="slider-track">\n                        <div class="slider-fill" style="width: ${a}%"></div>\n                    </div>\n                </div>\n                <div class="slider-labels">\n                    <span class="label-low">低</span>\n                    <span class="label-mid">中</span>\n                    <span class="label-high">高</span>\n                </div>\n            </div>\n        `}renderPresetButtons(){return[{id:"calm",label:"平常時",icon:"☀️"},{id:"pressure",label:"締切直前",icon:"⏰"},{id:"social",label:"重要会議",icon:"👥"},{id:"chaos",label:"カオス",icon:"🌪️"}].map(e=>`\n            <button class="preset-btn" data-preset="${e.id}">\n                <span class="preset-icon">${e.icon}</span>\n                <span class="preset-label">${e.label}</span>\n            </button>\n        `).join("")}attachEventListeners(){this.container.querySelectorAll(".animated-slider").forEach(e=>{e.addEventListener("input",e=>{const n=e.target.id.replace("-slider",""),t=e.target.value/100;this.animateToValue(n,t)}),e.addEventListener("touchstart",e=>{this.handleTouchStart(e)}),e.addEventListener("touchmove",e=>{this.handleTouchMove(e)})}),this.container.querySelectorAll(".preset-btn").forEach(e=>{e.addEventListener("click",e=>{const n=e.currentTarget.dataset.preset;this.applyPreset(n)})})}animateToValue(e,n){const t=this.currentValues[e],a=n-t;if(Math.abs(a)<.01)return;this.animationFrames.has(e)&&cancelAnimationFrame(this.animationFrames.get(e));const i=performance.now(),s=this.animationConfig.duration,animate=n=>{const r=n-i,o=Math.min(r/s,1),l=this.easeInOutCubic(o);if(this.currentValues[e]=t+a*l,this.updateSliderUI(e,this.currentValues[e]),this.updateVisualization(),this.updatePredictions(),o<1){const n=requestAnimationFrame(animate);this.animationFrames.set(e,n)}else this.animationFrames.delete(e)};requestAnimationFrame(animate)}updateSliderUI(e,n){const t=this.container.querySelector(`[data-slider="${e}"]`);if(!t)return;const a=Math.round(100*n);t.querySelector(".slider-value").textContent=`${a}%`;const i=t.querySelector(".slider-fill");if(i){i.style.width=`${a}%`;const e=120-120*n;i.style.background=`linear-gradient(90deg, \n                hsl(${e}, 70%, 50%), \n                hsl(${e-20}, 80%, 60%))`}}updateVisualization(){const{uncertainty:e,timePressure:n,socialRisk:t}=this.currentValues,a=this.calculateNewScores(e,n,t);this.drawVisualization(a),this.updateModeIndicator(a)}calculateNewScores(e,n,t){const a=[e,n,t],i=[0,0,0];for(let c=0;c<3;c++)for(let e=0;e<3;e++)i[e]+=a[c]*this.matrix[c][e];const s=[Math.log(this.baseScores.engine+.01),Math.log(this.baseScores.interface+.01),Math.log(this.baseScores.safe+.01)].map((e,n)=>e+this.sensitivity*i[n]),r=Math.max(...s),o=s.map(e=>Math.exp(e-r)),l=o.reduce((e,n)=>e+n,0);return{engine:o[0]/l,interface:o[1]/l,safe:o[2]/l}}drawVisualization(e){const n=this.ctx,t=this.canvas.width,a=this.canvas.height;n.clearRect(0,0,t,a);const i=n.createLinearGradient(0,0,t,a);i.addColorStop(0,"rgba(99, 102, 241, 0.05)"),i.addColorStop(1,"rgba(168, 85, 247, 0.05)"),n.fillStyle=i,n.fillRect(0,0,t,a),this.drawTriangle(n,e),this.drawBars(n,e),this.drawWaveform(n,e)}drawTriangle(e,n){const t=200,a=150,i=80,s=[{x:t,y:70,label:"Engine",color:"#E74C3C"},{x:130.72,y:190,label:"Interface",color:"#3498DB"},{x:269.28,y:190,label:"Safe",color:"#27AE60"}];e.beginPath(),e.moveTo(s[0].x,s[0].y),s.forEach(n=>e.lineTo(n.x,n.y)),e.closePath(),e.strokeStyle="rgba(99, 102, 241, 0.3)",e.lineWidth=2,e.stroke();const r={x:t+(n.engine-n.interface)*i*.5,y:a+(n.safe-(n.engine+n.interface)/2)*i*.866},o=Date.now()/1e3,l=.2*Math.sin(2*o)+1;e.beginPath(),e.arc(r.x,r.y,8*l,0,2*Math.PI),e.fillStyle="rgba(168, 85, 247, 0.8)",e.fill(),s.forEach((t,a)=>{const i=0===a?n.engine:1===a?n.interface:n.safe;e.font="12px sans-serif",e.fillStyle=t.color,e.textAlign="center",e.fillText(t.label,t.x,t.y-15),e.fillText(`${(100*i).toFixed(0)}%`,t.x,t.y-30)})}drawBars(e,n){[{label:"E",value:n.engine,color:"#E74C3C"},{label:"I",value:n.interface,color:"#3498DB"},{label:"S",value:n.safe,color:"#27AE60"}].forEach((n,t)=>{const a=320+50*t,i=180*n.value,s=230-i;e.fillStyle=n.color,e.fillRect(a,s,20,i),e.shadowColor=n.color,e.shadowBlur=10,e.fillRect(a,s,20,i),e.shadowBlur=0,e.fillStyle="#E2E8F0",e.font="12px sans-serif",e.textAlign="center",e.fillText(n.label,a+10,250)})}drawWaveform(e,n){const t=Date.now()/1e3;e.beginPath(),e.strokeStyle="rgba(99, 102, 241, 0.3)",e.lineWidth=1;for(let a=10;a<=390;a+=2){const i=(a-10)/380,s=280+10*Math.sin((4*i+t)*Math.PI)*(.3*n.engine+.3*n.interface+.4*n.safe);10===a?e.moveTo(a,s):e.lineTo(a,s)}e.stroke()}updateModeIndicator(e){const n=Math.max(e.engine,e.interface,e.safe);let t="Balanced",a="#6366F1";n===e.engine?(t="Engine主導",a="#E74C3C"):n===e.interface?(t="Interface主導",a="#3498DB"):n===e.safe&&(t="Safe主導",a="#27AE60");const i=document.getElementById("predicted-mode");i&&(i.textContent=t,i.style.color=a,i.style.animation="pulse 0.5s ease",setTimeout(()=>{i.style.animation=""},500))}updatePredictions(){const{uncertainty:e,timePressure:n,socialRisk:t}=this.currentValues,a=[];e>.7?a.push({icon:"⚠️",text:"高い不確実性により、Safe Mode OSが活性化します"}):e<.3&&a.push({icon:"✨",text:"明確な状況で、Engine OSが効率的に機能します"}),n>.7?a.push({icon:"⏱️",text:"時間圧力により、直感的な判断が優先されます"}):n<.3&&a.push({icon:"🎯",text:"十分な時間があり、熟考した選択が可能です"}),t>.7?a.push({icon:"🛡️",text:"Interface OSが強化され、慎重な対応を取ります"}):t<.3&&a.push({icon:"💫",text:"自然な自己表現が可能な環境です"}),e>.6&&n>.6&&a.push({icon:"🔥",text:"ストレスフルな状況：バランスの再調整が必要です"});const i=document.getElementById("predictions-content");i&&(i.innerHTML=a.map(e=>`\n                <div class="prediction-item">\n                    <span class="prediction-icon">${e.icon}</span>\n                    <span class="prediction-text">${e.text}</span>\n                </div>\n            `).join(""))}applyPreset(e){const n={calm:{uncertainty:.2,timePressure:.2,socialRisk:.3},pressure:{uncertainty:.4,timePressure:.9,socialRisk:.5},social:{uncertainty:.5,timePressure:.4,socialRisk:.8},chaos:{uncertainty:.9,timePressure:.8,socialRisk:.7}}[e];if(!n)return;Object.entries(n).forEach(([e,n])=>{this.animateToValue(e,n);const t=document.getElementById(`${e}-slider`);t&&(t.value=100*n)});const t=this.container.querySelector(`[data-preset="${e}"]`);t&&(t.classList.add("active"),setTimeout(()=>t.classList.remove("active"),1e3))}startAutoAnimation(){setTimeout(()=>{this.demoAnimation()},1e3)}demoAnimation(){[{param:"uncertainty",value:.7,delay:0},{param:"timePressure",value:.3,delay:500},{param:"socialRisk",value:.6,delay:1e3},{param:"uncertainty",value:.5,delay:2e3},{param:"timePressure",value:.5,delay:2500},{param:"socialRisk",value:.5,delay:3e3}].forEach(e=>{setTimeout(()=>{this.animateToValue(e.param,e.value);const n=document.getElementById(`${e.param}-slider`);n&&(n.value=100*e.value)},e.delay)})}handleTouchStart(e){e.preventDefault(),this.touchStartX=e.touches[0].clientX,this.touchStartValue=parseFloat(e.target.value)}handleTouchMove(e){if(!this.touchStartX)return;e.preventDefault();const n=(e.touches[0].clientX-this.touchStartX)/e.target.offsetWidth*100,t=Math.max(0,Math.min(100,this.touchStartValue+n));e.target.value=t;const a=new Event("input",{bubbles:!0});e.target.dispatchEvent(a)}easeInOutCubic(e){return e<.5?4*e*e*e:1-Math.pow(-2*e+2,3)/2}}const styles="\n<style>\n.switch-lenses-container {\n    padding: 1.5rem;\n}\n\n.sliders-grid {\n    display: grid;\n    gap: 1.5rem;\n    margin-bottom: 2rem;\n}\n\n.slider-group {\n    background: rgba(15, 23, 42, 0.4);\n    padding: 1rem;\n    border-radius: 8px;\n    border: 1px solid rgba(99, 102, 241, 0.2);\n}\n\n.slider-header {\n    display: flex;\n    justify-content: space-between;\n    margin-bottom: 0.5rem;\n}\n\n.slider-value {\n    font-weight: 600;\n    color: #8B5CF6;\n}\n\n.slider-container {\n    position: relative;\n    margin-bottom: 0.5rem;\n}\n\n.slider-track {\n    position: absolute;\n    top: 50%;\n    transform: translateY(-50%);\n    width: 100%;\n    height: 8px;\n    background: rgba(99, 102, 241, 0.1);\n    border-radius: 4px;\n    pointer-events: none;\n}\n\n.slider-fill {\n    height: 100%;\n    border-radius: 4px;\n    transition: width 0.3s ease, background 0.3s ease;\n}\n\n.animated-slider {\n    position: relative;\n    z-index: 1;\n}\n\n.slider-labels {\n    display: flex;\n    justify-content: space-between;\n    font-size: 0.75rem;\n    color: #64748B;\n}\n\n.visualization-container {\n    background: rgba(15, 23, 42, 0.6);\n    border-radius: 12px;\n    padding: 1rem;\n    margin-bottom: 1.5rem;\n}\n\n#switch-visualization {\n    width: 100%;\n    height: auto;\n    display: block;\n}\n\n.mode-indicator {\n    text-align: center;\n    margin-top: 1rem;\n    padding: 0.5rem;\n    background: rgba(99, 102, 241, 0.1);\n    border-radius: 6px;\n}\n\n.mode-value {\n    font-size: 1.25rem;\n    font-weight: 700;\n    transition: color 0.3s ease;\n}\n\n.predictions-panel {\n    background: rgba(15, 23, 42, 0.4);\n    border-radius: 8px;\n    padding: 1rem;\n    margin-bottom: 1.5rem;\n}\n\n.prediction-item {\n    display: flex;\n    align-items: center;\n    gap: 0.5rem;\n    padding: 0.5rem;\n    margin: 0.5rem 0;\n    background: rgba(99, 102, 241, 0.05);\n    border-radius: 6px;\n    animation: slideIn 0.3s ease;\n}\n\n.prediction-icon {\n    font-size: 1.25rem;\n}\n\n.preset-scenarios {\n    background: rgba(15, 23, 42, 0.4);\n    border-radius: 8px;\n    padding: 1rem;\n}\n\n.preset-buttons {\n    display: grid;\n    grid-template-columns: repeat(auto-fit, minmax(120px, 1fr));\n    gap: 0.5rem;\n    margin-top: 0.5rem;\n}\n\n.preset-btn {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    gap: 0.25rem;\n    padding: 0.75rem;\n    background: rgba(99, 102, 241, 0.1);\n    border: 1px solid rgba(99, 102, 241, 0.3);\n    border-radius: 6px;\n    color: #E2E8F0;\n    cursor: pointer;\n    transition: all 0.2s ease;\n}\n\n.preset-btn:hover {\n    background: rgba(99, 102, 241, 0.2);\n    transform: translateY(-2px);\n}\n\n.preset-btn.active {\n    background: rgba(99, 102, 241, 0.3);\n    border-color: #6366F1;\n    animation: pulse 0.5s ease;\n}\n\n.preset-icon {\n    font-size: 1.5rem;\n}\n\n.preset-label {\n    font-size: 0.875rem;\n}\n\n@keyframes slideIn {\n    from {\n        opacity: 0;\n        transform: translateX(-20px);\n    }\n    to {\n        opacity: 1;\n        transform: translateX(0);\n    }\n}\n\n@keyframes pulse {\n    0%, 100% { transform: scale(1); }\n    50% { transform: scale(1.05); }\n}\n\n/* レスポンシブ対応 */\n@media (max-width: 768px) {\n    .preset-buttons {\n        grid-template-columns: repeat(2, 1fr);\n    }\n    \n    #switch-visualization {\n        height: 250px;\n    }\n}\n</style>\n";"undefined"!=typeof module&&module.exports&&(module.exports={AnimatedSwitchLenses:AnimatedSwitchLenses,styles:styles});