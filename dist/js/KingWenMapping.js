import{ConfigLoader}from"../../config/config-loader-adapter.js";export class KingWenMapping{constructor(){this.hexagramData=null,this.reverseMap=new Map,this.initialized=!1,this.loader=new ConfigLoader}async initialize(){if(!this.initialized)try{const i=await this.loader.load("kingwen-mapping",{basePath:"undefined"!=typeof window?"/config":"../../config"});this.hexagramData=i.hexagrams,this.buildReverseMap(),this.initialized=!0,console.log(`✅ KingWenMapping initialized with ${Object.keys(this.hexagramData).length} hexagrams`)}catch(i){console.error("Failed to initialize KingWenMapping:",i),this.initializeWithSeedData()}}initializeWithSeedData(){this.hexagramData={1:{name:"乾為天",lines:[1,1,1,1,1,1],trigrams:["乾","乾"]},2:{name:"坤為地",lines:[0,0,0,0,0,0],trigrams:["坤","坤"]},11:{name:"泰",lines:[1,1,1,0,0,0],trigrams:["乾","坤"]},12:{name:"否",lines:[0,0,0,1,1,1],trigrams:["坤","乾"]},63:{name:"既済",lines:[1,0,1,0,1,0],trigrams:["離","坎"]},64:{name:"未済",lines:[0,1,0,1,0,1],trigrams:["坎","離"]}},this.buildReverseMap(),this.initialized=!0}buildReverseMap(){this.reverseMap.clear();for(const[i,e]of Object.entries(this.hexagramData)){const a=e.lines.join("");this.reverseMap.set(a,parseInt(i))}}calculateTransformedHex(i,e){this.initialized||this.initializeWithSeedData();const a=this.hexagramData[i];if(!a)return console.warn(`Hexagram ${i} not found in mapping`),null;const t=[...a.lines],n=e-1;if(n<0||n>5)return console.error(`Invalid line number: ${e}`),null;t[n]=1===t[n]?0:1;const r=t.join(""),s=this.reverseMap.get(r);return s||(console.warn(`No hexagram found for pattern ${r}`),this.calculateFallbackHex(i,e))}calculateFallbackHex(i,e){const a=1+(i-1^1<<e-1);return console.warn(`Using fallback calculation: ${i} line ${e} → ${a} (may be incorrect)`),a}getLineConfiguration(i){this.initialized||this.initializeWithSeedData();const e=this.hexagramData[i];return e?e.lines:null}getHexagramFromLines(i){if(this.initialized||this.initializeWithSeedData(),!Array.isArray(i)||6!==i.length)return console.error("Invalid lines array"),null;const e=i.join("");return this.reverseMap.get(e)||null}getHexagramData(i){return this.initialized||this.initializeWithSeedData(),this.hexagramData[i]||null}getAvailableHexagramCount(){return Object.keys(this.hexagramData||{}).length}}