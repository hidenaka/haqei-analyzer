console.log("🎯 HaQei Analyzer starting...");let app=null,storageManager=null;function debounce(e,o,s=!1){let a;return function(...n){const t=s&&!a;clearTimeout(a),a=setTimeout(()=>{a=null,s||e.apply(this,n)},o),t&&e.apply(this,n)}}async function loadScript(e,o={}){const{retryCount:s=3,timeout:a=1e4,integrity:n=null,crossOrigin:t=null}=o;let i=0;const tryLoad=()=>new Promise((o,s)=>{const i=document.createElement("script");i.src=e,i.async=!0,n&&(i.integrity=n),t&&(i.crossOrigin=t);const r=setTimeout(()=>{i.remove(),s(new Error(`Script load timeout: ${e}`))},a);i.onload=e=>{clearTimeout(r),o(e)},i.onerror=o=>{clearTimeout(r),i.remove(),s(new Error(`Script load failed: ${e} - ${o.message||"Unknown error"}`))},document.head.appendChild(i)});for(;i<s;)try{i++;i>1&&Date.now();const o=tryLoad();return i>1&&console.log(`✅ Script loaded after ${i} attempts: ${e}`),o}catch(r){if(i>=s)throw console.error(`❌ Script load failed after ${s} attempts: ${e}`,r),r;console.warn(`⚠️ Script load attempt ${i} failed, retrying: ${e}`)}}async function loadAnalysisEngines(){if(console.log("🚀 ModuleLoader-based progressive loading initialized"),!window.moduleLoader)return console.error("❌ ModuleLoader not available, falling back to direct loading"),loadAnalysisEnginesFallback();try{console.log("📦 Loading Core Bundle..."),window.moduleLoader.loadBundle("core"),window.loadQuestionBundle=async function(){return console.log("📦 Loading Question Bundle..."),window.moduleLoader.loadBundle("questions")},window.loadAnalysisBundle=async function(){console.log("📦 Loading Analysis Bundle...");const e=window.moduleLoader.loadBundle("analysis");return window.heavyEnginesLoaded=!0,e},window.loadResultsBundle=async function(){return console.log("📦 Loading Results Bundle..."),window.moduleLoader.loadBundle("results")},window.loadOptionalBundle=async function(){return console.log("📦 Loading Optional Bundle..."),window.moduleLoader.loadBundle("optional")},window.enablePredictiveLoading=function(e){window.moduleLoader&&window.moduleLoader.predictNextModules(e)},console.log("✅ ModuleLoader progressive loading system ready"),console.log("📊 Estimated bundle size reduction: ~37% (1.76MB saved)")}catch(e){return console.error("❌ ModuleLoader initialization failed, using fallback:",e),loadAnalysisEnginesFallback()}}async function loadAnalysisEnginesFallback(){console.log("🔄 Using fallback loading system");Promise.all(["/js/os-analyzer/core/StatisticalEngine.js","/js/os-analyzer/core/Calculator.js","/js/os-analyzer/components/AnalysisView.js"].map(e=>loadScript(e))),console.log("✅ Critical engines loaded (fallback mode)"),window.loadSecondaryEngines=async function(){Promise.all(["/js/os-analyzer/engines/CompatibilityDataLoader.js","/js/os-analyzer/core/Engine.js"].map(e=>loadScript(e)))},window.loadHeavyEngines=async function(){Promise.all(["/js/os-analyzer/core/TripleOSEngine.js","/js/os-analyzer/core/UltraAnalysisEngine.js"].map(e=>loadScript(e))),window.heavyEnginesLoaded=!0}}function showAppInterface(){const e=document.getElementById("welcome-container");e&&(e.style.display="flex",e.style.opacity="1")}async function startRealDiagnosis(){try{console.log("🚀 Starting diagnosis with Phase 2 optimization..."),console.log("🔍 App object:",app),console.log("🔍 WelcomeScreen:",app.welcomeScreen),app.storageManager.updateSession({stage:"questions"}),console.log("👋 Hiding welcome screen..."),app.welcomeScreen.hide(),document.body.classList.remove("welcome-active"),document.body.classList.add("questions-active");const o=document.querySelector(".global-progress");o&&(o.style.setProperty("display","none","important"),o.style.setProperty("visibility","hidden","important"),o.style.setProperty("opacity","0","important")),console.log("📦 Loading Question Bundle with ModuleLoader...");try{window.loadQuestionBundle?(await window.loadQuestionBundle(),console.log("✅ Question Bundle loaded successfully")):(console.log("🔄 Loading question components individually..."),Promise.all([loadScript("/js/shared/data/questions.js"),loadScript("/js/os-analyzer/core/PrecompiledQuestions.js"),loadScript("/js/os-analyzer/components/VirtualQuestionFlow-core.js"),loadScript("/js/os-analyzer/components/VirtualQuestionFlow-renderer.js"),loadScript("/js/os-analyzer/components/VirtualQuestionFlow-navigator.js"),loadScript("/js/os-analyzer/components/VirtualQuestionFlow-state.js"),loadScript("/js/os-analyzer/components/VirtualQuestionFlow-utils.js"),loadScript("/js/os-analyzer/components/VirtualQuestionFlow-v2.js")])),window.enablePredictiveLoading&&window.enablePredictiveLoading("questions")}catch(e){console.error("❌ Question Bundle loading failed:",e)}console.log("⚡ Creating optimized VirtualQuestionFlow...");const s=new VirtualQuestionFlow("questions-container",{storageManager:app.storageManager,optimized:!0,onProgress:debounce(function(e){console.log(`📊 Progress: ${e.toFixed(1)}%`),document.documentElement.style.setProperty("--progress",`${e}%`),app.storageManager.saveProgress({currentQuestionIndex:s.currentQuestionIndex,totalQuestions:s.questions.length,completedQuestions:s.answers.length,progressPercentage:e})},300),onComplete:function(e){let o,s;console.log("✅ All questions completed (Phase 2 optimized):",e),e.originalAnswers&&e.preparedAnswers?(o=e.originalAnswers,s=e.preparedAnswers,console.log("📊 Using prepared answers for analysis:",s)):(o=e,s=e,console.log("📊 Using original answers for analysis:",s)),app.storageManager.saveAnswers(o),app.storageManager.updateSession({stage:"analysis"}),proceedToAnalysis(s)}});s.init(),console.log("✅ Optimized QuestionFlow created:",s),console.log("📺 Showing questions screen..."),s.show(),app.questionFlow=s,console.log("💾 QuestionFlow saved to app (Phase 2 optimized)")}catch(o){console.error("❌ Real diagnosis failed:",o),console.error("Error stack:",o.stack),app.storageManager.updateSession({stage:"error",lastError:o.message}),alert("診断開始に失敗しました: "+o.message)}}async function proceedToAnalysis(e){try{if(console.log("🔬 Analysis process starting..."),app.storageManager.updateSession({stage:"analysis"}),app.questionFlow&&await app.questionFlow.hide(),window.heavyEnginesLoaded||(console.log("🚀 Loading analysis engines with bundle optimization..."),window.loadAnalysisBundle?await window.loadAnalysisBundle():window.loadHeavyEngines&&await window.loadHeavyEngines()),!app.fullSystemLoaded){console.log("🚀 Loading analysis system using ModuleLoader optimization...");try{if(window.loadAnalysisBundle){await window.loadAnalysisBundle();console.log("📦 Analysis bundle loaded successfully")}else console.log("🔄 Using fallback module loading"),await loadScript("/js/shared/core/StorageManager.js"),await loadScript("/js/shared/core/DataManager.js"),await loadScript("/js/shared/core/ErrorHandler.js"),await loadScript("/js/shared/data/vectors.js");window.progressiveDataManager||(await loadScript("/js/shared/core/ProgressiveDataManager.js"),window.progressiveDataManager=new ProgressiveDataManager,await window.progressiveDataManager.loadRequiredData({hexagrams:!0,hexagramId:e[0]?.hexagramId||1,minimal:!0}),setTimeout(()=>{window.progressiveDataManager.loadAllDataProgressively()},2e3));const s=new StorageManager,a=new DataManager;console.log("🌉 Integrating optimized storage system..."),await a.loadData({useCache:!0,minimal:!0});try{if(!await app.storageManager.integrateFullManager(StorageManager))throw new Error("Integration failed");console.log("✅ Optimized BridgeStorageManager integration successful")}catch(o){console.warn("⚠️ Using fallback storage integration:",o);const e=app.storageManager.getAnswers(),a=app.storageManager.getSession();s.saveAnswers(e),s.saveSession(a),app.storageManager=s}app.dataManager=a,app.engine=new UltraAnalysisEngine(a),app.fullSystemLoaded=!0,console.log("✅ Optimized analysis system loaded (Phase 2)"),window.moduleLoader&&(window.moduleLoader.preloadModule("/js/components/TripleOSResultsView.js","high"),console.log("🔄 Preloading results components..."))}catch(s){console.error("❌ Optimized loading failed, using fallback:",s),await loadScript("/js/shared/core/StorageManager.js"),await loadScript("/js/shared/core/DataManager.js");const e=new StorageManager,o=new DataManager;await o.loadData(),app.storageManager=e,app.dataManager=o,app.engine=new UltraAnalysisEngine(o),app.fullSystemLoaded=!0}}showAnalysisView(new AnalysisView("analysis-container",{analysisTask:async()=>{const o=await app.engine.analyzeTripleOS(e),s=await app.engine.generateInsights(o);return app.storageManager.saveAnalysisResult(o),app.storageManager.saveInsights(s),app.storageManager.updateSession({stage:"results"}),{result:o,insights:s}},onComplete:e=>{console.log("🎊 Animation and Analysis complete. Transitioning to results."),e.error?alert(e.error):showResultsView(e.result,e.insights)}}))}catch(s){console.error("❌ A critical error occurred in proceedToAnalysis:",s),alert("分析プロセスを開始できませんでした: "+s.message)}}async function checkPreviousProgress(){const e=app.storageManager.getSession(),o=app.storageManager.getProgress(),s=app.storageManager.getAnswers();if(e&&o&&s.length>0){confirm(`前回の診断が途中で終了されています。\n進行状況: ${o.completedQuestions}/${o.totalQuestions}問完了\n続きから始めますか？\n\n「OK」: 続きから開始\n「キャンセル」: 最初からやり直し`)?await resumePreviousSession():app.storageManager.startNewSession()}}async function resumePreviousSession(){try{const e=app.storageManager.getSession(),o=app.storageManager.getProgress(),s=app.storageManager.getAnswers(),a=app.storageManager.getAnalysisResult(),n=app.storageManager.getInsights();switch(console.log("🔄 Resuming previous session:",e),e.stage){case"questions":startRealDiagnosis(),app.questionFlow&&(app.questionFlow.currentQuestionIndex=o.currentQuestionIndex||0,app.questionFlow.answers=s||[],app.questionFlow.render());break;case"analysis":proceedToAnalysis(s);break;case"results":a&&n?showResultsView(a,n):proceedToAnalysis(s);break;default:app.storageManager.updateSession({stage:"welcome"})}}catch(e){console.error("❌ Resume failed:",e),app.storageManager.startNewSession()}}function showAnalysisView(e){hideAllScreens(),app.analysisView=e,app.analysisView.show()}async function showResultsView(e,o){console.log("✅ [App] Phase 2最適化結果表示開始");try{if(console.log("📦 Loading Results Bundle..."),window.loadResultsBundle?(await window.loadResultsBundle(),console.log("✅ Results Bundle loaded successfully")):(console.log("🔄 Loading results components individually..."),Promise.all([loadScript("/js/components/TripleOSResultsView.js"),loadScript("/js/os-analyzer/components/ResultsView.js"),loadScript("/js/lib/chart.min.js")])),!e||!o)throw new Error("分析結果またはインサイトが見つかりません");if(console.log("🔍 [App] データ構造確認:",{result:e,hasEngineOS:!!e?.engineOS,hasInterfaceOS:!!e?.interfaceOS,hasSafeModeOS:!!e?.safeModeOS,hasPrimaryOS:!!e?.primaryOS,analysisType:e?.analysisType}),e.engineOS&&e.interfaceOS&&e.safeModeOS)return console.log("🎭 [App] Using VirtualPersonaResultsView for Triple OS results"),await showVirtualPersonaResultsView(e,o);window.saveAnalysisResultForResults&&(console.log("🔧 Using fix-data-transfer.js for reliable data saving"),window.saveAnalysisResultForResults(e,o));const a=app.storageManager.saveAnalysisResult(e),n=app.storageManager.saveInsights(o);console.log("💾 [App] 保存結果:",{analysisResult:a,insights:n}),app.storageManager.updateSession({stage:"results",timestamp:(new Date).toISOString(),dataSize:{resultKeys:Object.keys(e).length,insightKeys:Object.keys(o).length}});const t=app.storageManager.getAnalysisResult(),i=app.storageManager.getInsights();if(!t||!i){console.warn("⚠️ [App] データ保存検証失敗 - SimpleStorageManagerで再保存試行");try{const s=new SimpleStorageManager;if(!t){const o=s.saveAnalysisResult(e);console.log("📦 [App] SimpleStorageManager分析結果保存: "+(o?"成功":"失敗"))}if(!i){const e=s.saveInsights(o);console.log("📦 [App] SimpleStorageManagerインサイト保存: "+(e?"成功":"失敗"))}}catch(s){console.error("❌ [App] SimpleStorageManager保存エラー:",s),localStorage.setItem("haqei_analysis_result",JSON.stringify({result:e,timestamp:Date.now(),version:"2025.08.01"})),localStorage.setItem("haqei_insights",JSON.stringify({insights:o,timestamp:Date.now(),version:"2025.08.01"}))}}console.log("💾 [App] 分析結果をストレージに保存完了");const r={hasAnalysisResult:!!localStorage.getItem("haqei_analysis_result"),hasInsights:!!localStorage.getItem("haqei_insights"),hasSession:!!localStorage.getItem("haqei_session"),storageKeys:Object.keys(localStorage).filter(e=>e.includes("haqei")).length};console.log("🔍 [App] LocalStorage確認:",r),console.log("🔄 [App] results.htmlへページ遷移中..."),setTimeout(()=>{window.location.href="results.html"},100)}catch(a){console.error("❌ [App] 結果表示でエラー:",a),console.error("❌ [App] エラースタック:",a.stack);try{const s={result:e?{analysisType:e.analysisType,timestamp:e.timestamp,primaryOS:e.primaryOS?.name||"unknown"}:null,insights:o?{summary:o.summary||"N/A",timestamp:o.timestamp}:null,error:{message:a.message,type:a.name,timestamp:Date.now(),userAgent:navigator.userAgent.slice(0,100)}};localStorage.setItem("haqei_emergency_result",JSON.stringify(s)),console.log("🚨 [App] 緊急データ保存完了 (セキュア版)")}catch(n){if(console.error("❌ [App] 緊急保存も失敗:",n),"indexedDB"in window)try{const e=indexedDB.open("haqei_emergency",1);e.onsuccess=()=>{e.result.transaction(["emergency"],"readwrite").objectStore("emergency").put({id:Date.now(),data:emergencyData})}}catch(t){console.error("❌ [App] IndexedDB緊急保存も失敗:",t)}}console.log("⚠️ エラーが発生しましたが、results.htmlに遷移します"),setTimeout(()=>{window.location.href="results.html"},200)}}async function showTripleOSResultsView(e,o){try{const s=new CompatibilityDataLoader,a={analysisResult:e,insights:o,compatibilityLoader:s,dataManager:app.dataManager};console.log("🕵️‍♂️ [App] TripleOSStrategicViewを生成します...",a),app.resultsView=new TripleOSStrategicView("results-container",a),await app.resultsView.init(),await app.resultsView.show();const n=document.getElementById("results-container");if(n){n.classList.add("visible"),n.style.setProperty("display","flex","important"),n.style.setProperty("position","fixed","important"),n.style.setProperty("top","0","important"),n.style.setProperty("left","0","important"),n.style.setProperty("width","100vw","important"),n.style.setProperty("height","100vh","important"),n.style.setProperty("z-index","30000","important");const e=window.matchMedia&&window.matchMedia("(prefers-color-scheme: dark)").matches,o=e?"linear-gradient(135deg, #1a1a1a 0%, #2d2d2d 100%)":"linear-gradient(135deg, #1e293b 0%, #334155 100%)",s=e?"#ffffff":"#f1f5f9";n.style.setProperty("background",o,"important"),n.style.setProperty("color",s,"important"),n.style.setProperty("opacity","1","important"),n.style.setProperty("visibility","visible","important"),n.style.setProperty("overflow-y","auto","important"),n.style.setProperty("padding","20px","important")}console.log("✅ [App] TripleOS結果表示完了")}catch(s){throw console.error("❌ [App] TripleOS結果表示でエラー:",s),s}}async function showSingleOSResultsView(e,o){try{app.resultsView=new ResultsView("results-container",{onExploreMore:function(e){showInsightPanel(e,o)},onRetakeTest:function(){window.location.reload()}}),app.resultsView.setData(e,o),await app.resultsView.show(),console.log("✅ [App] 単一OS結果表示完了")}catch(s){throw console.error("❌ [App] 単一OS結果表示でエラー:",s),s}}async function showResultsViewFallback(e,o){console.log("🔄 [App] フォールバック：従来方式で結果表示");const s=document.getElementById("analysis-container");s&&(s.style.setProperty("display","none","important"),s.classList.remove("visible"),s.style.opacity="0"),hideAllScreens();const a={analysisResult:e,insights:o,compatibilityLoader:new CompatibilityDataLoader,dataManager:app.dataManager};console.log("🕵️‍♂️ [TRACE-CHECKPOINT 2] TripleOSStrategicViewを生成します...",a);try{app.resultsView=new TripleOSStrategicView("results-container",a),await app.resultsView.init(),await app.resultsView.show();const e=document.getElementById("results-container");if(e){e.classList.add("visible"),e.style.setProperty("display","flex","important"),e.style.setProperty("position","fixed","important"),e.style.setProperty("top","0","important"),e.style.setProperty("left","0","important"),e.style.setProperty("width","100vw","important"),e.style.setProperty("height","100vh","important"),e.style.setProperty("z-index","30000","important");const o=window.matchMedia&&window.matchMedia("(prefers-color-scheme: dark)").matches,s=o?"linear-gradient(135deg, #1a1a1a 0%, #2d2d2d 100%)":"linear-gradient(135deg, #1e293b 0%, #334155 100%)",a=o?"#ffffff":"#f1f5f9";e.style.setProperty("background",s,"important"),e.style.setProperty("color",a,"important"),e.style.setProperty("opacity","1","important"),e.style.setProperty("visibility","visible","important"),e.style.setProperty("overflow-y","auto","important"),e.style.setProperty("padding","20px","important")}console.log("✅ [App] フォールバック結果表示完了")}catch(n){console.error("❌ [App] フォールバック表示も失敗:",n);const e=document.getElementById("results-container");e&&(e.style.display="block",e.innerHTML='<div class="error-text">結果の表示中にエラーが発生しました。ページをリロードしてください。</div>')}}function showInsightPanel(e,o){hideAllScreens();const s=new InsightPanel("insights-container",{onBack:function(){showResultsView(e,o)},onGenerateReport:function(e,o){generateReport(e,o)}});s.setData(e,o),s.show(),app.insightPanel=s}function hideAllScreens(){["welcome-container","questions-container","analysis-container","results-container","insights-container"].forEach(e=>{const o=document.getElementById(e);o&&(o.style.setProperty("display","none","important"),o.style.setProperty("opacity","0","important"),o.classList.remove("visible"),console.log(`🔧 [hideAllScreens] ${e} forcibly hidden`))})}async function showVirtualPersonaResultsView(e,o){try{console.log("🎭 [App] Virtual Persona Results View 表示開始"),hideAllScreens();let s=document.getElementById("results-container");s||(s=document.createElement("div"),s.id="results-container",s.className="screen-container",document.body.appendChild(s));const a=new VirtualPersonaResultsView("results-container",{analysisResult:e,insights:o});if(!await a.init())throw new Error("VirtualPersonaResultsView初期化失敗");await a.show(),app.virtualPersonaView=a,console.log("✅ [App] VirtualPersonaResultsView表示完了")}catch(s){return console.error("❌ [App] VirtualPersonaResultsView表示失敗:",s),await showResultsViewFallback(e,o)}}function generateReport(e,o){const s={timestamp:(new Date).toISOString(),analysisResult:e,insights:o,session:app.storageManager.getSession()},a=JSON.stringify(s,null,2),n=new Blob([a],{type:"application/json"}),t=URL.createObjectURL(n),i=document.createElement("a");i.href=t,i.download=`haqei_analysis_${(new Date).toISOString().split("T")[0]}.json`,document.body.appendChild(i),i.click(),document.body.removeChild(i),URL.revokeObjectURL(t),console.log("📊 Report generated and downloaded")}document.addEventListener("DOMContentLoaded",async function(){console.log("📱 DOM loaded, initializing components..."),showAppInterface(),console.log("📱 Initializing components...");try{storageManager=new MicroStorageManager;let e=storageManager.getSession();e?(console.log("🔄 Existing session found:",e),storageManager.updateSession({stage:"loading"})):(e=storageManager.startNewSession(),console.log("🎆 New session started:",e)),console.log("⚡ MicroDataManager初期化開始");const o=new MicroDataManager;console.log("⚡ 設問データ読み込み開始");o.loadQuestions()?console.log("⚡ 設問データ読み込み完了"):console.warn("⚠️ フォールバック設問を使用");const s=o.getBasicStats();console.log("📊 軽量データ統計:",s);const a=o.validateData();a.isValid||console.warn("⚠️ 設問データに問題:",a.errors);let n=null;console.log("🎯 Analysis engines will be loaded dynamically when needed (Bundle optimization)"),console.log("🔍 [App.js] WelcomeScreen初期化開始");const t=new WelcomeScreen("welcome-container",{onStart:async function(){console.log("🚀 Starting real diagnosis flow..."),startRealDiagnosis()}});console.log("🔍 [App.js] WelcomeScreen初期化完了"),console.log("🔍 [App.js] WelcomeScreen表示開始"),t.init(),console.log("🔍 [App.js] WelcomeScreen.init()完了"),t.show(),console.log("✅ [App.js] WelcomeScreen表示完了");const i=document.getElementById("welcome-container");console.log("🔍 [App.js] WelcomeContainer内容:",i.innerHTML.length>0?"コンテンツあり":"空"),console.log("🌉 Creating BridgeStorageManager with HaQei philosophy...");const r=new BridgeStorageManager(storageManager);app={storageManager:r,dataManager:o,engine:n,welcomeScreen:t},window.app=app,window.loadScript=loadScript,window.loadAnalysisEngines=loadAnalysisEngines,storageManager.updateSession({stage:"welcome"}),console.log("✅ All components initialized successfully"),console.log("📋 Ready for diagnosis!"),checkPreviousProgress()}catch(e){window.UnifiedErrorHandler?window.UnifiedErrorHandler.handleError(e,{source:"app-initialization",component:"main-app",critical:!0}):(console.error("❌ [App.js] Initialization failed:",e),console.error("❌ [App.js] Error stack:",e.stack));const o={message:e.message,stack:e.stack,scriptLoadingStatus:window.scriptLoadingStatus||null,globalDataAvailable:{HAQEI_DATA:void 0!==window.HAQEI_DATA,WORLDVIEW_QUESTIONS:void 0!==window.WORLDVIEW_QUESTIONS,SCENARIO_QUESTIONS:void 0!==window.SCENARIO_QUESTIONS,H64_8D_VECTORS:void 0!==window.H64_8D_VECTORS}};console.error("❌ [App.js] Error details:",o),storageManager&&storageManager.updateSession({stage:"error",lastError:e.message});let s="アプリケーションの初期化に失敗しました。";e.message.includes("DataManager")?s="データの読み込みに失敗しました。ページを再読み込みしてください。":e.message.includes("TripleOSEngine")?s="診断エンジンの初期化に失敗しました。ページを再読み込みしてください。":e.message.includes("WelcomeScreen")&&(s="画面の初期化に失敗しました。ページを再読み込みしてください。"),alert(s+"\n\n詳細: "+e.message)}});