class StatisticalValidator{constructor(){this.minimumReliability=.7,this.targetReliability=.85}calculateCronbachAlpha(i){if(!i||0===i.length)return 0;i.length;const e=i[0].length,t=[];for(let r=0;r<e;r++){const e=i.map(i=>i[r]);t.push(this.calculateVariance(e))}const a=i.map(i=>i.reduce((i,e)=>i+e,0)),l=this.calculateVariance(a),n=e/(e-1)*(1-t.reduce((i,e)=>i+e,0)/l);return Math.max(0,Math.min(1,n))}calculateVariance(i){if(!i||0===i.length)return 0;const e=i.reduce((i,e)=>i+e,0)/i.length;return i.map(i=>Math.pow(i-e,2)).reduce((i,e)=>i+e,0)/i.length}validateTripleOSResults(i){const e={engineOS:{reliability:0,status:"unknown",recommendation:""},interfaceOS:{reliability:0,status:"unknown",recommendation:""},safeModeOS:{reliability:0,status:"unknown",recommendation:""},overall:{reliability:0,status:"unknown",isValid:!1}};i.engineOS&&(e.engineOS.reliability=this.evaluateOSReliability(i.engineOS),e.engineOS.status=this.getReliabilityStatus(e.engineOS.reliability),e.engineOS.recommendation=this.getRecommendation(e.engineOS.reliability)),i.interfaceOS&&(e.interfaceOS.reliability=this.evaluateOSReliability(i.interfaceOS),e.interfaceOS.status=this.getReliabilityStatus(e.interfaceOS.reliability),e.interfaceOS.recommendation=this.getRecommendation(e.interfaceOS.reliability)),i.safeModeOS&&(e.safeModeOS.reliability=this.evaluateOSReliability(i.safeModeOS),e.safeModeOS.status=this.getReliabilityStatus(e.safeModeOS.reliability),e.safeModeOS.recommendation=this.getRecommendation(e.safeModeOS.reliability));const t=[e.engineOS.reliability,e.interfaceOS.reliability,e.safeModeOS.reliability].filter(i=>i>0);return t.length>0&&(e.overall.reliability=t.reduce((i,e)=>i+e,0)/t.length,e.overall.status=this.getReliabilityStatus(e.overall.reliability),e.overall.isValid=e.overall.reliability>=this.minimumReliability),e}evaluateOSReliability(i){let e=0;if(i.trigramEnergies){const t=Object.values(i.trigramEnergies).filter(i=>i>0).length;t>=4?e+=.35:t>=2&&(e+=.2)}return i.hexagramId&&i.hexagramId>=1&&i.hexagramId<=64&&(e+=.25),i.upperTrigram&&i.lowerTrigram&&(e+=.2),i.description&&i.description.length>10&&(e+=.2),Math.max(.15,Math.min(1,e))}getReliabilityStatus(i){return i>=this.targetReliability?"excellent":i>=this.minimumReliability?"acceptable":i>=.5?"marginal":"poor"}getRecommendation(i){return i>=this.targetReliability?"優れた信頼性です。現状を維持してください。":i>=this.minimumReliability?"許容範囲内ですが、さらなる改善が推奨されます。":i>=.5?"信頼性が低いです。質問数の増加を検討してください。":"信頼性が不足しています。システムの再設計が必要です。"}generateReport(i){return`\n            <div class="statistical-report">\n                <h3>📊 統計的信頼性レポート</h3>\n                \n                <div class="reliability-scores">\n                    <div class="os-reliability">\n                        <h4>Engine OS</h4>\n                        <div class="score ${i.engineOS.status}">\n                            ${(100*i.engineOS.reliability).toFixed(1)}%\n                        </div>\n                        <p>${i.engineOS.recommendation}</p>\n                    </div>\n                    \n                    <div class="os-reliability">\n                        <h4>Interface OS</h4>\n                        <div class="score ${i.interfaceOS.status}">\n                            ${(100*i.interfaceOS.reliability).toFixed(1)}%\n                        </div>\n                        <p>${i.interfaceOS.recommendation}</p>\n                    </div>\n                    \n                    <div class="os-reliability">\n                        <h4>Safe Mode OS</h4>\n                        <div class="score ${i.safeModeOS.status}">\n                            ${(100*i.safeModeOS.reliability).toFixed(1)}%\n                        </div>\n                        <p>${i.safeModeOS.recommendation}</p>\n                    </div>\n                </div>\n                \n                <div class="overall-reliability">\n                    <h4>総合信頼性</h4>\n                    <div class="score ${i.overall.status}">\n                        ${(100*i.overall.reliability).toFixed(1)}%\n                    </div>\n                    <p>${i.overall.isValid?"✅ 統計的に有効":"⚠️ 信頼性向上が必要"}</p>\n                </div>\n                \n                <div class="legend">\n                    <p><strong>信頼性基準:</strong></p>\n                    <ul>\n                        <li>85%以上: 優秀（研究レベル）</li>\n                        <li>70%以上: 許容範囲（実用レベル）</li>\n                        <li>50%以上: 要改善</li>\n                        <li>50%未満: 要再設計</li>\n                    </ul>\n                </div>\n            </div>\n        `}}window.StatisticalValidator=StatisticalValidator;