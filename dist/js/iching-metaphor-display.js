class IChingMetaphorDisplay{constructor(n){this.container=n,this.currentDisplay=null,this.animationQueue=[],this.isAnimating=!1,console.log("üé® I Ching Metaphor Display initialized")}async init(){try{return this.setupContainer(),this.initializeStyles(),!0}catch(n){return console.error("‚ùå Failed to initialize I Ching Display:",n),!1}}setupContainer(){if(!this.container)throw new Error("Container not provided");this.container.innerHTML="",this.container.className="iching-metaphor-display",this.container.innerHTML='\n      <div class="metaphor-header">\n        <div class="hexagram-display">\n          <div class="hexagram-visual"></div>\n          <div class="hexagram-info">\n            <h3 class="hexagram-name"></h3>\n            <p class="hexagram-description"></p>\n          </div>\n        </div>\n      </div>\n      \n      <div class="situation-analysis">\n        <div class="current-situation">\n          <h4>ÁèæÂú®„ÅÆÁä∂Ê≥Å</h4>\n          <div class="situation-content"></div>\n        </div>\n        \n        <div class="theme-selection">\n          <h4>„ÉÜ„Éº„Éû„ÅÆÈÅ∏Êäû</h4>\n          <div class="theme-options">\n            <button class="theme-option" data-choice="follow">\n              <div class="theme-icon">üåä</div>\n              <div class="theme-label">Âæì„ÅÜ</div>\n              <div class="theme-description">ÁèæÂú®„ÅÆ„ÉÜ„Éº„Éû„Å´Ê≤ø„Å£„Å¶ÈÄ≤„ÇÄ</div>\n            </button>\n            <button class="theme-option" data-choice="change">\n              <div class="theme-icon">üîÑ</div>\n              <div class="theme-label">Â§â„Åà„Çã</div>\n              <div class="theme-description">„ÉÜ„Éº„Éû„ÇíÂ§â„Åà„Å¶Êñ∞„Åó„ÅÑÈÅì„Å∏</div>\n            </button>\n            <button class="theme-option" data-choice="create">\n              <div class="theme-icon">‚ú®</div>\n              <div class="theme-label">Ââµ„Çã</div>\n              <div class="theme-description">ÂÖ®„ÅèÊñ∞„Åó„ÅÑ„ÉÜ„Éº„Éû„ÇíÂâµÈÄ†</div>\n            </button>\n          </div>\n        </div>\n      </div>\n      \n      <div class="transformation-display" style="display: none;">\n        <div class="transformation-visual">\n          <div class="from-state">\n            <div class="yao-visual old"></div>\n            <div class="state-label">ÁèæÂú®</div>\n          </div>\n          <div class="transformation-arrow">\n            <div class="arrow-visual"></div>\n            <div class="transformation-type"></div>\n          </div>\n          <div class="to-state">\n            <div class="yao-visual new"></div>\n            <div class="state-label">Â§âÂåñÂæå</div>\n          </div>\n        </div>\n        <div class="transformation-metaphor"></div>\n      </div>\n      \n      \x3c!-- „Ç∑„Éä„É™„Ç™Ë°®Á§∫„Çª„ÇØ„Ç∑„Éß„É≥„ÅØ„É¶„Éº„Ç∂„Éº„ÅÆ„É™„ÇØ„Ç®„Çπ„Éà„Å´„Çà„ÇäÂâäÈô§ --\x3e\n      \n      <div class="loading-indicator" style="display: none;">\n        <div class="iching-spinner"></div>\n        <p>ÊòìÁµå„ÅÆÁü•ÊÅµ„ÇíË™≠„ÅøÂèñ„Å£„Å¶„ÅÑ„Åæ„Åô...</p>\n      </div>\n    '}initializeStyles(){if(document.getElementById("iching-metaphor-styles"))return;const n=document.createElement("style");n.id="iching-metaphor-styles",n.textContent="\n      .iching-metaphor-display {\n        font-family: 'Inter', 'Noto Sans JP', sans-serif;\n        max-width: 1200px;\n        margin: 0 auto;\n        padding: 2rem;\n      }\n\n      .metaphor-header {\n        background: linear-gradient(135deg, #1e293b 0%, #334155 100%);\n        border: 2px solid rgba(99, 102, 241, 0.3);\n        border-radius: 1rem;\n        padding: 2rem;\n        margin-bottom: 2rem;\n        color: #ffffff;\n      }\n\n      .hexagram-display {\n        display: flex;\n        align-items: center;\n        gap: 2rem;\n      }\n\n      .hexagram-visual {\n        width: 120px;\n        height: 120px;\n        background: radial-gradient(circle, rgba(99, 102, 241, 0.2) 0%, transparent 70%);\n        border: 2px solid #6366f1;\n        border-radius: 50%;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        font-size: 2rem;\n        position: relative;\n        overflow: hidden;\n      }\n\n      .hexagram-visual::before {\n        content: '';\n        position: absolute;\n        width: 100%;\n        height: 100%;\n        background: conic-gradient(from 0deg, transparent, rgba(99, 102, 241, 0.3), transparent);\n        animation: rotate 8s linear infinite;\n      }\n\n      @keyframes rotate {\n        from { transform: rotate(0deg); }\n        to { transform: rotate(360deg); }\n      }\n\n      .hexagram-info h3 {\n        font-size: 1.5rem;\n        font-weight: 700;\n        margin-bottom: 0.5rem;\n        background: linear-gradient(135deg, #6366f1, #a855f7);\n        -webkit-background-clip: text;\n        -webkit-text-fill-color: transparent;\n      }\n\n      .situation-analysis {\n        display: grid;\n        grid-template-columns: 1fr 1fr;\n        gap: 2rem;\n        margin-bottom: 2rem;\n      }\n\n      .current-situation, .theme-selection {\n        background: rgba(30, 41, 59, 0.5);\n        border: 1px solid rgba(148, 163, 184, 0.2);\n        border-radius: 0.75rem;\n        padding: 1.5rem;\n        color: #ffffff;\n      }\n\n      .current-situation h4, .theme-selection h4 {\n        font-size: 1.125rem;\n        font-weight: 600;\n        margin-bottom: 1rem;\n        color: #e2e8f0;\n      }\n\n      .situation-content {\n        background: rgba(99, 102, 241, 0.1);\n        border: 1px solid rgba(99, 102, 241, 0.3);\n        border-radius: 0.5rem;\n        padding: 1rem;\n        color: #cbd5e1;\n      }\n\n      .theme-options {\n        display: flex;\n        flex-direction: column;\n        gap: 0.75rem;\n      }\n\n      .theme-option {\n        display: flex;\n        align-items: center;\n        gap: 1rem;\n        padding: 1rem;\n        background: rgba(51, 65, 85, 0.5);\n        border: 1px solid rgba(148, 163, 184, 0.2);\n        border-radius: 0.5rem;\n        color: #ffffff;\n        cursor: pointer;\n        transition: all 0.3s ease;\n        text-align: left;\n      }\n\n      .theme-option:hover {\n        border-color: rgba(99, 102, 241, 0.5);\n        background: rgba(99, 102, 241, 0.1);\n        transform: translateY(-2px);\n        box-shadow: 0 4px 12px rgba(99, 102, 241, 0.2);\n      }\n\n      .theme-option.selected {\n        border-color: #6366f1;\n        background: rgba(99, 102, 241, 0.2);\n        box-shadow: 0 0 20px rgba(99, 102, 241, 0.3);\n      }\n\n      .theme-icon {\n        font-size: 1.5rem;\n        width: 40px;\n        text-align: center;\n      }\n\n      .theme-label {\n        font-weight: 600;\n        font-size: 1rem;\n        min-width: 60px;\n      }\n\n      .theme-description {\n        color: #94a3b8;\n        font-size: 0.875rem;\n        flex: 1;\n      }\n\n      .transformation-display {\n        background: linear-gradient(135deg, #334155 0%, #475569 100%);\n        border: 2px solid rgba(168, 85, 247, 0.3);\n        border-radius: 1rem;\n        padding: 2rem;\n        margin-bottom: 2rem;\n        color: #ffffff;\n      }\n\n      .transformation-visual {\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        gap: 3rem;\n        margin-bottom: 1.5rem;\n      }\n\n      .from-state, .to-state {\n        text-align: center;\n      }\n\n      .yao-visual {\n        width: 80px;\n        height: 80px;\n        border-radius: 50%;\n        margin: 0 auto 0.5rem;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        font-size: 1.5rem;\n        font-weight: bold;\n        color: #ffffff;\n        position: relative;\n        overflow: hidden;\n      }\n\n      .yao-visual.old {\n        background: linear-gradient(135deg, #64748b, #475569);\n        border: 2px solid #94a3b8;\n      }\n\n      .yao-visual.new {\n        background: linear-gradient(135deg, #a855f7, #9333ea);\n        border: 2px solid #c084fc;\n        animation: glow 2s ease-in-out infinite alternate;\n      }\n\n      @keyframes glow {\n        from { box-shadow: 0 0 20px rgba(168, 85, 247, 0.5); }\n        to { box-shadow: 0 0 30px rgba(168, 85, 247, 0.8); }\n      }\n\n      .transformation-arrow {\n        display: flex;\n        flex-direction: column;\n        align-items: center;\n        gap: 0.5rem;\n      }\n\n      .arrow-visual {\n        width: 60px;\n        height: 60px;\n        background: linear-gradient(45deg, #6366f1, #8b5cf6);\n        border-radius: 50%;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        font-size: 1.5rem;\n        color: #ffffff;\n        position: relative;\n      }\n\n      .arrow-visual::after {\n        content: '‚Üí';\n        animation: pulse 1.5s ease-in-out infinite;\n      }\n\n      @keyframes pulse {\n        0%, 100% { transform: scale(1); }\n        50% { transform: scale(1.1); }\n      }\n\n      .transformation-type {\n        font-size: 0.875rem;\n        color: #c084fc;\n        font-weight: 600;\n        text-transform: uppercase;\n        letter-spacing: 0.05em;\n      }\n\n      .state-label {\n        font-size: 0.875rem;\n        color: #94a3b8;\n        font-weight: 500;\n      }\n\n      .transformation-metaphor {\n        background: rgba(168, 85, 247, 0.1);\n        border: 1px solid rgba(168, 85, 247, 0.3);\n        border-radius: 0.75rem;\n        padding: 1.5rem;\n        text-align: center;\n      }\n\n      .scenarios-display {\n        color: #ffffff;\n      }\n\n      .scenarios-display h4 {\n        font-size: 1.25rem;\n        font-weight: 600;\n        margin-bottom: 1.5rem;\n        color: #e2e8f0;\n        text-align: center;\n      }\n\n      .scenarios-container {\n        display: grid;\n        grid-template-columns: repeat(auto-fit, minmax(350px, 1fr));\n        gap: 1.5rem;\n      }\n\n      .scenario-card {\n        background: linear-gradient(135deg, #1e293b 0%, #334155 100%);\n        border: 1px solid rgba(148, 163, 184, 0.2);\n        border-radius: 0.75rem;\n        padding: 1.5rem;\n        transition: all 0.3s ease;\n        position: relative;\n        overflow: hidden;\n      }\n\n      .scenario-card.optimistic {\n        border-color: rgba(34, 197, 94, 0.4);\n      }\n\n      .scenario-card.realistic {\n        border-color: rgba(99, 102, 241, 0.4);\n      }\n\n      .scenario-card.challenging {\n        border-color: rgba(239, 68, 68, 0.4);\n      }\n\n      .scenario-card:hover {\n        transform: translateY(-4px);\n        box-shadow: 0 8px 25px rgba(0, 0, 0, 0.2);\n      }\n\n      .scenario-header {\n        display: flex;\n        align-items: center;\n        gap: 0.75rem;\n        margin-bottom: 1rem;\n      }\n\n      .scenario-icon {\n        font-size: 1.5rem;\n      }\n\n      .scenario-title {\n        font-weight: 600;\n        font-size: 1.125rem;\n      }\n\n      .scenario-probability {\n        margin-left: auto;\n        background: rgba(99, 102, 241, 0.2);\n        color: #c084fc;\n        padding: 0.25rem 0.75rem;\n        border-radius: 1rem;\n        font-size: 0.75rem;\n        font-weight: 600;\n      }\n\n      .scenario-timeline {\n        margin-bottom: 1rem;\n      }\n\n      .timeline-item {\n        display: flex;\n        align-items: center;\n        gap: 0.75rem;\n        margin-bottom: 0.5rem;\n        padding: 0.5rem;\n        background: rgba(51, 65, 85, 0.3);\n        border-radius: 0.5rem;\n      }\n\n      .timeline-timeframe {\n        font-size: 0.75rem;\n        color: #94a3b8;\n        min-width: 80px;\n      }\n\n      .timeline-description {\n        font-size: 0.875rem;\n        color: #cbd5e1;\n      }\n\n      .loading-indicator {\n        text-align: center;\n        padding: 3rem;\n        color: #ffffff;\n      }\n\n      .iching-spinner {\n        width: 60px;\n        height: 60px;\n        border: 4px solid rgba(99, 102, 241, 0.2);\n        border-top: 4px solid #6366f1;\n        border-radius: 50%;\n        animation: spin 1s linear infinite;\n        margin: 0 auto 1rem;\n      }\n\n      @keyframes spin {\n        to { transform: rotate(360deg); }\n      }\n\n      @media (max-width: 768px) {\n        .situation-analysis {\n          grid-template-columns: 1fr;\n        }\n        \n        .transformation-visual {\n          flex-direction: column;\n          gap: 1.5rem;\n        }\n        \n        .scenarios-container {\n          grid-template-columns: 1fr;\n        }\n      }\n    ",document.head.appendChild(n)}displaySituationAnalysis(n){console.log("üé® [DEBUG] IChingMetaphorDisplay.displaySituationAnalysis called"),console.log("üé® [DEBUG] Analysis result received:",{hasHexagram:!!n?.hexagram,hasYao:!!n?.yao,hexagramName:n?.hexagram?.name,confidence:n?.confidence}),this.currentDisplay=n,this.updateHexagramDisplay(n.hexagram,n.yao),this.updateSituationDisplay(n.analysis),this.setupThemeSelection(),this.animateEntry()}updateHexagramDisplay(n,e){console.log("üé® [DEBUG] updateHexagramDisplay called with:",{hexagramName:n?.name,yaoName:e?.name,yaoPosition:e?.position});const t=this.container.querySelector(".hexagram-visual"),i=this.container.querySelector(".hexagram-name"),a=this.container.querySelector(".hexagram-description"),r=n?.name||"‰πæÁÇ∫Â§©",o=n?.symbol||"‚ò∞‚ò∞",s=e?.name||"Âàù",l=e?.description||"Áâ©‰∫ã„ÅÆÂßã„Åæ„Çä„ÅÆÊôÇ";console.log("üé® [DEBUG] Safe values:",{safehexagramName:r,safeHexagramSymbol:o,safeYaoName:s,safeYaoDescription:l}),t&&(t.textContent=o),i&&(i.textContent=`${r} - ${s}Êñá`,console.log("üé® [DEBUG] Hexagram name set to:",i.textContent)),a&&(a.textContent=l)}updateSituationDisplay(n){const e=this.container.querySelector(".situation-content");if(e){const t=n.metaphor,i=n.currentTheme;e.innerHTML=`\n        <div class="metaphor-section">\n          <h5 style="margin-bottom: 0.5rem; color: #c084fc;">ÁèæÂú®„ÅÆ„É°„Çø„Éï„Ç°„Éº</h5>\n          <p style="margin-bottom: 1rem;">${t.situation||t.primary}</p>\n        </div>\n        \n        <div class="theme-section">\n          <h5 style="margin-bottom: 0.5rem; color: #6366f1;">ÁèæÂú®„ÅÆ„ÉÜ„Éº„Éû</h5>\n          <p style="margin-bottom: 0.5rem; font-weight: 600;">${i.theme}</p>\n          <p style="font-size: 0.875rem; color: #94a3b8;">${i.description}</p>\n        </div>\n        \n        <div class="keywords-section" style="margin-top: 1rem;">\n          <h5 style="margin-bottom: 0.5rem; color: #22c55e;">„Ç≠„Éº„ÉØ„Éº„Éâ</h5>\n          <div style="display: flex; flex-wrap: wrap; gap: 0.5rem;">\n            ${n.keywords.slice(0,5).map(n=>`<span style="background: rgba(34, 197, 94, 0.2); color: #22c55e; padding: 0.25rem 0.5rem; border-radius: 0.25rem; font-size: 0.75rem;">${n.word}</span>`).join("")}\n          </div>\n        </div>\n      `}}setupThemeSelection(){const n=this.container.querySelectorAll(".theme-option");console.log("üéØ [DEBUG] Setting up theme selection, found options:",n.length),n.forEach(e=>{e.addEventListener("click",t=>{const i=e.dataset.choice;n.forEach(n=>n.classList.remove("selected")),e.classList.add("selected"),this.animateThemeSelection(e,i),setTimeout(()=>{this.triggerTransformation(i)},300)})})}animateThemeSelection(n,e){n.style.transform="scale(0.95)",setTimeout(()=>{n.style.transform="scale(1.02)",setTimeout(()=>{n.style.transform="scale(1)"},150)},100)}triggerTransformation(n){console.log("üîÑ Triggering transformation for choice:",n),this.showLoading();const e=new CustomEvent("ichingTransformation",{detail:{currentSituation:this.currentDisplay,choice:n}});this.container.dispatchEvent(e)}displayTransformation(n){console.log("üé® Displaying transformation result:",n),this.hideLoading();this.container.querySelector(".transformation-display").style.display="block",this.updateTransformationVisual(n),this.updateTransformationMetaphor(n),setTimeout(()=>{this.displayScenarios(n.scenarios)},1e3),this.animateTransformation()}updateTransformationVisual(n){const e=this.container.querySelector(".yao-visual.old"),t=this.container.querySelector(".yao-visual.new"),i=this.container.querySelector(".transformation-type"),a=this.container.querySelector(".arrow-visual");e&&(e.textContent=this.currentDisplay.yao.name),t&&(t.textContent=n.newSituation.yao.name),i&&(i.textContent=this.getTransformationTypeLabel(n.choice)),a&&(a.innerHTML=`<span>${n.transformation.metaphor.symbol}</span>`)}updateTransformationMetaphor(n){const e=this.container.querySelector(".transformation-metaphor");if(e){const t=n.transformation.metaphor,i=n.comparison;e.innerHTML=`\n        <h5 style="margin-bottom: 1rem; font-size: 1.125rem; color: #c084fc;">Â§âÂåñ„ÅÆ„É°„Çø„Éï„Ç°„Éº</h5>\n        <p style="margin-bottom: 1rem; font-size: 1rem; font-weight: 600; color: #ffffff;">\n          ${t.transformation}\n        </p>\n        <div style="display: grid; grid-template-columns: repeat(auto-fit, minmax(200px, 1fr)); gap: 1rem; margin-top: 1rem;">\n          <div style="text-align: center;">\n            <div style="color: #22c55e; font-weight: 600;">ÊîπÂñÑÂ∫¶</div>\n            <div style="font-size: 1.5rem; margin: 0.5rem 0;">\n              ${i.improvement>0?"+":""}${Math.round(100*i.improvement)}%\n            </div>\n          </div>\n          <div style="text-align: center;">\n            <div style="color: #6366f1; font-weight: 600;">Á¢∫‰ø°Â∫¶</div>\n            <div style="font-size: 1.5rem; margin: 0.5rem 0;">\n              ${Math.round(100*n.transformation.confidence)}%\n            </div>\n          </div>\n        </div>\n        <div style="margin-top: 1rem; padding: 1rem; background: rgba(30, 41, 59, 0.5); border-radius: 0.5rem;">\n          <h6 style="color: #94a3b8; margin-bottom: 0.5rem;">‰∏ª„Å™Â§âÂåñ</h6>\n          <ul style="list-style: none; padding: 0; margin: 0;">\n            ${i.changes.map(n=>`<li style="margin-bottom: 0.25rem; color: #cbd5e1;">‚Ä¢ ${n}</li>`).join("")}\n          </ul>\n        </div>\n      `}}displayScenarios(n){if(!n||0===n.length)return void console.warn("‚ö†Ô∏è No scenarios data available for display");const e=this.container.querySelector(".scenarios-display"),t=this.container.querySelector(".scenarios-container");if(e.style.display="block",t){t.innerHTML=n.map(n=>this.createScenarioCard(n)).join("");t.querySelectorAll(".scenario-card").forEach((n,e)=>{n.style.opacity="0",n.style.transform="translateY(20px)",setTimeout(()=>{n.style.transition="all 0.5s ease",n.style.opacity="1",n.style.transform="translateY(0)"},200*e)})}}createScenarioCard(n){return`\n      <div class="scenario-card ${n.type}">\n        <div class="scenario-header">\n          <span class="scenario-icon">${n.icon}</span>\n          <span class="scenario-title">${n.title}</span>\n          <span class="scenario-probability">${Math.round(100*n.probability)}%</span>\n        </div>\n        \n        <div class="scenario-timeline">\n          ${n.timeline.slice(0,3).map(n=>`\n            <div class="timeline-item">\n              <span class="timeline-timeframe">${n.timeframe}</span>\n              <span class="timeline-description">${n.description}</span>\n            </div>\n          `).join("")}\n        </div>\n        \n        ${n.outcomes?`\n          <div class="scenario-outcomes">\n            <h6 style="color: #94a3b8; margin-bottom: 0.5rem; font-size: 0.875rem;">‰∫àÊÉ≥„Åï„Çå„ÇãÁµêÊûú</h6>\n            ${n.outcomes.slice(0,2).map(n=>`\n              <div style="margin-bottom: 0.5rem; font-size: 0.875rem; color: #cbd5e1;">\n                ‚Ä¢ ${n.title}\n              </div>\n            `).join("")}\n          </div>\n        `:""}\n      </div>\n    `}animateEntry(){[this.container.querySelector(".metaphor-header"),this.container.querySelector(".current-situation"),this.container.querySelector(".theme-selection")].forEach((n,e)=>{n&&(n.style.opacity="0",n.style.transform="translateY(30px)",setTimeout(()=>{n.style.transition="all 0.6s ease",n.style.opacity="1",n.style.transform="translateY(0)"},200*e))})}animateTransformation(){const n=this.container.querySelector(".transformation-display");n&&(n.style.opacity="0",n.style.transform="scale(0.9)",setTimeout(()=>{n.style.transition="all 0.8s ease",n.style.opacity="1",n.style.transform="scale(1)"},100))}showLoading(){const n=this.container.querySelector(".loading-indicator");n&&(n.style.display="block",n.style.opacity="0",setTimeout(()=>{n.style.transition="opacity 0.3s ease",n.style.opacity="1"},50))}hideLoading(){const n=this.container.querySelector(".loading-indicator");n&&(n.style.opacity="0",setTimeout(()=>{n.style.display="none"},300))}getTransformationTypeLabel(n){return{follow:"ÂæìÈ†Ü",change:"Â§âÈù©",create:"ÂâµÈÄ†"}[n]||"Â§âÂåñ"}reset(){this.currentDisplay=null;this.container.querySelectorAll(".transformation-display, .scenarios-display").forEach(n=>n.style.display="none");const n=this.container.querySelector(".theme-option.selected");n&&n.classList.remove("selected")}}window.IChingMetaphorDisplay=IChingMetaphorDisplay;