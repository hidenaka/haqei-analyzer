class PerformanceOptimizer{constructor(){this.config={enableCache:!0,cacheMaxSize:50,cacheTTL:3e5,enableLazyLoading:!0,enableDebounce:!0,debounceDelay:150,enableThrottle:!0,throttleDelay:100,enableWebWorker:"undefined"!=typeof Worker,enableRequestAnimationFrame:!0,batchRenderSize:10},this.cache=new Map,this.cacheTimestamps=new Map,this.metrics={renderTime:[],calculationTime:[],memoryUsage:[],frameRate:[]},this.debounceTimers=new Map,this.throttleTimestamps=new Map,this.config.enableWebWorker&&this.initializeWebWorker(),this.startMemoryMonitoring()}optimizeCalculation(e,t,...r){const i=performance.now();if(this.config.enableCache){const e=this.getFromCache(t);if(null!==e)return this.recordMetric("calculationTime",0),e}const a=e(...r);this.config.enableCache&&this.saveToCache(t,a);const n=performance.now();return this.recordMetric("calculationTime",n-i),a}optimizeRender(e,t,r){const i=performance.now();if(this.config.enableRequestAnimationFrame)return new Promise(a=>{requestAnimationFrame(()=>{this.batchRender(e,t,r);const n=performance.now();this.recordMetric("renderTime",n-i),a()})});{this.batchRender(e,t,r);const a=performance.now();this.recordMetric("renderTime",a-i)}}batchRender(e,t,r){const i=document.createDocumentFragment(),a=document.createElement("div");i.appendChild(a),e(a,r),t.innerHTML="",t.appendChild(a.firstChild||a)}debounce(e,t,r=null){if(!this.config.enableDebounce)return e;const i=r||this.config.debounceDelay;return(...r)=>{this.debounceTimers.has(t)&&clearTimeout(this.debounceTimers.get(t));const a=setTimeout(()=>{e(...r),this.debounceTimers.delete(t)},i);this.debounceTimers.set(t,a)}}throttle(e,t,r=null){if(!this.config.enableThrottle)return e;const i=r||this.config.throttleDelay;return(...r)=>{const a=Date.now();a-(this.throttleTimestamps.get(t)||0)>=i&&(e(...r),this.throttleTimestamps.set(t,a))}}lazyLoad(e,t){return this.config.enableLazyLoading?new Promise(r=>{const i=new IntersectionObserver(t=>{t.forEach(t=>{if(t.isIntersecting){const t=e();i.disconnect(),r(t)}})}),a=document.createElement("div");a.id=`lazy-${t}`,document.body.appendChild(a),i.observe(a),setTimeout(()=>{i.disconnect(),a.remove(),r(e())},3e3)}):e()}initializeWebWorker(){const e=new Blob(["\n            self.addEventListener('message', function(e) {\n                const { type, data } = e.data;\n                \n                switch(type) {\n                    case 'calculate':\n                        const result = performCalculation(data);\n                        self.postMessage({ type: 'result', data: result });\n                        break;\n                        \n                    case 'optimize':\n                        const optimized = optimizeData(data);\n                        self.postMessage({ type: 'optimized', data: optimized });\n                        break;\n                }\n            });\n            \n            function performCalculation(data) {\n                // 重い計算処理\n                let result = 0;\n                for (let i = 0; i < data.iterations; i++) {\n                    result += Math.sqrt(i) * Math.sin(i);\n                }\n                return result;\n            }\n            \n            function optimizeData(data) {\n                // データ最適化処理\n                return data.map(item => ({\n                    ...item,\n                    optimized: true,\n                    processedAt: Date.now()\n                }));\n            }\n        "],{type:"application/javascript"}),t=URL.createObjectURL(e);try{this.worker=new Worker(t),this.worker.addEventListener("message",e=>{this.handleWorkerMessage(e.data)}),this.worker.addEventListener("error",e=>{console.error("Worker error:",e),this.config.enableWebWorker=!1})}catch(r){console.warn("Web Worker not available:",r),this.config.enableWebWorker=!1}}handleWorkerMessage(e){const{type:t,data:r}=e;switch(t){case"result":this.workerCallbacks.get("calculate")?.(r);break;case"optimized":this.workerCallbacks.get("optimize")?.(r)}}calculateInWorker(e){return this.config.enableWebWorker&&this.worker?new Promise(t=>{this.workerCallbacks||(this.workerCallbacks=new Map),this.workerCallbacks.set("calculate",t),this.worker.postMessage({type:"calculate",data:e})}):Promise.resolve(this.performCalculationFallback(e))}getFromCache(e){if(!this.cache.has(e))return null;const t=this.cacheTimestamps.get(e);return Date.now()-t>this.config.cacheTTL?(this.cache.delete(e),this.cacheTimestamps.delete(e),null):this.cache.get(e)}saveToCache(e,t){if(this.cache.size>=this.config.cacheMaxSize){const e=this.findOldestCacheEntry();e&&(this.cache.delete(e),this.cacheTimestamps.delete(e))}this.cache.set(e,t),this.cacheTimestamps.set(e,Date.now())}findOldestCacheEntry(){let e=null,t=1/0;for(const[r,i]of this.cacheTimestamps.entries())i<t&&(t=i,e=r);return e}startMemoryMonitoring(){performance.memory&&setInterval(()=>{const e={used:performance.memory.usedJSHeapSize,total:performance.memory.totalJSHeapSize,limit:performance.memory.jsHeapSizeLimit,usage:performance.memory.usedJSHeapSize/performance.memory.jsHeapSizeLimit*100};this.recordMetric("memoryUsage",e.usage),e.usage>90&&this.performMemoryCleanup()},5e3)}performMemoryCleanup(){const e=Math.floor(this.cache.size/2),t=Array.from(this.cache.keys());for(let r=0;r<e;r++)this.cache.delete(t[r]),this.cacheTimestamps.delete(t[r]);Object.keys(this.metrics).forEach(e=>{this.metrics[e].length>100&&(this.metrics[e]=this.metrics[e].slice(-50))}),"undefined"!=typeof global&&global.gc&&global.gc()}measureFrameRate(){let e=performance.now(),t=0,r=0;const measure=()=>{t++;const i=performance.now();i>=e+1e3&&(r=Math.round(1e3*t/(i-e)),this.recordMetric("frameRate",r),t=0,e=i),requestAnimationFrame(measure)};requestAnimationFrame(measure)}recordMetric(e,t){this.metrics[e]||(this.metrics[e]=[]),this.metrics[e].push({value:t,timestamp:Date.now()}),this.metrics[e].length>100&&this.metrics[e].shift()}generateReport(){const e={timestamp:(new Date).toISOString(),averages:{},current:{},recommendations:[]};return Object.keys(this.metrics).forEach(t=>{const r=this.metrics[t].map(e=>"number"==typeof e.value?e.value:e.value.usage||0);r.length>0&&(e.averages[t]=r.reduce((e,t)=>e+t,0)/r.length,e.current[t]=r[r.length-1])}),e.averages.renderTime>16&&e.recommendations.push("レンダリング時間が16msを超えています。最適化を検討してください。"),e.current.memoryUsage>80&&e.recommendations.push("メモリ使用率が高くなっています。不要なデータをクリアしてください。"),e.averages.frameRate<30&&e.recommendations.push("フレームレートが低下しています。アニメーションを簡略化してください。"),e}adjustOptimizationSettings(e){"low"===e?(this.config.enableCache=!0,this.config.cacheMaxSize=100,this.config.debounceDelay=300,this.config.throttleDelay=200,this.config.batchRenderSize=5):"high"===e&&(this.config.enableCache=!1,this.config.debounceDelay=50,this.config.throttleDelay=50,this.config.batchRenderSize=20)}cleanup(){for(const e of this.debounceTimers.values())clearTimeout(e);this.debounceTimers.clear(),this.worker&&this.worker.terminate(),this.cache.clear(),this.cacheTimestamps.clear(),this.metrics={renderTime:[],calculationTime:[],memoryUsage:[],frameRate:[]}}}const performanceOptimizer=new PerformanceOptimizer;"undefined"!=typeof module&&module.exports&&(module.exports={PerformanceOptimizer:PerformanceOptimizer,performanceOptimizer:performanceOptimizer});