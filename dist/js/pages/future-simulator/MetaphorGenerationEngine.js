class MetaphorGenerationEngine{constructor(){this.initialized=!1,this.metaphorDatabase=null,this.generationRules=null,this.contextAnalyzer=null,this.integrativeHarmony={wisdom_simplicity:!0,clarity_depth:!0,practical_profound:!0,accessible_mystery:!0},this.engineOS=null,this.interfaceOS=null,this.safeMode=null,this.init()}async init(){console.log("🎨 [MetaphorGenerationEngine] 初期化開始 - 易経メタファーシステム");try{this.initializeTripleOS(),await this.initializeMetaphorDatabase(),await this.setupGenerationRules(),await this.initializeContextAnalyzer(),this.initialized=!0,console.log("✅ [MetaphorGenerationEngine] メタファーシステム準備完了")}catch(e){console.error("❌ [MetaphorGenerationEngine] 初期化エラー:",e),this.activateSafeMode()}}initializeTripleOS(){console.log("🔧 [MetaphorGenerationEngine] Triple OS Architecture 初期化"),this.engineOS={name:"Metaphor Engine OS",version:"1.0.0",philosophy:"haqei-creative",async generateMetaphor(e,t={}){try{const a=this.extractEssenceElements(e),n=await this.generateCandidates(a,t),i=this.selectBestMetaphor(n,e);return{metaphor:await this.elaborateMetaphor(i,e),essence:a,confidence:this.calculateConfidence(i,e),philosophy:"haqei-metaphor"}}catch(a){return console.warn("⚠️ メタファー生成エラー - 基本メタファー使用:",a),this.generateBasicMetaphor(e)}},extractEssenceElements(e){return{energy:this.analyzeEnergy(e),movement:this.analyzeMovement(e),relationships:this.analyzeRelationships(e),transformation:this.analyzeTransformation(e),timeQuality:this.analyzeTimeQuality(e),spaceQuality:this.analyzeSpaceQuality(e)}},analyzeEnergy(e){const t=e.keywords||[];let a="balanced",n=.5;const i=["激しい","強い","急激","爆発","燃える","熱い"],r=["静か","穏やか","緩やか","冷静","落ち着く"],s=["動く","変化","流れ","進む","発展"],o=["止まる","安定","維持","保つ","固定"],c=t.filter(e=>i.some(t=>e.includes(t))).length,h=t.filter(e=>r.some(t=>e.includes(t))).length,l=t.filter(e=>s.some(t=>e.includes(t))).length,p=t.filter(e=>o.some(t=>e.includes(t))).length;return c>h?(a=l>p?"high-dynamic":"high-static",n=Math.min(.7+.1*c,1)):h>c?(a=p>l?"low-static":"low-dynamic",n=Math.max(.3-.1*h,.1)):a="balanced",{type:a,intensity:n}},analyzeMovement(e){const t=e.keywords||[],a={};Object.entries({spiral:["螺旋","巻く","回る","循環"],linear:["直進","一直線","真っ直ぐ","一方向"],wave:["波","起伏","上下","波動"],stillness:["静止","動かない","固定","変わらない"]}).forEach(([e,n])=>{a[e]=t.filter(e=>n.some(t=>e.includes(t))).length});const n=Object.entries(a).reduce((e,[t,a])=>a>e.count?{pattern:t,count:a}:e,{pattern:"balanced",count:0});return{type:n.pattern,intensity:n.count/t.length,direction:this.analyzeDirection(t)}},analyzeDirection(e){const t={};return Object.entries({upward:["上","昇る","向上","成長","発展"],downward:["下","降りる","低下","減少","沈む"],inward:["内","中心","集中","内省","深める"],outward:["外","拡大","広がる","外向","展開"]}).forEach(([a,n])=>{t[a]=e.filter(e=>n.some(t=>e.includes(t))).length}),Object.entries(t).reduce((e,[t,a])=>a>e.count?{dir:t,count:a}:e,{dir:"neutral",count:0}).dir},analyzeRelationships(e){const t=e.keywords||[],a={};return Object.entries({harmony:["調和","協力","合意","一致","協調"],conflict:["対立","衝突","争い","競争","摩擦"],distance:["離れる","距離","孤立","分離","独立"],closeness:["近づく","親密","結合","統合","融合"]}).forEach(([e,n])=>{a[e]=t.filter(e=>n.some(t=>e.includes(t))).length/t.length}),a},analyzeTransformation(e){const t=e.keywords||[],a={};Object.entries({gradual:["徐々に","ゆっくり","段階的","漸進"],sudden:["突然","急に","一気に","瞬間"],cyclical:["循環","繰り返し","サイクル","周期"],irreversible:["不可逆","戻らない","永続","根本"]}).forEach(([e,n])=>{a[e]=t.filter(e=>n.some(t=>e.includes(t))).length});const n=Object.entries(a).reduce((e,[t,a])=>a>e.count?{type:t,count:a}:e,{type:"gradual",count:0});return{type:n.type,intensity:n.count/t.length,direction:this.getTransformationDirection(e)}},getTransformationDirection(e){const t=["良く","改善","成長","発展","向上"],a=["悪く","悪化","衰退","低下","後退"],n=e.keywords||[],i=n.filter(e=>t.some(t=>e.includes(t))).length,r=n.filter(e=>a.some(t=>e.includes(t))).length;return i>r?"positive":r>i?"negative":"neutral"},analyzeTimeQuality(e){const t=e.keywords||[],a={};return Object.entries({kairos:["機会","タイミング","時機","好機"],chronos:["期限","スケジュール","時間","期間"],eternal:["永遠","無限","恒久","不変"],momentary:["瞬間","一時","短期","刹那"]}).forEach(([e,n])=>{a[e]=t.filter(e=>n.some(t=>e.includes(t))).length}),a},analyzeSpaceQuality(e){const t=e.keywords||[],a={};return Object.entries({expansive:["広い","大きい","拡大","無限"],intimate:["狭い","小さい","密接","親密"],structured:["整理","秩序","構造","体系"],fluid:["流動","柔軟","変化","適応"]}).forEach(([e,n])=>{a[e]=t.filter(e=>n.some(t=>e.includes(t))).length}),a},async generateCandidates(e,t){const a=[];return a.push(...this.generateNatureMetaphors(e)),a.push(...this.generateHumanActivityMetaphors(e)),a.push(...this.generateAbstractMetaphors(e)),a.push(...this.generateIChingMetaphors(e)),a},generateNatureMetaphors(e){const t=[],a=e.energy;"high-dynamic"===a.type&&(t.push({category:"nature",type:"weather",metaphor:"嵐の中を進む船",essence:"turbulent_progress",imagery:"激しい風と波の中でも目的地に向かう",wisdom:"困難な状況も進歩の機会となる"}),t.push({category:"nature",type:"fire",metaphor:"山火事から生まれる新緑",essence:"destructive_renewal",imagery:"古いものが燃え尽きた後に新しい生命が芽吹く",wisdom:"破壊と創造は表裏一体"})),"low-static"===a.type&&(t.push({category:"nature",type:"earth",metaphor:"深い地層で育つ鉱物",essence:"slow_formation",imagery:"長い時間をかけて美しい結晶が形成される",wisdom:"時間をかけることで真の価値が生まれる"}),t.push({category:"nature",type:"water",metaphor:"静かな深い湖",essence:"profound_stillness",imagery:"表面は穏やかでも深部には豊かな生命がある",wisdom:"静寂の中に無限の可能性が宿る"}));const n=e.movement;return"spiral"===n.type&&t.push({category:"nature",type:"cosmic",metaphor:"銀河の螺旋腕",essence:"cosmic_evolution",imagery:"巨大な渦の中で星々が生まれ育つ",wisdom:"成長は螺旋状に進む"}),"wave"===n.type&&t.push({category:"nature",type:"ocean",metaphor:"潮の満ち引き",essence:"natural_rhythm",imagery:"絶え間ない波の動きが海岸を形作る",wisdom:"自然のリズムに従うことの重要性"}),t},generateHumanActivityMetaphors(e){const t=[],a=e.relationships;a.harmony>.6&&t.push({category:"human",type:"music",metaphor:"オーケストラの演奏",essence:"harmonious_cooperation",imagery:"異なる楽器が一つの美しい音楽を創造する",wisdom:"調和は多様性の中から生まれる"}),a.conflict>.6&&t.push({category:"human",type:"craft",metaphor:"鍛冶屋の鉄打ち",essence:"forging_through_conflict",imagery:"激しい打撃によって金属が美しい形に変わる",wisdom:"対立は成長の機会"});const n=e.transformation;return"gradual"===n.type&&t.push({category:"human",type:"art",metaphor:"陶芸家の作品づくり",essence:"patient_shaping",imagery:"ろくろの上で少しずつ形を整えていく",wisdom:"忍耐強い努力が美を生み出す"}),"sudden"===n.type&&t.push({category:"human",type:"discovery",metaphor:"発明家のひらめき",essence:"breakthrough_moment",imagery:"長い試行錯誤の末に突然解決策が見える",wisdom:"準備された心に洞察が訪れる"}),t},generateAbstractMetaphors(e){const t=[],a=e.timeQuality;a.kairos>a.chronos&&t.push({category:"abstract",type:"opportunity",metaphor:"扉が開く瞬間",essence:"perfect_timing",imagery:"無数の扉の中で一つだけが光って開かれる",wisdom:"タイミングがすべてを決める"}),a.eternal>.3&&t.push({category:"abstract",type:"cycle",metaphor:"永遠に回る円環",essence:"eternal_return",imagery:"始まりと終わりが一つになった完全な円",wisdom:"すべては永遠の循環の中にある"});const n=e.spaceQuality;return n.expansive>n.intimate&&t.push({category:"abstract",type:"horizon",metaphor:"地平線の彼方",essence:"infinite_possibility",imagery:"どこまでも続く広大な景色",wisdom:"可能性は無限に広がっている"}),n.intimate>n.expansive&&t.push({category:"abstract",type:"essence",metaphor:"種の中の大樹",essence:"concentrated_potential",imagery:"小さな種に巨大な木の可能性が込められている",wisdom:"真の力は本質に集約される"}),t},generateIChingMetaphors(e){const t=[];return t.push({category:"iching",type:"yinyang",metaphor:"陰陽の太極図",essence:"dynamic_balance",imagery:"対立する力が完璧な調和を保ちながら回転する",wisdom:"矛盾する要素の統合が真の調和を生む"}),"high-dynamic"===e.energy.type&&t.push({category:"iching",type:"five_elements",metaphor:"火が木を助け土を生む",essence:"supportive_transformation",imagery:"要素同士が互いを支え合いながら変化する",wisdom:"相互支援により大きな力が生まれる"}),t.push({category:"iching",type:"bagua",metaphor:"八方位の羅針盤",essence:"directional_wisdom",imagery:"あらゆる方向への可能性を示す神聖な図形",wisdom:"すべての方向に道がある"}),t},selectBestMetaphor(e,t){if(0===e.length)return this.getDefaultMetaphor();return e.map(e=>({...e,score:this.scoreMetaphor(e,t)})).reduce((e,t)=>t.score>e.score?t:e)},scoreMetaphor(e,t){let a=.5;"nature"===e.category&&t.naturalAffinity>.6&&(a+=.2),"iching"===e.category&&t.philosophicalDepth>.7&&(a+=.3);const n=t.keywords||[],i=e.imagery.split(/\s+/);return a+=.1*n.filter(e=>i.some(t=>t.includes(e)||e.includes(t))).length,(e.essence.includes("integration")||e.essence.includes("harmony"))&&(a+=.15),Math.min(a,1)},async elaborateMetaphor(e,t){return{...e,applicationToSituation:this.applyToSituation(e,t),actionGuidance:this.generateActionGuidance(e,t),temporalUnfolding:this.generateTemporalUnfolding(e),deepMessage:this.extractDeepMessage(e,t),alternativePerspectives:this.generateAlternativePerspectives(e)}},applyToSituation(e,t){return{currentPhase:this.identifyCurrentPhase(e,t),keyElements:this.mapKeyElements(e,t),dynamics:this.describeDynamics(e,t)}},generateActionGuidance(e,t){const a=[];switch(e.essence){case"turbulent_progress":a.push("嵐の中でも舵を握り続ける"),a.push("一時的な避難港を見つける"),a.push("天候の変化を注意深く観察する");break;case"slow_formation":a.push("焦らずに時間をかける"),a.push("小さな変化を大切にする"),a.push("内側での成長に注目する");break;case"harmonious_cooperation":a.push("他者との調和を重視する"),a.push("全体の利益を考える"),a.push("自分の役割を明確にする");break;default:a.push("メタファーの智慧を日常に活かす"),a.push("象徴的意味を実践的行動に変換する")}return a},generateTemporalUnfolding:e=>({past:`${e.metaphor}が形成された背景`,present:`現在の${e.metaphor}の状態`,future:`${e.metaphor}が向かう方向`}),extractDeepMessage:(e,t)=>({turbulent_progress:"困難な状況こそが真の成長をもたらす",slow_formation:"時間は最も偉大な創造者である",harmonious_cooperation:"個の完成は全体の調和の中にある",dynamic_balance:"調和の統合こそが真の智慧"}[e.essence]||`${e.metaphor}は、生きることの根源的意味を教えてくれる`),generateAlternativePerspectives:e=>[`${e.metaphor}を逆の角度から見ると...`,`もし${e.metaphor}が人間だったら...`,`${e.metaphor}の隠れた側面は...`],generateBasicMetaphor:e=>({category:"basic",type:"journey",metaphor:"人生の旅路",essence:"universal_journey",imagery:"山あり谷ありの道を一歩ずつ進んでいく",wisdom:"すべての体験が成長の糧となる",confidence:.5,philosophy:"haqei-basic"}),getDefaultMetaphor:()=>({category:"default",type:"river",metaphor:"大河の流れ",essence:"natural_flow",imagery:"源流から海へと向かう壮大な旅",wisdom:"自然の流れに身を任せることの大切さ"})},this.interfaceOS={name:"Metaphor Interface OS",formatMetaphorResult(e){return{display:{title:e.metaphor.metaphor,category:this.formatCategory(e.metaphor.category),imagery:e.metaphor.imagery,wisdom:e.metaphor.wisdom,essence:e.metaphor.essence,elaboration:this.formatElaboration(e.metaphor)},confidence:e.confidence,philosophy:e.philosophy}},formatCategory:e=>({nature:"🌿 自然界",human:"👥 人間活動",abstract:"🎭 抽象概念",iching:"☯️ 易経",basic:"🛤️ 基本",default:"🌊 デフォルト"}[e]||e),formatElaboration:e=>e.applicationToSituation?{application:{title:"現在の状況への適用",content:e.applicationToSituation},guidance:{title:"行動指針",actions:e.actionGuidance||[]},temporal:{title:"時間的展開",content:e.temporalUnfolding},deepMessage:{title:"深層メッセージ",content:e.deepMessage}}:null},this.safeMode={name:"Metaphor Safe Mode OS",active:!1,activate(){return console.log("🛡️ [MetaphorGenerationEngine] Safe Mode 起動"),this.active=!0,{basicMetaphors:!0,fullElaboration:!1,philosophy:"haqei-safe"}},generateSafeMetaphor(e){const t=[{metaphor:"季節の変化",imagery:"春夏秋冬の自然なサイクル",wisdom:"すべてには適切な時がある"},{metaphor:"木の成長",imagery:"種から大樹へと育つ過程",wisdom:"根を深く張ることの大切さ"},{metaphor:"川の流れ",imagery:"山から海への水の旅",wisdom:"障害を乗り越えて進む力"}];return{metaphor:t[Math.floor(Math.random()*t.length)],confidence:.6,philosophy:"haqei-safe"}}},console.log("✅ [MetaphorGenerationEngine] Triple OS Architecture 準備完了")}async initializeMetaphorDatabase(){console.log("📚 [MetaphorGenerationEngine] メタファーデータベース初期化"),this.metaphorDatabase={naturalElements:this.createNaturalElementsDB(),humanActivities:this.createHumanActivitiesDB(),abstractConcepts:this.createAbstractConceptsDB(),ichingSymbols:this.createIChingSymbolsDB(),culturalArchetypes:this.createCulturalArchetypesDB()}}createNaturalElementsDB(){return{weather:["嵐","雨","虹","風","雪","雷","霧","雲"],water:["川","海","湖","滝","泉","波","潮","氷"],earth:["山","谷","岩","土","砂","洞窟","丘","平原"],fire:["炎","太陽","星","稲妻","光","熱","燃焼","灯"],plants:["木","花","草","森","葉","根","種","実"],animals:["鳥","魚","獣","虫","蝶","鷹","亀","龍"]}}createHumanActivitiesDB(){return{crafts:["陶芸","織物","鍛冶","木工","絵画","彫刻"],music:["演奏","合唱","作曲","ハーモニー","リズム","メロディー"],sports:["登山","航海","競走","格闘","舞踊","体操"],learning:["読書","研究","発見","実験","教育","瞑想"],social:["会話","協力","競争","支援","指導","従順"]}}createAbstractConceptsDB(){return{time:["永遠","瞬間","循環","線形","過去","未来","現在"],space:["無限","境界","中心","周縁","上下","内外","遠近"],relation:["統一","分離","調和","対立","包含","排除","平衡"],change:["進化","革命","成長","衰退","変身","復活","循環"]}}createIChingSymbolsDB(){return{trigrams:["乾","坤","震","巽","坎","離","艮","兌"],concepts:["陰陽","太極","無極","道","德","気","理","象"],patterns:["螺旋","円環","波動","脈動","共鳴","反響","循環"]}}createCulturalArchetypesDB(){return{roles:["賢者","戦士","治療者","創造者","案内者","保護者"],journeys:["冒険","帰還","探求","試練","変身","覚醒"],relationships:["師弟","友情","恋愛","親子","兄弟","敵対"]}}async setupGenerationRules(){console.log("📋 [MetaphorGenerationEngine] 生成ルール設定"),this.generationRules={contextMapping:{emotional:{anger:["fire","thunder","storm"],sadness:["water","autumn","descent"],joy:["light","spring","flight"],fear:["darkness","cave","maze"],love:["warmth","garden","embrace"]},situational:{beginning:["dawn","seed","birth"],progress:["journey","growth","building"],obstacle:["mountain","storm","labyrinth"],completion:["harvest","sunset","circle"],transformation:["butterfly","fire","alchemy"]},relational:{harmony:["orchestra","dance","ecosystem"],conflict:["battle","forge","earthquake"],separation:["island","winter","exile"],union:["river_meeting","wedding","synthesis"]}},elaborationPatterns:{temporal:["past_formation","present_state","future_direction"],spatial:["center_essence","boundary_limits","surrounding_context"],dynamic:["static_foundation","moving_forces","transformation_potential"]},wisdomExtraction:{practical:"実践的な行動指針",philosophical:"人生の深い洞察",spiritual:"魂の成長への道",social:"人間関係の智慧"}}}async initializeContextAnalyzer(){console.log("🔍 [MetaphorGenerationEngine] コンテキスト分析器初期化"),this.contextAnalyzer={analyzeEmotionalTone:e=>{const t={},a=e.keywords||[];return Object.entries({joy:["嬉しい","楽しい","幸せ","喜び"],sadness:["悲しい","寂しい","辛い","苦しい"],anger:["怒り","腹立つ","憤り","イライラ"],fear:["不安","恐怖","心配","怖い"],love:["愛","好き","大切","愛情"]}).forEach(([e,n])=>{t[e]=a.filter(e=>n.some(t=>e.includes(t))).length}),t},identifyArchetype:e=>{const t={},a=e.keywords||[];return Object.entries({hero:["勇気","冒険","挑戦","戦い"],sage:["知恵","学習","理解","洞察"],caregiver:["世話","保護","支援","愛情"],creator:["創造","芸術","作品","表現"],explorer:["探求","発見","旅","未知"]}).forEach(([e,n])=>{t[e]=a.filter(e=>n.some(t=>e.includes(t))).length}),t}}}activateSafeMode(){console.log("🛡️ [MetaphorGenerationEngine] Safe Mode 起動"),this.safeMode.activate(),this.initialized=!0}async generateMetaphorForSituation(e,t={}){this.initialized||await this.init();try{if(this.safeMode.active)return this.safeMode.generateSafeMetaphor(e);const a=await this.engineOS.generateMetaphor(e,t);return this.interfaceOS.formatMetaphorResult(a)}catch(a){return console.error("❌ [MetaphorGenerationEngine] メタファー生成エラー:",a),this.safeMode.generateSafeMetaphor(e)}}getStatus(){return{initialized:this.initialized,safeModeActive:this.safeMode?.active||!1,databaseReady:!!this.metaphorDatabase,rulesReady:!!this.generationRules,analyzerReady:!!this.contextAnalyzer,philosophy:"haqei",architecture:"triple-os"}}}"undefined"!=typeof window&&(window.MetaphorGenerationEngine=new MetaphorGenerationEngine),console.log("✅ [MetaphorGenerationEngine] HaQei Philosophy Implementation Loaded");