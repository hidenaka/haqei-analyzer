console.log("🔄 DynamicKeywordGenerator Loading..."),window.DynamicKeywordGenerator={init(){console.log("🔧 DynamicKeywordGenerator initializing..."),this.setupTripleOS(),this.initializeGenerationRules(),this.loadContextDatabase(),console.log("✅ DynamicKeywordGenerator initialized successfully")},setupTripleOS(){this.engineOS={name:"Dynamic Keyword Engine OS",version:"1.0.0",philosophy:"haqei-dynamic",async generateKeywords(e,t={}){try{const n=this.analyzeInput(e),i=this.extractBaseKeywords(n),o=await this.expandKeywords(i,t),a=this.generateContextualKeywords(o,t),r=this.refineKeywords(a,n);return{original:e,base:i,expanded:o,contextual:a,final:r,metadata:{totalGenerated:r.length,expansionRatio:r.length/i.length,contextQuality:this.calculateContextQuality(t),philosophy:"haqei-dynamic"}}}catch(n){return console.warn("⚠️ Dynamic keyword generation error:",n),this.createFallbackKeywords(e)}},analyzeInput(e){return{text:e,tokens:this.tokenize(e),entities:this.extractEntities(e),intent:this.detectIntent(e),emotion:this.detectEmotion(e),complexity:this.calculateComplexity(e)}},tokenize(e){return e.replace(/[。、！？]/g," ").split(/\s+/).filter(e=>e.length>0).map(e=>({surface:e,reading:this.inferReading(e),pos:this.inferPOS(e),importance:this.calculateTokenImportance(e)}))},extractEntities(e){const t=[],n={person:/([一-龯]+)(さん|くん|ちゃん|氏|先生)/g,organization:/(会社|企業|組織|団体|部門|チーム)/g,location:/(東京|大阪|地域|場所|会場)/g,time:/(今日|明日|来週|来月|将来|過去|現在)/g,number:/(\d+|一|二|三|四|五|六|七|八|九|十)/g};for(const[i,o]of Object.entries(n)){let n;for(;null!==(n=o.exec(e));)t.push({text:n[0],type:i,position:n.index,confidence:.8})}return t},detectIntent(e){const t={question:/[？?]|どう|なぜ|いつ|どこ|だれ|なに/,request:/してください|お願い|欲しい|必要/,decision:/決める|選ぶ|判断|迷って/,future:/未来|将来|これから|予想|予測/,problem:/問題|困った|悩み|心配|不安/,goal:/目標|ゴール|達成|成功|実現/};for(const[n,i]of Object.entries(t))if(i.test(e))return n;return"general"},detectEmotion(e){const t={positive:/嬉しい|楽しい|幸せ|満足|喜び|良い/,negative:/悲しい|辛い|苦しい|不安|心配|悪い/,excited:/興奮|わくわく|期待|楽しみ/,calm:/落ち着|平静|穏やか|安心/,anxious:/不安|心配|緊張|怖い/,confident:/自信|確信|大丈夫|できる/};for(const[n,i]of Object.entries(t))if(i.test(e))return n;return"neutral"},calculateComplexity(e){const t={length:e.length/100,uniqueChars:new Set(e).size/e.length,kanji:(e.match(/[一-龯]/g)||[]).length/e.length,punctuation:(e.match(/[。、！？]/g)||[]).length/e.length},n=Object.values(t).reduce((e,t)=>e+t,0)/4;return Math.min(n,1)},extractBaseKeywords(e){const t=[];e.tokens.filter(e=>e.importance>.5).forEach(e=>{t.push({word:e.surface,source:"token",importance:e.importance,pos:e.pos})}),e.entities.forEach(e=>{t.push({word:e.text,source:"entity",importance:e.confidence,type:e.type})});if(this.getIntentKeywords(e.intent).forEach(n=>{t.push({word:n,source:"intent",importance:.7,intent:e.intent})}),"neutral"!==e.emotion){this.getEmotionKeywords(e.emotion).forEach(n=>{t.push({word:n,source:"emotion",importance:.6,emotion:e.emotion})})}return this.deduplicateKeywords(t)},async expandKeywords(e,t){const n=[];for(const i of e){const e=this.getSemanticExpansions(i.word);n.push(...e.map(e=>({word:e,source:"semantic",parent:i.word,importance:.8*i.importance})));const o=this.getRelatedWords(i.word,t);n.push(...o.map(e=>({word:e,source:"related",parent:i.word,importance:.7*i.importance})));const a=this.getSynonyms(i.word);n.push(...a.map(e=>({word:e,source:"synonym",parent:i.word,importance:.9*i.importance})))}return[...e,...this.deduplicateKeywords(n)]},generateContextualKeywords(e,t){const n=[...e];if(t.domain){const e=this.getDomainKeywords(t.domain);n.push(...e.map(e=>({word:e,source:"domain",importance:.6,domain:t.domain})))}if(t.timeframe){const e=this.getTimeframeKeywords(t.timeframe);n.push(...e.map(e=>({word:e,source:"timeframe",importance:.5,timeframe:t.timeframe})))}if(t.situation){const e=this.getSituationKeywords(t.situation);n.push(...e.map(e=>({word:e,source:"situation",importance:.6,situation:t.situation})))}return this.deduplicateKeywords(n)},refineKeywords(e,t){const n=e.sort((e,t)=>t.importance-e.importance).filter(e=>!(e.importance<.3)&&(!(e.word.length<2||e.word.length>15)&&!(/[0-9a-zA-Z]/.test(e.word)&&e.word.length<3)));return this.ensureDiversity(n).slice(0,30)},deduplicateKeywords(e){const t=new Map;return e.forEach(e=>{const n=e.word;if(t.has(n)){const i=t.get(n);e.importance>i.importance&&t.set(n,e)}else t.set(n,e)}),Array.from(t.values())},ensureDiversity(e){const t=[],n=new Set,i=new Set;for(const o of e){const e=Array.from(n).filter(e=>e===o.source).length,a=o.type?Array.from(i).filter(e=>e===o.type).length:0;if(e<5&&a<3&&(t.push(o),n.add(o.source),o.type&&i.add(o.type),t.length>=30))break}return t},createFallbackKeywords(e){const t=e.replace(/[。、！？]/g," ").split(/\s+/).filter(e=>e.length>1).slice(0,10).map(e=>({word:e,source:"fallback",importance:.5}));return{original:e,base:t,expanded:t,contextual:t,final:t,metadata:{totalGenerated:t.length,expansionRatio:1,contextQuality:.3,philosophy:"haqei-fallback"}}},inferReading:e=>(/[ひらがな]/.test(e)||/[カタカナ]/.test(e),e),inferPOS:e=>e.endsWith("する")?"動詞":e.endsWith("だ")||e.endsWith("である")?"助動詞":e.endsWith("な")||e.endsWith("の")?"連体詞":/[。、！？]/.test(e)?"記号":"名詞",calculateTokenImportance(e){let t=.5;return e.length>=3&&(t+=.2),e.length>=5&&(t+=.1),/[一-龯]/.test(e)&&(t+=.2),/^[あ-ん]+$/.test(e)&&e.length<=2&&(t-=.3),Math.max(.1,Math.min(t,1))},getIntentKeywords:e=>({question:["疑問","質問","理由","方法","時期","場所","対象"],request:["依頼","要求","希望","必要","欲求","願い"],decision:["判断","選択","決定","方針","方向","結論"],future:["予測","計画","目標","見通し","期待","希望"],problem:["課題","困難","障害","悩み","心配","対処"],goal:["目的","理想","達成","成功","実現","完遂"]}[e]||[]),getEmotionKeywords:e=>({positive:["喜び","満足","幸福","楽しさ","嬉しさ","安心"],negative:["悲しみ","不安","心配","辛さ","苦しさ","困惑"],excited:["興奮","期待","わくわく","楽しみ","待望"],calm:["落ち着き","平静","穏やか","安定","静寂"],anxious:["不安","緊張","心配","恐れ","動揺"],confident:["自信","確信","信念","決意","意志"]}[e]||[]),getSemanticExpansions(e){const t=[];return e.includes("問題")&&t.push("課題","困難","解決"),e.includes("未来")&&t.push("将来","希望","計画"),e.includes("成功")&&t.push("達成","成果","結果"),e.includes("関係")&&t.push("繋がり","絆","交流"),t},getRelatedWords(e,t){const n=[];return"business"===t.domain&&e.includes("目標")&&n.push("売上","成果","KPI","業績"),"relationship"===t.domain&&e.includes("信頼")&&n.push("理解","尊重","協力","支援"),n},getSynonyms:e=>({"問題":["課題","トラブル","困難"],"解決":["対処","解消","改善"],"未来":["将来","今後","これから"],"成功":["達成","成果","勝利"]}[e]||[]),getDomainKeywords:e=>({business:["仕事","会社","職場","業務","ビジネス","企業","組織"],relationship:["人間関係","友人","恋人","家族","仲間","絆"],health:["健康","体調","病気","治療","予防","運動"],learning:["学習","勉強","知識","スキル","成長","理解"],hobby:["趣味","娯楽","楽しみ","リラックス","余暇"]}[e]||[]),getTimeframeKeywords:e=>({past:["経験","学習","反省","記憶"],present:["現状","状況","対応","行動"],future:["計画","目標","希望","予測"]}[e]||[]),getSituationKeywords:e=>({crisis:["緊急","対応","解決","支援"],opportunity:["チャンス","可能性","成長","発展"],routine:["日常","習慣","継続","安定"]}[e]||[]),calculateContextQuality(e){let t=.3;return e.domain&&(t+=.2),e.emotion&&"neutral"!==e.emotion&&(t+=.2),e.timeframe&&(t+=.1),e.situation&&(t+=.2),Math.min(t,1)}},this.interfaceOS={name:"Dynamic Keyword Interface OS",formatGenerationResult(e){return{display:{summary:{input:e.original.substring(0,50)+(e.original.length>50?"...":""),generated:e.metadata.totalGenerated,expansion:`${e.metadata.expansionRatio.toFixed(1)}x`,quality:this.formatQuality(e.metadata.contextQuality)},keywords:this.formatKeywordList(e.final),breakdown:this.createBreakdown(e),suggestions:this.generateSuggestions(e)},philosophy:e.metadata.philosophy}},formatKeywordList(e){return e.map(e=>({word:e.word,importance:Math.round(100*e.importance)+"%",source:this.formatSource(e.source),category:this.determineCategory(e)}))},createBreakdown(e){const t={sources:{},importance:{high:0,medium:0,low:0},categories:{}};return e.final.forEach(e=>{t.sources[e.source]=(t.sources[e.source]||0)+1,e.importance>=.7?t.importance.high++:e.importance>=.5?t.importance.medium++:t.importance.low++;const n=this.determineCategory(e);t.categories[n]=(t.categories[n]||0)+1}),t},generateSuggestions(e){const t=[],n=new Set(e.final.map(e=>this.determineCategory(e)));return["action","emotion","time","place","person"].forEach(e=>{n.has(e)||t.push(`${e}に関するキーワードを追加することをお勧めします`)}),e.metadata.contextQuality<.5&&t.push("より具体的な状況説明があると、質の高いキーワードを生成できます"),t},formatSource:e=>({token:"📝 文章解析",entity:"🏷️ 固有表現",intent:"🎯 意図推定",emotion:"💭 感情分析",semantic:"🧠 意味関係",related:"🔗 関連語",synonym:"🔄 同義語",domain:"🏢 ドメイン",timeframe:"⏰ 時間軸",situation:"🎬 状況",fallback:"🛡️ フォールバック"}[e]||`📌 ${e}`),determineCategory(e){const t={action:/する|やる|行う|実行|実施|取組/,emotion:/嬉し|悲し|怖|不安|楽し|幸せ|満足/,time:/時|日|週|月|年|過去|現在|未来|いつ/,place:/場所|所|地域|会場|家|会社|学校/,person:/人|者|さん|くん|ちゃん|先生|友/};for(const[n,i]of Object.entries(t))if(i.test(e.word))return n;return"general"},formatQuality:e=>e>=.8?"🌟 高品質":e>=.6?"✨ 良好":e>=.4?"👍 普通":"🔄 要改善"},this.safeMode={name:"Dynamic Keyword Safe Mode OS",active:!1,activate(){return console.log("🛡️ DynamicKeywordGenerator Safe Mode activated"),this.active=!0,{basicGeneration:!0,advancedFeatures:!1,philosophy:"haqei-safe"}},generateSafeKeywords(e){const t=e.replace(/[^\u3040-\u309F\u30A0-\u30FF\u4E00-\u9FAF\u3400-\u4DBF]/g," ").split(/\s+/).filter(e=>e.length>=2).slice(0,10);return{original:e,base:t.map(e=>({word:e,source:"safe",importance:.5})),expanded:t.map(e=>({word:e,source:"safe",importance:.5})),contextual:t.map(e=>({word:e,source:"safe",importance:.5})),final:t.map(e=>({word:e,source:"safe",importance:.5})),metadata:{totalGenerated:t.length,expansionRatio:1,contextQuality:.3,philosophy:"haqei-safe"}}}}},initializeGenerationRules(){this.generationRules={maxKeywords:30,minImportance:.3,expansionRatio:3,diversityThreshold:.7}},loadContextDatabase(){this.contextDatabase={intents:{question:["疑問","質問","理由","方法","時期","場所","対象"],request:["依頼","要求","希望","必要","欲求","願い"],decision:["判断","選択","決定","方針","方向","結論"],future:["予測","計画","目標","見通し","期待","希望"],problem:["課題","困難","障害","悩み","心配","対処"],goal:["目的","理想","達成","成功","実現","完遂"]},emotions:{positive:["喜び","満足","幸福","楽しさ","嬉しさ","安心"],negative:["悲しみ","不安","心配","辛さ","苦しさ","困惑"],excited:["興奮","期待","わくわく","楽しみ","待望"],calm:["落ち着き","平静","穏やか","安定","静寂"],anxious:["不安","緊張","心配","恐れ","動揺"],confident:["自信","確信","信念","決意","意志"]},domains:{business:["仕事","会社","職場","業務","ビジネス","企業","組織"],relationship:["人間関係","友人","恋人","家族","仲間","絆"],health:["健康","体調","病気","治療","予防","運動"],learning:["学習","勉強","知識","スキル","成長","理解"],hobby:["趣味","娯楽","楽しみ","リラックス","余暇"]}}},inferReading:e=>(/[ひらがな]/.test(e)||/[カタカナ]/.test(e),e),inferPOS:e=>e.endsWith("する")?"動詞":e.endsWith("だ")||e.endsWith("である")?"助動詞":e.endsWith("な")||e.endsWith("の")?"連体詞":/[。、！？]/.test(e)?"記号":"名詞",calculateTokenImportance(e){let t=.5;return e.length>=3&&(t+=.2),e.length>=5&&(t+=.1),/[一-龯]/.test(e)&&(t+=.2),/^[あ-ん]+$/.test(e)&&e.length<=2&&(t-=.3),Math.max(.1,Math.min(t,1))},getIntentKeywords(e){return this.contextDatabase.intents[e]||[]},getEmotionKeywords(e){return this.contextDatabase.emotions[e]||[]},getSemanticExpansions(e){const t=[];return e.includes("問題")&&t.push("課題","困難","解決"),e.includes("未来")&&t.push("将来","希望","計画"),e.includes("成功")&&t.push("達成","成果","結果"),e.includes("関係")&&t.push("繋がり","絆","交流"),t},getRelatedWords(e,t){const n=[];return"business"===t.domain&&e.includes("目標")&&n.push("売上","成果","KPI","業績"),"relationship"===t.domain&&e.includes("信頼")&&n.push("理解","尊重","協力","支援"),n},getSynonyms:e=>({"問題":["課題","トラブル","困難"],"解決":["対処","解消","改善"],"未来":["将来","今後","これから"],"成功":["達成","成果","勝利"]}[e]||[]),getDomainKeywords(e){return this.contextDatabase.domains[e]||[]},getTimeframeKeywords:e=>({past:["経験","学習","反省","記憶"],present:["現状","状況","対応","行動"],future:["計画","目標","希望","予測"]}[e]||[]),getSituationKeywords:e=>({crisis:["緊急","対応","解決","支援"],opportunity:["チャンス","可能性","成長","発展"],routine:["日常","習慣","継続","安定"]}[e]||[]),calculateContextQuality(e){let t=.3;return e.domain&&(t+=.2),e.emotion&&"neutral"!==e.emotion&&(t+=.2),e.timeframe&&(t+=.1),e.situation&&(t+=.2),Math.min(t,1)},async generateDynamicKeywords(e,t={}){this.engineOS||await this.init();try{if(this.safeMode.active)return this.safeMode.generateSafeKeywords(e);const n=await this.engineOS.generateKeywords(e,t);return this.interfaceOS.formatGenerationResult(n)}catch(n){return console.error("❌ Dynamic keyword generation failed:",n),this.safeMode.activate(),this.safeMode.generateSafeKeywords(e)}},async generateKeywords(e,t={}){if(console.log("🔤 DynamicKeywordGenerator.generateKeywords called with:",e.substring(0,50)),this.engineOS||await this.init(),this.safeMode&&this.safeMode.active)return this.safeMode.generateSafeKeywords(e);const n=await this.engineOS.generateKeywords.call(this.engineOS,e,t),i=this.interfaceOS.formatGenerationResult(n);return console.log("✅ Dynamic keywords generation complete"),console.log("🔤 Dynamic keywords generated:",{original:i.display?i.display.summary.input:e.substring(0,30),base:n.base?n.base.slice(0,3).map(e=>e.word||e):[],expanded:n.expanded?n.expanded.slice(0,5).map(e=>e.word||e):[],final:n.final?n.final.slice(0,4).map(e=>e.word||e):[]}),i},getGenerationCapabilities(){const e=["basic_generation","text_analysis"];return this.contextDatabase&&e.push("context_aware","domain_specific","intent_detection"),this.safeMode.active||e.push("semantic_expansion","emotion_detection","entity_extraction"),e}},document.addEventListener("DOMContentLoaded",()=>{window.DynamicKeywordGenerator.init()}),console.log("✅ DynamicKeywordGenerator loaded successfully with HaQei Philosophy");