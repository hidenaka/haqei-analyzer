class ScenariosDisplayUI{constructor(){this.initialized=!1,this.version="2.1.0-emergency-fix",this.displayAlignment="haqei-integrated-scenarios-display",this.displayConfig={scenarioCards:{maxCards:8,cardLayout:"grid",animationEnabled:!0,responsiveBreakpoints:{mobile:768,tablet:1024,desktop:1200}},binaryTree:{enabled:!0,visualization:"hierarchical",interactive:!0,maxDepth:3},layout:{sectionsOrder:["scenarios","binaryTree","integration"],spacing:"comfortable",colorScheme:"haqei-harmonious"}},this.containers={main:null,scenarios:null,binaryTree:null,integration:null},this.animations={scenarioReveal:"fadeInUp",binaryTreeGrow:"expandFromCenter",cardHover:"gentle-lift"},console.log("🎨 ScenariosDisplayUI v2.1.0 initialized - 統合シナリオ表示システム"),this.initialized=!0}async displayIntegratedResults(n,e=null,i=null){try{console.log("🎨 Displaying integrated scenarios and binary tree results");const t=i||this.findOrCreateMainContainer();this.containers.main=t,this.clearDisplayArea(t);const a=this.buildMainLayout(t);return await this.displayScenarioCards(n,a.scenarios),e&&e.finalEightPaths&&await this.displayBinaryTreeVisualization(e,a.binaryTree),await this.displayIntegrationSection(n,e,a.integration),this.applyResponsiveLayout(),this.applyAnimations(),console.log("✅ Integrated results display completed successfully"),{success:!0,displayed:{scenarios:n.length,binaryTree:!!e}}}catch(t){return console.error("❌ Error in displayIntegratedResults:",t),this.displayErrorState(i,t),{success:!1,error:t.message}}}buildMainLayout(n){return n.innerHTML='\n            <div class="haqei-results-container">\n                \x3c!-- ヘッダーセクション --\x3e\n                <div class="results-header">\n                    <h2 class="results-title">🎯 統合分析結果</h2>\n                    <p class="results-subtitle">HaQei哲学に基づく8つの道筋と二分木分析</p>\n                </div>\n                \n                \x3c!-- 8シナリオセクション --\x3e\n                <div class="scenarios-section">\n                    <div class="section-header">\n                        <h3 class="section-title">🌟 8つの未来シナリオ</h3>\n                        <p class="section-description">矛盾を受容しながら、状況に応じた最適な道筋を選択できます</p>\n                    </div>\n                    <div class="scenarios-grid" id="scenarios-container">\n                        \x3c!-- シナリオカードがここに挿入される --\x3e\n                    </div>\n                </div>\n                \n                \x3c!-- Binary Treeセクション --\x3e\n                <div class="binary-tree-section">\n                    <div class="section-header">\n                        <h3 class="section-title">🌳 段階的分岐分析</h3>\n                        <p class="section-description">3段階の選択による8つの到達点を可視化</p>\n                    </div>\n                    <div class="binary-tree-container" id="binary-tree-container">\n                        \x3c!-- Binary Tree可視化がここに挿入される --\x3e\n                    </div>\n                </div>\n                \n                \x3c!-- HaQei統合セクション --\x3e\n                <div class="integration-section">\n                    <div class="section-header">\n                        <h3 class="section-title">☯️ HaQei統合的洞察</h3>\n                        <p class="section-description">複数の道筋を統合した実践的ガイダンス</p>\n                    </div>\n                    <div class="integration-content" id="integration-container">\n                        \x3c!-- 統合コンテンツがここに挿入される --\x3e\n                    </div>\n                </div>\n            </div>\n        ',this.containers.scenarios=n.querySelector("#scenarios-container"),this.containers.binaryTree=n.querySelector("#binary-tree-container"),this.containers.integration=n.querySelector("#integration-container"),this.containers}async displayScenarioCards(n,e){n&&0!==n.length?(console.log(`🎨 Displaying ${n.length} scenario cards`),e.className="scenarios-grid",e.style.cssText="\n            display: grid;\n            grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));\n            gap: 20px;\n            margin-top: 20px;\n        ",n.forEach((n,i)=>{const t=this.createScenarioCard(n,i);e.appendChild(t)}),console.log(`✅ ${n.length} scenario cards displayed`)):e.innerHTML='<p class="no-scenarios">シナリオが生成されませんでした。</p>'}createScenarioCard(n,e){const i=document.createElement("div");i.className="scenario-card",i.style.cssText=`\n            background: linear-gradient(135deg, ${n.visualization?.color||"#757575"}20, ${n.visualization?.color||"#757575"}10);\n            border: 2px solid ${n.visualization?.color||"#757575"};\n            border-radius: 12px;\n            padding: 20px;\n            margin-bottom: 15px;\n            transition: all 0.3s ease;\n            cursor: pointer;\n            position: relative;\n            min-height: 200px;\n        `,i.addEventListener("mouseenter",()=>{i.style.transform="translateY(-5px)",i.style.boxShadow=`0 8px 25px ${n.visualization?.color||"#757575"}40`}),i.addEventListener("mouseleave",()=>{i.style.transform="translateY(0)",i.style.boxShadow="none"});const t=`\n            <div class="card-header">\n                <div class="card-icon" style="font-size: 24px; margin-bottom: 10px;">\n                    ${n.visualization?.icon||"🎯"}\n                </div>\n                <h4 class="card-title" style="color: ${n.visualization?.color||"#333"}; margin: 0 0 10px 0;">\n                    ${n.customization?.personalizedTitle||n.title}\n                </h4>\n                <div class="card-priority" style="position: absolute; top: 15px; right: 15px; background: ${n.visualization?.color||"#757575"}; color: white; padding: 4px 8px; border-radius: 12px; font-size: 12px;">\n                    優先度: ${n.visualization?.priority||50}%\n                </div>\n            </div>\n            \n            <div class="card-body">\n                <p class="card-description" style="color: #666; line-height: 1.6; margin-bottom: 15px;">\n                    ${n.customization?.contextualDescription||n.description}\n                </p>\n                \n                <div class="card-metadata">\n                    <div class="metadata-item" style="display: flex; justify-content: space-between; margin-bottom: 8px;">\n                        <span style="font-weight: bold;">アプローチ:</span>\n                        <span>${this.translateApproach(n.metadata?.approach)}</span>\n                    </div>\n                    <div class="metadata-item" style="display: flex; justify-content: space-between; margin-bottom: 8px;">\n                        <span style="font-weight: bold;">期間:</span>\n                        <span>${n.practicalElements?.timeframe||"3-6ヶ月"}</span>\n                    </div>\n                    <div class="metadata-item" style="display: flex; justify-content: space-between; margin-bottom: 8px;">\n                        <span style="font-weight: bold;">信頼度:</span>\n                        <span>${Math.round(100*(n.metadata?.confidence||.5))}%</span>\n                    </div>\n                </div>\n                \n                <div class="card-haqei-elements" style="margin-top: 15px; padding: 10px; background: #f9f9f9; border-radius: 8px;">\n                    <h5 style="margin: 0 0 8px 0; color: #333;">HaQei要素:</h5>\n                    <p style="font-size: 12px; color: #666; margin: 0;">\n                        主要分人: ${n.HaQeiElements?.personaApplication?.primaryPersona||"判断分人"}<br>\n                        状況適用: ${n.HaQeiElements?.situationalAdaptation?.optimalConditions?.[0]||"一般的状況"}\n                    </p>\n                </div>\n            </div>\n        `;return i.innerHTML=t,i.addEventListener("click",()=>{this.showScenarioDetails(n)}),i}async displayBinaryTreeVisualization(n,e){console.log("🌳 Displaying binary tree visualization"),e.style.cssText="\n            background: #f8f9fa;\n            border-radius: 12px;\n            padding: 20px;\n            margin-top: 20px;\n            min-height: 400px;\n            position: relative;\n        ";const i=this.buildBinaryTreeHTML(n);e.innerHTML=i,this.addBinaryTreeInteractivity(e,n),console.log("✅ Binary tree visualization displayed")}buildBinaryTreeHTML(n){const e=n.finalEightPaths||[];if(0===e.length)return'<p class="no-binary-tree">二分木データがありません。</p>';return`\n            <div class="binary-tree-visualization">\n                <div class="tree-header">\n                    <h4>段階的分岐による8つの道筋</h4>\n                    <p>各段階での選択により異なる未来へと分岐します</p>\n                </div>\n                \n                <div class="tree-structure">\n                    <div class="tree-level level-0">\n                        <div class="tree-node root-node">\n                            現在の状況\n                        </div>\n                    </div>\n                    \n                    <div class="tree-level level-1">\n                        <div class="tree-node level-1-node progress-node">\n                            順行アプローチ\n                        </div>\n                        <div class="tree-node level-1-node transform-node">\n                            転換アプローチ\n                        </div>\n                    </div>\n                    \n                    <div class="tree-level level-2">\n                        ${this.generateLevel2Nodes()}\n                    </div>\n                    \n                    <div class="tree-level level-3">\n                        ${this.generateLevel3Nodes(e)}\n                    </div>\n                </div>\n                \n                <div class="tree-paths-summary">\n                    <h5>8つの到達点:</h5>\n                    <div class="paths-grid">\n                        ${e.map((n,e)=>this.createPathSummaryCard(n,e)).join("")}\n                    </div>\n                </div>\n            </div>\n        `}generateLevel2Nodes(){return'\n            <div class="tree-node level-2-node continue-node">継続強化</div>\n            <div class="tree-node level-2-node adjust-node">部分調整</div>\n            <div class="tree-node level-2-node complete-node">完全転換</div>\n            <div class="tree-node level-2-node integrate-node">統合変革</div>\n        '}generateLevel3Nodes(n){return n.slice(0,8).map((n,e)=>`<div class="tree-node level-3-node final-node" data-path-index="${e}">\n                道筋${e+1}\n            </div>`).join("")}createPathSummaryCard(n,e){return`\n            <div class="path-summary-card" data-path="${e}">\n                <div class="path-number">${e+1}</div>\n                <div class="path-title">${n.title||`道筋 ${e+1}`}</div>\n                <div class="path-probability">確率: ${Math.round(100*(n.probability||.5))}%</div>\n                <div class="path-route">${(n.route||[]).join(" → ")}</div>\n            </div>\n        `}async displayIntegrationSection(n,e,i){console.log("☯️ Displaying HaQei integration section");i.innerHTML='\n            <div class="haqei-integration">\n                <div class="integration-principles">\n                    <div class="principle-card">\n                        <h5>🎭 矛盾受容の原則</h5>\n                        <p>8つの異なるアプローチが同時に有効であることを受容し、状況に応じて最適な道を選択します。</p>\n                    </div>\n                    \n                    <div class="principle-card">\n                        <h5>🔄 分人切り替えの実践</h5>\n                        <p>状況や内的状態に応じて、異なる分人（判断する自己の側面）を切り替えることで、柔軟な対応が可能になります。</p>\n                    </div>\n                    \n                    <div class="principle-card">\n                        <h5>⚖️ 統合的バランス</h5>\n                        <p>極端な選択を避け、複数の要素を統合した中庸の道も常に選択肢として保持します。</p>\n                    </div>\n                </div>\n                \n                <div class="practical-guidance">\n                    <h4>実践的ガイダンス</h4>\n                    <div class="guidance-steps">\n                        <div class="step">\n                            <span class="step-number">1</span>\n                            <span class="step-text">8つのシナリオを全て理解し、それぞれの価値を認識する</span>\n                        </div>\n                        <div class="step">\n                            <span class="step-number">2</span>\n                            <span class="step-text">現在の状況と内的状態（主導的分人）を確認する</span>\n                        </div>\n                        <div class="step">\n                            <span class="step-number">3</span>\n                            <span class="step-text">最も共鳴するシナリオを選択し、実行計画を立てる</span>\n                        </div>\n                        <div class="step">\n                            <span class="step-number">4</span>\n                            <span class="step-text">状況変化に応じて他のシナリオへの切り替えを検討する</span>\n                        </div>\n                    </div>\n                </div>\n                \n                <div class="next-steps">\n                    <h4>次のステップ</h4>\n                    <div class="next-steps-actions">\n                        <button class="action-btn primary" onclick="window.haqeiScenariosDisplayUI?.exportResults()">\n                            📊 結果をエクスポート\n                        </button>\n                        <button class="action-btn secondary" onclick="window.haqeiScenariosDisplayUI?.showDetailedAnalysis()">\n                            🔍 詳細分析を表示\n                        </button>\n                        <button class="action-btn secondary" onclick="window.haqeiScenariosDisplayUI?.scheduleFollowUp()">\n                            📅 フォローアップ設定\n                        </button>\n                    </div>\n                </div>\n            </div>\n        ',this.applyIntegrationStyles(i),console.log("✅ HaQei integration section displayed")}applyIntegrationStyles(n){const e=document.createElement("style");e.textContent="\n            .haqei-integration {\n                max-width: 100%;\n                margin: 0 auto;\n            }\n            \n            .integration-principles {\n                display: grid;\n                grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));\n                gap: 20px;\n                margin-bottom: 30px;\n            }\n            \n            .principle-card {\n                background: linear-gradient(135deg, #e3f2fd, #bbdefb);\n                padding: 20px;\n                border-radius: 12px;\n                border-left: 4px solid #2196f3;\n            }\n            \n            .principle-card h5 {\n                margin: 0 0 10px 0;\n                color: #1976d2;\n            }\n            \n            .guidance-steps {\n                margin-top: 15px;\n            }\n            \n            .step {\n                display: flex;\n                align-items: center;\n                margin-bottom: 15px;\n                padding: 10px;\n                background: #f5f5f5;\n                border-radius: 8px;\n            }\n            \n            .step-number {\n                display: inline-flex;\n                align-items: center;\n                justify-content: center;\n                width: 30px;\n                height: 30px;\n                background: #4caf50;\n                color: white;\n                border-radius: 50%;\n                margin-right: 15px;\n                font-weight: bold;\n            }\n            \n            .next-steps-actions {\n                display: flex;\n                gap: 10px;\n                flex-wrap: wrap;\n                margin-top: 15px;\n            }\n            \n            .action-btn {\n                padding: 10px 20px;\n                border: none;\n                border-radius: 8px;\n                cursor: pointer;\n                font-weight: bold;\n                transition: all 0.3s ease;\n            }\n            \n            .action-btn.primary {\n                background: #4caf50;\n                color: white;\n            }\n            \n            .action-btn.secondary {\n                background: #f5f5f5;\n                color: #333;\n                border: 1px solid #ddd;\n            }\n            \n            .action-btn:hover {\n                transform: translateY(-2px);\n                box-shadow: 0 4px 12px rgba(0,0,0,0.15);\n            }\n        ",document.head.querySelector("#haqei-integration-styles")||(e.id="haqei-integration-styles",document.head.appendChild(e))}applyResponsiveLayout(){const n=document.createElement("style");n.textContent="\n            @media (max-width: 768px) {\n                .scenarios-grid {\n                    grid-template-columns: 1fr !important;\n                }\n                \n                .integration-principles {\n                    grid-template-columns: 1fr !important;\n                }\n                \n                .next-steps-actions {\n                    flex-direction: column;\n                }\n                \n                .action-btn {\n                    width: 100%;\n                }\n            }\n            \n            @media (max-width: 480px) {\n                .haqei-results-container {\n                    padding: 10px;\n                }\n                \n                .scenario-card {\n                    padding: 15px !important;\n                }\n            }\n        ",document.head.querySelector("#haqei-responsive-styles")||(n.id="haqei-responsive-styles",document.head.appendChild(n))}applyAnimations(){this.containers.main.querySelectorAll(".scenario-card").forEach((n,e)=>{n.style.opacity="0",n.style.transform="translateY(20px)",setTimeout(()=>{n.style.transition="all 0.5s ease",n.style.opacity="1",n.style.transform="translateY(0)"},100*e)});this.containers.main.querySelectorAll(".tree-node").forEach((n,e)=>{n.style.opacity="0",n.style.transform="scale(0.8)",setTimeout(()=>{n.style.transition="all 0.4s ease",n.style.opacity="1",n.style.transform="scale(1)"},500+50*e)})}findOrCreateMainContainer(){let n=document.getElementById("results-container")||document.getElementById("future-simulator-results")||document.querySelector(".results-container");if(!n){n=document.createElement("div"),n.id="results-container",n.className="haqei-results-main";(document.querySelector(".main-content")||document.querySelector("#future-analysis-results")||document.body).appendChild(n)}return n}clearDisplayArea(n){n.innerHTML="",n.className="haqei-results-main"}translateApproach(n){return{proactive:"積極的",adaptive:"適応的",transformative:"変革的",decisive:"決断的",strengthening:"強化的",harmonizing:"調和的",integrative:"統合的",innovative:"革新的",general:"一般的"}[n]||"一般的"}addBinaryTreeInteractivity(n,e){n.querySelectorAll(".path-summary-card").forEach((n,i)=>{n.style.cursor="pointer",n.addEventListener("click",()=>{this.highlightTreePath(i,e),this.showPathDetails(e.finalEightPaths[i])})});n.querySelectorAll(".tree-node").forEach(n=>{n.addEventListener("mouseenter",()=>{n.style.transform="scale(1.05)",n.style.boxShadow="0 4px 12px rgba(0,0,0,0.15)"}),n.addEventListener("mouseleave",()=>{n.style.transform="scale(1)",n.style.boxShadow="none"})})}highlightTreePath(n,e){console.log(`Highlighting path ${n}`)}showPathDetails(n){const e=document.createElement("div");e.className="path-details-modal",e.innerHTML=`\n            <div class="modal-content">\n                <div class="modal-header">\n                    <h4>${n.title}</h4>\n                    <button class="close-btn">&times;</button>\n                </div>\n                <div class="modal-body">\n                    <p><strong>説明:</strong> ${n.fullDescription||n.description}</p>\n                    <p><strong>確率:</strong> ${Math.round(100*(n.probability||.5))}%</p>\n                    <p><strong>経路:</strong> ${(n.route||[]).join(" → ")}</p>\n                    ${n.timeline?`<p><strong>期間:</strong> ${n.timeline}</p>`:""}\n                </div>\n            </div>\n        `,document.body.appendChild(e),e.querySelector(".close-btn").addEventListener("click",()=>{document.body.removeChild(e)}),e.addEventListener("click",n=>{n.target===e&&document.body.removeChild(e)})}showScenarioDetails(n){console.log("Showing scenario details:",n)}displayErrorState(n,e){const i=`\n            <div class="error-state">\n                <div class="error-icon">⚠️</div>\n                <h3>表示エラーが発生しました</h3>\n                <p>エラー内容: ${e.message}</p>\n                <button onclick="location.reload()" class="retry-btn">再読み込み</button>\n            </div>\n        `;n&&(n.innerHTML=i)}exportResults(){console.log("📊 Exporting results...")}showDetailedAnalysis(){console.log("🔍 Showing detailed analysis...")}scheduleFollowUp(){console.log("📅 Scheduling follow-up...")}getSystemInfo(){return{version:this.version,displayAlignment:this.displayAlignment,initialized:this.initialized,displayConfig:this.displayConfig,containersConnected:Object.keys(this.containers).length}}}"undefined"!=typeof window&&(window.ScenariosDisplayUI=ScenariosDisplayUI,window.haqeiScenariosDisplayUI||(window.haqeiScenariosDisplayUI=new ScenariosDisplayUI)),"undefined"!=typeof module&&module.exports&&(module.exports=ScenariosDisplayUI),console.log("🎨 ScenariosDisplayUI.js loaded successfully - 統合シナリオ表示システム");