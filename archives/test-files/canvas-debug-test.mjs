/**
 * CanvasË¶ÅÁ¥†„Åå0ÂÄã„ÅÆÂéüÂõ†Ë™øÊüª
 * ‰∫àÊÉ≥„Åï„Çå„ÇãÂéüÂõ†:
 * 1. Chart.js„ÅåË™≠„ÅøËæº„Åæ„Çå„Å¶„ÅÑ„Å™„ÅÑ
 * 2. ScoreVisualization„ÅÆcreateComparisonChart„ÅåÂÆüË°å„Åï„Çå„Å¶„ÅÑ„Å™„ÅÑ
 * 3. Canvas‰ΩúÊàêÂæå„Å´DOM„Å´ËøΩÂä†„Åï„Çå„Å¶„ÅÑ„Å™„ÅÑ
 * 4. CSP„Ç®„É©„Éº„ÅßChart.jsÂàùÊúüÂåñ„ÅåÂ§±Êïó
 */

import { chromium } from 'playwright';

async function debugCanvasIssue() {
    console.log('üîç CanvasË¶ÅÁ¥†0ÂÄãÂïèÈ°å„ÅÆÂéüÂõ†Ë™øÊüª');
    console.log('=====================================\n');
    
    const browser = await chromium.launch({ 
        headless: false,
        args: ['--no-sandbox', '--disable-web-security']
    });
    
    try {
        const page = await browser.newPage();
        
        // „É™„Ç¢„É´„Çø„Ç§„É†„É≠„Ç∞ÂèéÈõÜ
        const allLogs = [];
        page.on('console', msg => {
            const log = `[${msg.type()}] ${msg.text()}`;
            allLogs.push(log);
            if (log.includes('canvas') || log.includes('Canvas') || log.includes('Chart')) {
                console.log(`üéØ ${log}`);
            }
        });
        
        console.log('Step 1: „Éö„Éº„Ç∏„É≠„Éº„Éâ„Å®JavaScriptÁ¢∫Ë™ç');
        console.log('--------------------------------');
        
        await page.goto('http://localhost:8788/future_simulator.html', { 
            waitUntil: 'networkidle',
            timeout: 20000
        });
        
        await page.waitForTimeout(2000);
        
        // Chart.jsË™≠„ÅøËæº„ÅøÁä∂Ê≥ÅÁ¢∫Ë™ç
        const chartStatus = await page.evaluate(() => {
            return {
                chartJsLoaded: typeof window.Chart !== 'undefined',
                scoreVisualizationLoaded: typeof window.ScoreVisualization !== 'undefined',
                eightScenariosDisplayLoaded: typeof window.EightScenariosDisplay !== 'undefined',
                chartJsVersion: window.Chart?.version || 'not-loaded',
                documentReady: document.readyState
            };
        });
        
        console.log('JavaScriptË™≠„ÅøËæº„ÅøÁä∂Ê≥Å:');
        console.log(`  Chart.js: ${chartStatus.chartJsLoaded ? '‚úÖ' : '‚ùå'} (${chartStatus.chartJsVersion})`);
        console.log(`  ScoreVisualization: ${chartStatus.scoreVisualizationLoaded ? '‚úÖ' : '‚ùå'}`);
        console.log(`  EightScenariosDisplay: ${chartStatus.eightScenariosDisplayLoaded ? '‚úÖ' : '‚ùå'}`);
        console.log(`  DocumentÁä∂ÊÖã: ${chartStatus.documentReady}`);
        
        if (!chartStatus.chartJsLoaded) {
            console.log('‚ùå ÂéüÂõ†ÁâπÂÆö: Chart.js„ÅåË™≠„ÅøËæº„Åæ„Çå„Å¶„ÅÑ„Å™„ÅÑ');
            return;
        }
        
        console.log('\\nStep 2: ÂàÜÊûêÂÆüË°å„Å®CanvasÁîüÊàêÈÅéÁ®ãËøΩË∑°');
        console.log('--------------------------------');
        
        // CanvasÁîüÊàê„Çí„É™„Ç¢„É´„Çø„Ç§„É†Áõ£Ë¶ñ
        await page.evaluate(() => {
            // Canvas‰ΩúÊàêÁõ£Ë¶ñ„ÅÆ„Ç™„Éº„Éê„Éº„É©„Ç§„Éâ
            const originalCreateElement = document.createElement;
            document.createElement = function(tagName) {
                const element = originalCreateElement.call(document, tagName);
                if (tagName.toLowerCase() === 'canvas') {
                    console.log('üé® CanvasË¶ÅÁ¥†„Åå‰ΩúÊàê„Åï„Çå„Åæ„Åó„ÅüÔºÅ', {
                        id: element.id,
                        className: element.className,
                        width: element.width,
                        height: element.height
                    });
                }
                return element;
            };
            
            // appendChildÁõ£Ë¶ñ
            const originalAppendChild = Element.prototype.appendChild;
            Element.prototype.appendChild = function(child) {
                if (child.tagName && child.tagName.toLowerCase() === 'canvas') {
                    console.log('üîó CanvasË¶ÅÁ¥†„ÅåDOM„Å´ËøΩÂä†„Åï„Çå„Åæ„Åó„ÅüÔºÅ', {
                        id: child.id,
                        parent: this.id || this.className || this.tagName,
                        width: child.width,
                        height: child.height
                    });
                }
                return originalAppendChild.call(this, child);
            };
        });
        
        // „ÉÜ„Çπ„ÉàÂÖ•Âäõ„ÉªÂàÜÊûêÂÆüË°å
        const testInput = 'Ëª¢ËÅ∑„ÇíÊ§úË®é‰∏≠„ÄÇÁèæÂú®„ÅÆËÅ∑Â†¥„ÅØÂÆâÂÆö„Åó„Å¶„ÅÑ„Çã„ÅåÊàêÈï∑Ê©ü‰ºö„ÅåÂ∞ë„Å™„ÅÑ„ÄÇ';
        await page.fill('textarea, #worryInput, #situation-text', testInput);
        console.log('‚úÖ „ÉÜ„Çπ„ÉàÂÖ•ÂäõÂÆå‰∫Ü');
        
        await page.click('button[type="submit"], .analyze-btn, #aiGuessBtn');
        console.log('üîÑ ÂàÜÊûêÂÆüË°åÈñãÂßã - CanvasÁîüÊàê„ÇíÁõ£Ë¶ñ‰∏≠...');
        
        // ÂàÜÊûêÂÆå‰∫Ü„Åæ„ÅßÂæÖÊ©ü
        await page.waitForFunction(() => {
            const scenarios = document.querySelectorAll('.scenario-card, [class*="scenario"]');
            const hasError = document.body.textContent.includes('„Ç®„É©„Éº„ÅåÁô∫Áîü');
            return scenarios.length >= 4 || hasError;
        }, { timeout: 15000 });
        
        console.log('‚è±Ô∏è ÂàÜÊûêÂá¶ÁêÜÂÆå‰∫Ü');
        
        await page.waitForTimeout(3000);
        
        console.log('\\nStep 3: CanvasÁîüÊàêÁä∂Ê≥Å„ÅÆË©≥Á¥∞ÂàÜÊûê');
        console.log('--------------------------------');
        
        const canvasAnalysis = await page.evaluate(() => {
            // CanvasË¶ÅÁ¥†„ÅÆË©≥Á¥∞Ë™øÊüª
            const allCanvas = document.querySelectorAll('canvas');
            const allCanvasDetails = Array.from(allCanvas).map(canvas => ({
                id: canvas.id,
                className: canvas.className,
                width: canvas.width,
                height: canvas.height,
                parentId: canvas.parentElement?.id,
                parentClass: canvas.parentElement?.className,
                hasContext: !!(canvas.getContext('2d')),
                inDocument: document.contains(canvas),
                visible: window.getComputedStyle(canvas).display !== 'none'
            }));
            
            // HTMLÂÜÖ„ÅÆcanvasÂèÇÁÖßÁ¢∫Ë™ç
            const htmlCanvasRefs = document.body.innerHTML.match(/canvas[^>]*>/g) || [];
            
            // ScoreVisualizationÂÆüË°åÁ¢∫Ë™ç
            let scoreVizExecuted = false;
            let scoreVizError = null;
            
            try {
                if (window.ScoreVisualization) {
                    const testScenarios = [{
                        name: '„ÉÜ„Çπ„Éà',
                        score: { S1: 70, S2: 65, S3: 60 }
                    }];
                    const viz = new window.ScoreVisualization();
                    const result = viz.createComparisonChart(testScenarios);
                    scoreVizExecuted = true;
                    console.log('‚úÖ ScoreVisualization.createComparisonChartÂÆüË°åÊàêÂäü');
                }
            } catch (error) {
                scoreVizError = error.message;
                console.error('‚ùå ScoreVisualizationÂÆüË°å„Ç®„É©„Éº:', error);
            }
            
            return {
                canvasCount: allCanvas.length,
                canvasDetails: allCanvasDetails,
                htmlCanvasRefs: htmlCanvasRefs.length,
                scoreVizExecuted,
                scoreVizError,
                chartJsWorking: typeof window.Chart !== 'undefined' && window.Chart.version
            };
        });
        
        console.log('CanvasÁîüÊàêÂàÜÊûêÁµêÊûú:');
        console.log(`  DOMÂÜÖCanvasË¶ÅÁ¥†Êï∞: ${canvasAnalysis.canvasCount}ÂÄã`);
        console.log(`  HTMLÂÜÖcanvasÂèÇÁÖßÊï∞: ${canvasAnalysis.htmlCanvasRefs}ÂÄã`);
        console.log(`  ScoreVisualizationÂÆüË°å: ${canvasAnalysis.scoreVizExecuted ? '‚úÖ' : '‚ùå'}`);
        console.log(`  Chart.jsÂãï‰Ωú: ${canvasAnalysis.chartJsWorking ? '‚úÖ' : '‚ùå'}`);
        
        if (canvasAnalysis.scoreVizError) {
            console.log(`  ScoreViz„Ç®„É©„Éº: ${canvasAnalysis.scoreVizError}`);
        }
        
        if (canvasAnalysis.canvasCount > 0) {
            console.log('\\nüìä Áô∫Ë¶ã„Åï„Çå„ÅüCanvasË¶ÅÁ¥†:');
            canvasAnalysis.canvasDetails.forEach((canvas, i) => {
                console.log(`  Canvas${i+1}:`);
                console.log(`    ID: ${canvas.id || '„Å™„Åó'}`);
                console.log(`    Class: ${canvas.className || '„Å™„Åó'}`);
                console.log(`    „Çµ„Ç§„Ç∫: ${canvas.width}x${canvas.height}`);
                console.log(`    Ë¶™Ë¶ÅÁ¥†: ${canvas.parentId || canvas.parentClass || '„Å™„Åó'}`);
                console.log(`    Context: ${canvas.hasContext ? '‚úÖ' : '‚ùå'}`);
                console.log(`    DOMÂÜÖ: ${canvas.inDocument ? '‚úÖ' : '‚ùå'}`);
                console.log(`    Ë°®Á§∫: ${canvas.visible ? '‚úÖ' : '‚ùå'}`);
            });
        } else {
            console.log('\\n‚ùå CanvasË¶ÅÁ¥†„ÅåÂÖ®„Åè‰ΩúÊàê„Åï„Çå„Å¶„ÅÑ„Å™„ÅÑ');
            
            // ÂéüÂõ†ÂàÜÊûê
            console.log('\\nüîç ËÄÉ„Åà„Çâ„Çå„ÇãÂéüÂõ†:');
            console.log('1. ScoreVisualization.createComparisonChart()„ÅåÂëº„Å≥Âá∫„Åï„Çå„Å¶„ÅÑ„Å™„ÅÑ');
            console.log('2. Chart.jsÂàùÊúüÂåñ„Ç®„É©„Éº„ÅßCanvas‰ΩúÊàê„ÅåÈòªÊ≠¢„Åï„Çå„Å¶„ÅÑ„Çã'); 
            console.log('3. CSP„Ç®„É©„Éº„ÅßWorker/CanvasÊìç‰Ωú„ÅåÂà∂Èôê„Åï„Çå„Å¶„ÅÑ„Çã');
            console.log('4. DOMÊìç‰Ωú„Çø„Ç§„Éü„É≥„Ç∞„ÅÆÂïèÈ°å');
        }
        
        // Èñ¢ÈÄ£„Åô„Çã„Ç≥„É≥„ÇΩ„Éº„É´„É≠„Ç∞„ÇíË°®Á§∫
        const canvasRelatedLogs = allLogs.filter(log => 
            log.toLowerCase().includes('canvas') || 
            log.toLowerCase().includes('chart') ||
            log.toLowerCase().includes('score') ||
            log.toLowerCase().includes('visualization')
        );
        
        if (canvasRelatedLogs.length > 0) {
            console.log('\\nüìù Canvas/ChartÈñ¢ÈÄ£„É≠„Ç∞:');
            canvasRelatedLogs.slice(-10).forEach(log => console.log(`  ${log}`));
        }
        
        return canvasAnalysis;
        
    } catch (error) {
        console.error('‚ùå „Éá„Éê„ÉÉ„Ç∞„Ç®„É©„Éº:', error);
        return null;
    } finally {
        await page.waitForTimeout(8000);
        await browser.close();
    }
}

// ÂÆüË°å
debugCanvasIssue().then(result => {
    console.log('\\n=====================================');
    console.log('üîç CanvasË™øÊüªÂÆå‰∫Ü');
    console.log('=====================================');
    
    if (result) {
        if (result.canvasCount === 0) {
            console.log('\\n‚ùå ÁµêË´ñ: CanvasË¶ÅÁ¥†„Åå‰ΩúÊàê„Åï„Çå„Å¶„ÅÑ„Å™„ÅÑ');
            console.log('‰∏ª„Å™ÂéüÂõ†ÂÄôË£ú:');
            console.log('1. ScoreVisualization.createComparisonChart()Êú™ÂÆüË°å');
            console.log('2. Chart.jsÂàùÊúüÂåñÂ§±Êïó');
            console.log('3. CSP„Å´„Çà„ÇãCanvasÊìç‰ΩúÂà∂Èôê');
        } else {
            console.log(`\\n‚úÖ ÁµêË´ñ: CanvasË¶ÅÁ¥†„ÅØ${result.canvasCount}ÂÄã‰ΩúÊàê„Åï„Çå„Å¶„ÅÑ„Çã`);
            console.log('Ê§úÁ¥¢„ÉªË°®Á§∫„ÅÆÂïèÈ°å„ÅÆÂèØËÉΩÊÄß');
        }
    }
}).catch(console.error);